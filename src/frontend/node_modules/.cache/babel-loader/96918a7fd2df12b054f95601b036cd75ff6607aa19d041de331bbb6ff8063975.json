{"ast":null,"code":"import { vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.text = $event),\n    onInput: _cache[1] || (_cache[1] = $event => $options.updateInput(_ctx.text))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)), [[_vModelText, _ctx.text]]);\n}","map":{"version":3,"mappings":";;wCACEA,oBAA6D;IAAtDC,IAAI,EAAC,MAAM;+DAAUC,SAAI;IAAGC,OAAK,sCAAEC,oBAAW,CAACF,SAAI;kEAA9BA,SAAI","names":["_createElementBlock","type","_ctx","onInput","$options"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\bulletin\\src\\components\\MainInput.vue"],"sourcesContent":["<template>\r\n  <input type=\"text\" v-model=\"text\" @input=\"updateInput(text)\">\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n name: 'MainInput',\r\n\r\n data:() => ({\r\n  text: ''\r\n }),\r\n\r\n methods: {\r\n  updateInput() {\r\n   this.$emit('inputValue', this.text)\r\n  }\r\n },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}