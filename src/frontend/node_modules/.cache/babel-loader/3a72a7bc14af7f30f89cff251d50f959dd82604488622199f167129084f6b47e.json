{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar util_1 = require(\"zrender/lib/core/util\");\nvar Group_1 = require(\"zrender/lib/graphic/Group\");\nvar componentUtil = require(\"../util/component\");\nvar clazzUtil = require(\"../util/clazz\");\nvar modelUtil = require(\"../util/model\");\nvar states_1 = require(\"../util/states\");\nvar task_1 = require(\"../stream/task\");\nvar createRenderPlanner_1 = require(\"../chart/helper/createRenderPlanner\");\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner_1[\"default\"]();\nvar ChartView = function () {\n  function ChartView() {\n    this.group = new Group_1[\"default\"]();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = task_1.createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n  ChartView.prototype.init = function (ecModel, api) {};\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {};\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  };\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  };\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n  ChartView.prototype.dispose = function (ecModel, api) {};\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n  return ChartView;\n}();\n;\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    (state === 'emphasis' ? states_1.enterEmphasis : states_1.leaveEmphasis)(el, highlightDigit);\n  }\n}\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? states_1.getHighlightDigit(payload.highlightKey) : null;\n  if (dataIndex != null) {\n    util_1.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView, {\n  registerWhenExtend: true\n});\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload;\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n  return progressMethodMap[methodName];\n}\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexports[\"default\"] = ChartView;","map":{"version":3,"names":["exports","__esModule","util_1","require","Group_1","componentUtil","clazzUtil","modelUtil","states_1","task_1","createRenderPlanner_1","inner","makeInner","renderPlanner","ChartView","group","uid","getUID","renderTask","createTask","plan","renderTaskPlan","reset","renderTaskReset","context","view","prototype","init","ecModel","api","render","seriesModel","payload","highlight","toggleHighlight","getData","downplay","remove","removeAll","dispose","updateView","updateLayout","updateVisual","markUpdateMethod","methodName","updateMethod","protoInitialize","proto","type","elSetState","el","state","highlightDigit","enterEmphasis","leaveEmphasis","data","dataIndex","queryDataIndex","highlightKey","getHighlightDigit","each","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","enableClassExtend","enableClassManagement","registerWhenExtend","model","progressiveRender","pipelineContext","progressMethodMap","incrementalPrepareRender","progress","params","incrementalRender","forceFirstProgress"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/view/Chart.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar Group_1 = require(\"zrender/lib/graphic/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar states_1 = require(\"../util/states\");\n\nvar task_1 = require(\"../stream/task\");\n\nvar createRenderPlanner_1 = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner_1[\"default\"]();\n\nvar ChartView = function () {\n  function ChartView() {\n    this.group = new Group_1[\"default\"]();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = task_1.createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n\n  ChartView.prototype.init = function (ecModel, api) {};\n\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {};\n\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  };\n\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  };\n\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n\n  ChartView.prototype.dispose = function (ecModel, api) {};\n\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n\n  return ChartView;\n}();\n\n;\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    (state === 'emphasis' ? states_1.enterEmphasis : states_1.leaveEmphasis)(el, highlightDigit);\n  }\n}\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? states_1.getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    util_1.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\n\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView, {\n  registerWhenExtend: true\n});\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload;\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexports[\"default\"] = ChartView;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}