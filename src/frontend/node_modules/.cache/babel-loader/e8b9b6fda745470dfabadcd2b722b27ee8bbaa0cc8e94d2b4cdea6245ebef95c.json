{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar vector_1 = require(\"../../core/vector\");\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min;\n  var max;\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n    for (var i = 0, len = points.length; i < len; i++) {\n      vector_1.min(min, min, points[i]);\n      vector_1.max(max, max, points[i]);\n    }\n    vector_1.min(min, min, constraint[0]);\n    vector_1.max(max, max, constraint[1]);\n  }\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(vector_1.clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n    vector_1.sub(v, nextPoint, prevPoint);\n    vector_1.scale(v, v, smooth);\n    var d0 = vector_1.distance(point, prevPoint);\n    var d1 = vector_1.distance(point, nextPoint);\n    var sum = d0 + d1;\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n    vector_1.scale(v1, v, -d0);\n    vector_1.scale(v2, v, d1);\n    var cp0 = vector_1.add([], point, v1);\n    var cp1 = vector_1.add([], point, v2);\n    if (constraint) {\n      vector_1.max(cp0, cp0, min);\n      vector_1.min(cp0, cp0, max);\n      vector_1.max(cp1, cp1, min);\n      vector_1.min(cp1, cp1, max);\n    }\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n  return cps;\n}\nexports[\"default\"] = smoothBezier;","map":{"version":3,"names":["exports","__esModule","vector_1","require","smoothBezier","points","smooth","isLoop","constraint","cps","v","v1","v2","prevPoint","nextPoint","min","max","Infinity","i","len","length","point","push","clone","sub","scale","d0","distance","d1","sum","cp0","add","cp1","shift"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/zrender/lib/graphic/helper/smoothBezier.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar vector_1 = require(\"../../core/vector\");\nfunction smoothBezier(points, smooth, isLoop, constraint) {\n    var cps = [];\n    var v = [];\n    var v1 = [];\n    var v2 = [];\n    var prevPoint;\n    var nextPoint;\n    var min;\n    var max;\n    if (constraint) {\n        min = [Infinity, Infinity];\n        max = [-Infinity, -Infinity];\n        for (var i = 0, len = points.length; i < len; i++) {\n            vector_1.min(min, min, points[i]);\n            vector_1.max(max, max, points[i]);\n        }\n        vector_1.min(min, min, constraint[0]);\n        vector_1.max(max, max, constraint[1]);\n    }\n    for (var i = 0, len = points.length; i < len; i++) {\n        var point = points[i];\n        if (isLoop) {\n            prevPoint = points[i ? i - 1 : len - 1];\n            nextPoint = points[(i + 1) % len];\n        }\n        else {\n            if (i === 0 || i === len - 1) {\n                cps.push(vector_1.clone(points[i]));\n                continue;\n            }\n            else {\n                prevPoint = points[i - 1];\n                nextPoint = points[i + 1];\n            }\n        }\n        vector_1.sub(v, nextPoint, prevPoint);\n        vector_1.scale(v, v, smooth);\n        var d0 = vector_1.distance(point, prevPoint);\n        var d1 = vector_1.distance(point, nextPoint);\n        var sum = d0 + d1;\n        if (sum !== 0) {\n            d0 /= sum;\n            d1 /= sum;\n        }\n        vector_1.scale(v1, v, -d0);\n        vector_1.scale(v2, v, d1);\n        var cp0 = vector_1.add([], point, v1);\n        var cp1 = vector_1.add([], point, v2);\n        if (constraint) {\n            vector_1.max(cp0, cp0, min);\n            vector_1.min(cp0, cp0, max);\n            vector_1.max(cp1, cp1, min);\n            vector_1.min(cp1, cp1, max);\n        }\n        cps.push(cp0);\n        cps.push(cp1);\n    }\n    if (isLoop) {\n        cps.push(cps.shift());\n    }\n    return cps;\n}\nexports[\"default\"] = smoothBezier;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}