{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar Displayable_1 = require(\"../graphic/Displayable\");\nvar PathProxy_1 = require(\"../core/PathProxy\");\nvar image_1 = require(\"../graphic/helper/image\");\nvar helper_1 = require(\"./helper\");\nvar Path_1 = require(\"../graphic/Path\");\nvar Image_1 = require(\"../graphic/Image\");\nvar TSpan_1 = require(\"../graphic/TSpan\");\nvar text_1 = require(\"../contain/text\");\nvar export_1 = require(\"../export\");\nvar util_1 = require(\"../core/util\");\nvar dashStyle_1 = require(\"../graphic/helper/dashStyle\");\nvar Element_1 = require(\"../Element\");\nvar pathProxyForDraw = new PathProxy_1[\"default\"](true);\nfunction styleHasStroke(style) {\n  var stroke = style.stroke;\n  return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n}\nfunction styleHasFill(style) {\n  var fill = style.fill;\n  return fill != null && fill !== 'none';\n}\nfunction doFillPath(ctx, style) {\n  if (style.fillOpacity != null && style.fillOpacity !== 1) {\n    var originalGlobalAlpha = ctx.globalAlpha;\n    ctx.globalAlpha = style.fillOpacity * style.opacity;\n    ctx.fill();\n    ctx.globalAlpha = originalGlobalAlpha;\n  } else {\n    ctx.fill();\n  }\n}\nfunction doStrokePath(ctx, style) {\n  if (style.strokeOpacity != null && style.strokeOpacity !== 1) {\n    var originalGlobalAlpha = ctx.globalAlpha;\n    ctx.globalAlpha = style.strokeOpacity * style.opacity;\n    ctx.stroke();\n    ctx.globalAlpha = originalGlobalAlpha;\n  } else {\n    ctx.stroke();\n  }\n}\nfunction createCanvasPattern(ctx, pattern, el) {\n  var image = image_1.createOrUpdateImage(pattern.image, pattern.__image, el);\n  if (image_1.isImageReady(image)) {\n    var canvasPattern = ctx.createPattern(image, pattern.repeat || 'repeat');\n    if (typeof DOMMatrix === 'function') {\n      var matrix = new DOMMatrix();\n      matrix.rotateSelf(0, 0, (pattern.rotation || 0) / Math.PI * 180);\n      matrix.scaleSelf(pattern.scaleX || 1, pattern.scaleY || 1);\n      matrix.translateSelf(pattern.x || 0, pattern.y || 0);\n      canvasPattern.setTransform(matrix);\n    }\n    return canvasPattern;\n  }\n}\nexports.createCanvasPattern = createCanvasPattern;\nfunction brushPath(ctx, el, style, inBatch) {\n  var hasStroke = styleHasStroke(style);\n  var hasFill = styleHasFill(style);\n  var strokePercent = style.strokePercent;\n  var strokePart = strokePercent < 1;\n  var firstDraw = !el.path;\n  if ((!el.silent || strokePart) && firstDraw) {\n    el.createPathProxy();\n  }\n  var path = el.path || pathProxyForDraw;\n  if (!inBatch) {\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    var fillGradient = void 0;\n    var strokeGradient = void 0;\n    var fillPattern = void 0;\n    var strokePattern = void 0;\n    var rect = void 0;\n    if (hasFillGradient || hasStrokeGradient) {\n      rect = el.getBoundingRect();\n    }\n    if (hasFillGradient) {\n      fillGradient = el.__dirty ? helper_1.getCanvasGradient(ctx, fill, rect) : el.__canvasFillGradient;\n      el.__canvasFillGradient = fillGradient;\n    }\n    if (hasStrokeGradient) {\n      strokeGradient = el.__dirty ? helper_1.getCanvasGradient(ctx, stroke, rect) : el.__canvasStrokeGradient;\n      el.__canvasStrokeGradient = strokeGradient;\n    }\n    if (hasFillPattern) {\n      fillPattern = el.__dirty || !el.__canvasFillPattern ? createCanvasPattern(ctx, fill, el) : el.__canvasFillPattern;\n      el.__canvasFillPattern = fillPattern;\n    }\n    if (hasStrokePattern) {\n      strokePattern = el.__dirty || !el.__canvasStrokePattern ? createCanvasPattern(ctx, stroke, el) : el.__canvasStrokePattern;\n      el.__canvasStrokePattern = fillPattern;\n    }\n    if (hasFillGradient) {\n      ctx.fillStyle = fillGradient;\n    } else if (hasFillPattern) {\n      if (fillPattern) {\n        ctx.fillStyle = fillPattern;\n      } else {\n        hasFill = false;\n      }\n    }\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = strokeGradient;\n    } else if (hasStrokePattern) {\n      if (strokePattern) {\n        ctx.strokeStyle = strokePattern;\n      } else {\n        hasStroke = false;\n      }\n    }\n  }\n  var lineDash = style.lineDash && style.lineWidth > 0 && dashStyle_1.normalizeLineDash(style.lineDash, style.lineWidth);\n  var lineDashOffset = style.lineDashOffset;\n  var ctxLineDash = !!ctx.setLineDash;\n  var scale = el.getGlobalScale();\n  path.setScale(scale[0], scale[1], el.segmentIgnoreThreshold);\n  if (lineDash) {\n    var lineScale_1 = style.strokeNoScale && el.getLineScale ? el.getLineScale() : 1;\n    if (lineScale_1 && lineScale_1 !== 1) {\n      lineDash = util_1.map(lineDash, function (rawVal) {\n        return rawVal / lineScale_1;\n      });\n      lineDashOffset /= lineScale_1;\n    }\n  }\n  var needsRebuild = true;\n  if (firstDraw || el.__dirty & Path_1[\"default\"].SHAPE_CHANGED_BIT || lineDash && !ctxLineDash && hasStroke) {\n    path.setDPR(ctx.dpr);\n    if (strokePart) {\n      path.setContext(null);\n    } else {\n      path.setContext(ctx);\n      needsRebuild = false;\n    }\n    path.reset();\n    if (lineDash && !ctxLineDash) {\n      path.setLineDash(lineDash);\n      path.setLineDashOffset(lineDashOffset);\n    }\n    el.buildPath(path, el.shape, inBatch);\n    path.toStatic();\n    el.pathUpdated();\n  }\n  if (needsRebuild) {\n    path.rebuildPath(ctx, strokePart ? strokePercent : 1);\n  }\n  if (lineDash && ctxLineDash) {\n    ctx.setLineDash(lineDash);\n    ctx.lineDashOffset = lineDashOffset;\n  }\n  if (!inBatch) {\n    if (style.strokeFirst) {\n      if (hasStroke) {\n        doStrokePath(ctx, style);\n      }\n      if (hasFill) {\n        doFillPath(ctx, style);\n      }\n    } else {\n      if (hasFill) {\n        doFillPath(ctx, style);\n      }\n      if (hasStroke) {\n        doStrokePath(ctx, style);\n      }\n    }\n  }\n  if (lineDash && ctxLineDash) {\n    ctx.setLineDash([]);\n  }\n}\nfunction brushImage(ctx, el, style) {\n  var image = el.__image = image_1.createOrUpdateImage(style.image, el.__image, el, el.onload);\n  if (!image || !image_1.isImageReady(image)) {\n    return;\n  }\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var width = el.getWidth();\n  var height = el.getHeight();\n  var aspect = image.width / image.height;\n  if (width == null && height != null) {\n    width = height * aspect;\n  } else if (height == null && width != null) {\n    height = width / aspect;\n  } else if (width == null && height == null) {\n    width = image.width;\n    height = image.height;\n  }\n  if (style.sWidth && style.sHeight) {\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n  } else if (style.sx && style.sy) {\n    var sx = style.sx;\n    var sy = style.sy;\n    var sWidth = width - sx;\n    var sHeight = height - sy;\n    ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n  } else {\n    ctx.drawImage(image, x, y, width, height);\n  }\n}\nfunction brushText(ctx, el, style) {\n  var text = style.text;\n  text != null && (text += '');\n  if (text) {\n    ctx.font = style.font || text_1.DEFAULT_FONT;\n    ctx.textAlign = style.textAlign;\n    ctx.textBaseline = style.textBaseline;\n    var hasLineDash = void 0;\n    if (ctx.setLineDash) {\n      var lineDash = style.lineDash && style.lineWidth > 0 && dashStyle_1.normalizeLineDash(style.lineDash, style.lineWidth);\n      var lineDashOffset = style.lineDashOffset;\n      if (lineDash) {\n        var lineScale_2 = style.strokeNoScale && el.getLineScale ? el.getLineScale() : 1;\n        if (lineScale_2 && lineScale_2 !== 1) {\n          lineDash = util_1.map(lineDash, function (rawVal) {\n            return rawVal / lineScale_2;\n          });\n          lineDashOffset /= lineScale_2;\n        }\n        ctx.setLineDash(lineDash);\n        ctx.lineDashOffset = lineDashOffset;\n        hasLineDash = true;\n      }\n    }\n    if (style.strokeFirst) {\n      if (styleHasStroke(style)) {\n        ctx.strokeText(text, style.x, style.y);\n      }\n      if (styleHasFill(style)) {\n        ctx.fillText(text, style.x, style.y);\n      }\n    } else {\n      if (styleHasFill(style)) {\n        ctx.fillText(text, style.x, style.y);\n      }\n      if (styleHasStroke(style)) {\n        ctx.strokeText(text, style.x, style.y);\n      }\n    }\n    if (hasLineDash) {\n      ctx.setLineDash([]);\n    }\n  }\n}\nvar SHADOW_NUMBER_PROPS = ['shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\nvar STROKE_PROPS = [['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]];\nfunction bindCommonProps(ctx, style, prevStyle, forceSetAll, scope) {\n  var styleChanged = false;\n  if (!forceSetAll) {\n    prevStyle = prevStyle || {};\n    if (style === prevStyle) {\n      return false;\n    }\n  }\n  if (forceSetAll || style.opacity !== prevStyle.opacity) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.globalAlpha = style.opacity == null ? Displayable_1.DEFAULT_COMMON_STYLE.opacity : style.opacity;\n  }\n  if (forceSetAll || style.blend !== prevStyle.blend) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.globalCompositeOperation = style.blend || Displayable_1.DEFAULT_COMMON_STYLE.blend;\n  }\n  for (var i = 0; i < SHADOW_NUMBER_PROPS.length; i++) {\n    var propName = SHADOW_NUMBER_PROPS[i];\n    if (forceSetAll || style[propName] !== prevStyle[propName]) {\n      if (!styleChanged) {\n        flushPathDrawn(ctx, scope);\n        styleChanged = true;\n      }\n      ctx[propName] = ctx.dpr * (style[propName] || 0);\n    }\n  }\n  if (forceSetAll || style.shadowColor !== prevStyle.shadowColor) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.shadowColor = style.shadowColor || Displayable_1.DEFAULT_COMMON_STYLE.shadowColor;\n  }\n  return styleChanged;\n}\nfunction bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetAll, scope) {\n  var style = getStyle(el, scope.inHover);\n  var prevStyle = forceSetAll ? null : prevEl && getStyle(prevEl, scope.inHover) || {};\n  if (style === prevStyle) {\n    return false;\n  }\n  var styleChanged = bindCommonProps(ctx, style, prevStyle, forceSetAll, scope);\n  if (forceSetAll || style.fill !== prevStyle.fill) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.fillStyle = style.fill;\n  }\n  if (forceSetAll || style.stroke !== prevStyle.stroke) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.strokeStyle = style.stroke;\n  }\n  if (forceSetAll || style.opacity !== prevStyle.opacity) {\n    if (!styleChanged) {\n      flushPathDrawn(ctx, scope);\n      styleChanged = true;\n    }\n    ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n  }\n  if (el.hasStroke()) {\n    var lineWidth = style.lineWidth;\n    var newLineWidth = lineWidth / (style.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    if (ctx.lineWidth !== newLineWidth) {\n      if (!styleChanged) {\n        flushPathDrawn(ctx, scope);\n        styleChanged = true;\n      }\n      ctx.lineWidth = newLineWidth;\n    }\n  }\n  for (var i = 0; i < STROKE_PROPS.length; i++) {\n    var prop = STROKE_PROPS[i];\n    var propName = prop[0];\n    if (forceSetAll || style[propName] !== prevStyle[propName]) {\n      if (!styleChanged) {\n        flushPathDrawn(ctx, scope);\n        styleChanged = true;\n      }\n      ctx[propName] = style[propName] || prop[1];\n    }\n  }\n  return styleChanged;\n}\nfunction bindImageStyle(ctx, el, prevEl, forceSetAll, scope) {\n  return bindCommonProps(ctx, getStyle(el, scope.inHover), prevEl && getStyle(prevEl, scope.inHover), forceSetAll, scope);\n}\nfunction setContextTransform(ctx, el) {\n  var m = el.transform;\n  var dpr = ctx.dpr || 1;\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n}\nfunction updateClipStatus(clipPaths, ctx, scope) {\n  var allClipped = false;\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    allClipped = allClipped || clipPath.isZeroArea();\n    setContextTransform(ctx, clipPath);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip();\n  }\n  scope.allClipped = allClipped;\n}\nfunction isTransformChanged(m0, m1) {\n  if (m0 && m1) {\n    return m0[0] !== m1[0] || m0[1] !== m1[1] || m0[2] !== m1[2] || m0[3] !== m1[3] || m0[4] !== m1[4] || m0[5] !== m1[5];\n  } else if (!m0 && !m1) {\n    return false;\n  }\n  return true;\n}\nvar DRAW_TYPE_PATH = 1;\nvar DRAW_TYPE_IMAGE = 2;\nvar DRAW_TYPE_TEXT = 3;\nvar DRAW_TYPE_INCREMENTAL = 4;\nfunction canPathBatch(style) {\n  var hasFill = styleHasFill(style);\n  var hasStroke = styleHasStroke(style);\n  return !(style.lineDash || !(+hasFill ^ +hasStroke) || hasFill && typeof style.fill !== 'string' || hasStroke && typeof style.stroke !== 'string' || style.strokePercent < 1 || style.strokeOpacity < 1 || style.fillOpacity < 1);\n}\nfunction flushPathDrawn(ctx, scope) {\n  scope.batchFill && ctx.fill();\n  scope.batchStroke && ctx.stroke();\n  scope.batchFill = '';\n  scope.batchStroke = '';\n}\nfunction getStyle(el, inHover) {\n  return inHover ? el.__hoverStyle || el.style : el.style;\n}\nfunction brushSingle(ctx, el) {\n  brush(ctx, el, {\n    inHover: false,\n    viewWidth: 0,\n    viewHeight: 0\n  }, true);\n}\nexports.brushSingle = brushSingle;\nfunction brush(ctx, el, scope, isLast) {\n  var m = el.transform;\n  if (!el.shouldBePainted(scope.viewWidth, scope.viewHeight, false, false)) {\n    el.__dirty &= ~Element_1[\"default\"].REDARAW_BIT;\n    el.__isRendered = false;\n    return;\n  }\n  var clipPaths = el.__clipPaths;\n  var prevElClipPaths = scope.prevElClipPaths;\n  var forceSetTransform = false;\n  var forceSetStyle = false;\n  if (!prevElClipPaths || helper_1.isClipPathChanged(clipPaths, prevElClipPaths)) {\n    if (prevElClipPaths && prevElClipPaths.length) {\n      flushPathDrawn(ctx, scope);\n      ctx.restore();\n      forceSetStyle = forceSetTransform = true;\n      scope.prevElClipPaths = null;\n      scope.allClipped = false;\n      scope.prevEl = null;\n    }\n    if (clipPaths && clipPaths.length) {\n      flushPathDrawn(ctx, scope);\n      ctx.save();\n      updateClipStatus(clipPaths, ctx, scope);\n      forceSetTransform = true;\n    }\n    scope.prevElClipPaths = clipPaths;\n  }\n  if (scope.allClipped) {\n    el.__isRendered = false;\n    return;\n  }\n  el.beforeBrush && el.beforeBrush();\n  el.innerBeforeBrush();\n  var prevEl = scope.prevEl;\n  if (!prevEl) {\n    forceSetStyle = forceSetTransform = true;\n  }\n  var canBatchPath = el instanceof Path_1[\"default\"] && el.autoBatch && canPathBatch(el.style);\n  if (forceSetTransform || isTransformChanged(m, prevEl.transform)) {\n    flushPathDrawn(ctx, scope);\n    setContextTransform(ctx, el);\n  } else if (!canBatchPath) {\n    flushPathDrawn(ctx, scope);\n  }\n  var style = getStyle(el, scope.inHover);\n  if (el instanceof Path_1[\"default\"]) {\n    if (scope.lastDrawType !== DRAW_TYPE_PATH) {\n      forceSetStyle = true;\n      scope.lastDrawType = DRAW_TYPE_PATH;\n    }\n    bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n    if (!canBatchPath || !scope.batchFill && !scope.batchStroke) {\n      ctx.beginPath();\n    }\n    brushPath(ctx, el, style, canBatchPath);\n    if (canBatchPath) {\n      scope.batchFill = style.fill || '';\n      scope.batchStroke = style.stroke || '';\n    }\n  } else {\n    if (el instanceof TSpan_1[\"default\"]) {\n      if (scope.lastDrawType !== DRAW_TYPE_TEXT) {\n        forceSetStyle = true;\n        scope.lastDrawType = DRAW_TYPE_TEXT;\n      }\n      bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n      brushText(ctx, el, style);\n    } else if (el instanceof Image_1[\"default\"]) {\n      if (scope.lastDrawType !== DRAW_TYPE_IMAGE) {\n        forceSetStyle = true;\n        scope.lastDrawType = DRAW_TYPE_IMAGE;\n      }\n      bindImageStyle(ctx, el, prevEl, forceSetStyle, scope);\n      brushImage(ctx, el, style);\n    } else if (el instanceof export_1.IncrementalDisplayable) {\n      if (scope.lastDrawType !== DRAW_TYPE_INCREMENTAL) {\n        forceSetStyle = true;\n        scope.lastDrawType = DRAW_TYPE_INCREMENTAL;\n      }\n      brushIncremental(ctx, el, scope);\n    }\n  }\n  if (canBatchPath && isLast) {\n    flushPathDrawn(ctx, scope);\n  }\n  el.innerAfterBrush();\n  el.afterBrush && el.afterBrush();\n  scope.prevEl = el;\n  el.__dirty = 0;\n  el.__isRendered = true;\n}\nexports.brush = brush;\nfunction brushIncremental(ctx, el, scope) {\n  var displayables = el.getDisplayables();\n  var temporalDisplayables = el.getTemporalDisplayables();\n  ctx.save();\n  var innerScope = {\n    prevElClipPaths: null,\n    prevEl: null,\n    allClipped: false,\n    viewWidth: scope.viewWidth,\n    viewHeight: scope.viewHeight,\n    inHover: scope.inHover\n  };\n  var i;\n  var len;\n  for (i = el.getCursor(), len = displayables.length; i < len; i++) {\n    var displayable = displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush();\n    displayable.innerBeforeBrush();\n    brush(ctx, displayable, innerScope, i === len - 1);\n    displayable.innerAfterBrush();\n    displayable.afterBrush && displayable.afterBrush();\n    innerScope.prevEl = displayable;\n  }\n  for (var i_1 = 0, len_1 = temporalDisplayables.length; i_1 < len_1; i_1++) {\n    var displayable = temporalDisplayables[i_1];\n    displayable.beforeBrush && displayable.beforeBrush();\n    displayable.innerBeforeBrush();\n    brush(ctx, displayable, innerScope, i_1 === len_1 - 1);\n    displayable.innerAfterBrush();\n    displayable.afterBrush && displayable.afterBrush();\n    innerScope.prevEl = displayable;\n  }\n  el.clearTemporalDisplayables();\n  el.notClear = true;\n  ctx.restore();\n}","map":{"version":3,"names":["exports","__esModule","Displayable_1","require","PathProxy_1","image_1","helper_1","Path_1","Image_1","TSpan_1","text_1","export_1","util_1","dashStyle_1","Element_1","pathProxyForDraw","styleHasStroke","style","stroke","lineWidth","styleHasFill","fill","doFillPath","ctx","fillOpacity","originalGlobalAlpha","globalAlpha","opacity","doStrokePath","strokeOpacity","createCanvasPattern","pattern","el","image","createOrUpdateImage","__image","isImageReady","canvasPattern","createPattern","repeat","DOMMatrix","matrix","rotateSelf","rotation","Math","PI","scaleSelf","scaleX","scaleY","translateSelf","x","y","setTransform","brushPath","inBatch","hasStroke","hasFill","strokePercent","strokePart","firstDraw","path","silent","createPathProxy","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","fillGradient","strokeGradient","fillPattern","strokePattern","rect","getBoundingRect","__dirty","getCanvasGradient","__canvasFillGradient","__canvasStrokeGradient","__canvasFillPattern","__canvasStrokePattern","fillStyle","strokeStyle","lineDash","normalizeLineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","segmentIgnoreThreshold","lineScale_1","strokeNoScale","getLineScale","map","rawVal","needsRebuild","SHAPE_CHANGED_BIT","setDPR","dpr","setContext","reset","setLineDashOffset","buildPath","shape","toStatic","pathUpdated","rebuildPath","strokeFirst","brushImage","onload","width","getWidth","height","getHeight","aspect","sWidth","sHeight","sx","sy","drawImage","brushText","text","font","DEFAULT_FONT","textAlign","textBaseline","hasLineDash","lineScale_2","strokeText","fillText","SHADOW_NUMBER_PROPS","STROKE_PROPS","bindCommonProps","prevStyle","forceSetAll","scope","styleChanged","flushPathDrawn","DEFAULT_COMMON_STYLE","blend","globalCompositeOperation","i","length","propName","shadowColor","bindPathAndTextCommonStyle","prevEl","getStyle","inHover","newLineWidth","prop","bindImageStyle","setContextTransform","m","transform","updateClipStatus","clipPaths","allClipped","clipPath","isZeroArea","beginPath","clip","isTransformChanged","m0","m1","DRAW_TYPE_PATH","DRAW_TYPE_IMAGE","DRAW_TYPE_TEXT","DRAW_TYPE_INCREMENTAL","canPathBatch","batchFill","batchStroke","__hoverStyle","brushSingle","brush","viewWidth","viewHeight","isLast","shouldBePainted","REDARAW_BIT","__isRendered","__clipPaths","prevElClipPaths","forceSetTransform","forceSetStyle","isClipPathChanged","restore","save","beforeBrush","innerBeforeBrush","canBatchPath","autoBatch","lastDrawType","IncrementalDisplayable","brushIncremental","innerAfterBrush","afterBrush","displayables","getDisplayables","temporalDisplayables","getTemporalDisplayables","innerScope","len","getCursor","displayable","i_1","len_1","clearTemporalDisplayables","notClear"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/zrender/lib/canvas/graphic.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar Displayable_1 = require(\"../graphic/Displayable\");\nvar PathProxy_1 = require(\"../core/PathProxy\");\nvar image_1 = require(\"../graphic/helper/image\");\nvar helper_1 = require(\"./helper\");\nvar Path_1 = require(\"../graphic/Path\");\nvar Image_1 = require(\"../graphic/Image\");\nvar TSpan_1 = require(\"../graphic/TSpan\");\nvar text_1 = require(\"../contain/text\");\nvar export_1 = require(\"../export\");\nvar util_1 = require(\"../core/util\");\nvar dashStyle_1 = require(\"../graphic/helper/dashStyle\");\nvar Element_1 = require(\"../Element\");\nvar pathProxyForDraw = new PathProxy_1[\"default\"](true);\nfunction styleHasStroke(style) {\n    var stroke = style.stroke;\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n}\nfunction styleHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n}\nfunction doFillPath(ctx, style) {\n    if (style.fillOpacity != null && style.fillOpacity !== 1) {\n        var originalGlobalAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = style.fillOpacity * style.opacity;\n        ctx.fill();\n        ctx.globalAlpha = originalGlobalAlpha;\n    }\n    else {\n        ctx.fill();\n    }\n}\nfunction doStrokePath(ctx, style) {\n    if (style.strokeOpacity != null && style.strokeOpacity !== 1) {\n        var originalGlobalAlpha = ctx.globalAlpha;\n        ctx.globalAlpha = style.strokeOpacity * style.opacity;\n        ctx.stroke();\n        ctx.globalAlpha = originalGlobalAlpha;\n    }\n    else {\n        ctx.stroke();\n    }\n}\nfunction createCanvasPattern(ctx, pattern, el) {\n    var image = image_1.createOrUpdateImage(pattern.image, pattern.__image, el);\n    if (image_1.isImageReady(image)) {\n        var canvasPattern = ctx.createPattern(image, pattern.repeat || 'repeat');\n        if (typeof DOMMatrix === 'function') {\n            var matrix = new DOMMatrix();\n            matrix.rotateSelf(0, 0, (pattern.rotation || 0) / Math.PI * 180);\n            matrix.scaleSelf((pattern.scaleX || 1), (pattern.scaleY || 1));\n            matrix.translateSelf((pattern.x || 0), (pattern.y || 0));\n            canvasPattern.setTransform(matrix);\n        }\n        return canvasPattern;\n    }\n}\nexports.createCanvasPattern = createCanvasPattern;\nfunction brushPath(ctx, el, style, inBatch) {\n    var hasStroke = styleHasStroke(style);\n    var hasFill = styleHasFill(style);\n    var strokePercent = style.strokePercent;\n    var strokePart = strokePercent < 1;\n    var firstDraw = !el.path;\n    if ((!el.silent || strokePart) && firstDraw) {\n        el.createPathProxy();\n    }\n    var path = el.path || pathProxyForDraw;\n    if (!inBatch) {\n        var fill = style.fill;\n        var stroke = style.stroke;\n        var hasFillGradient = hasFill && !!fill.colorStops;\n        var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n        var hasFillPattern = hasFill && !!fill.image;\n        var hasStrokePattern = hasStroke && !!stroke.image;\n        var fillGradient = void 0;\n        var strokeGradient = void 0;\n        var fillPattern = void 0;\n        var strokePattern = void 0;\n        var rect = void 0;\n        if (hasFillGradient || hasStrokeGradient) {\n            rect = el.getBoundingRect();\n        }\n        if (hasFillGradient) {\n            fillGradient = el.__dirty\n                ? helper_1.getCanvasGradient(ctx, fill, rect)\n                : el.__canvasFillGradient;\n            el.__canvasFillGradient = fillGradient;\n        }\n        if (hasStrokeGradient) {\n            strokeGradient = el.__dirty\n                ? helper_1.getCanvasGradient(ctx, stroke, rect)\n                : el.__canvasStrokeGradient;\n            el.__canvasStrokeGradient = strokeGradient;\n        }\n        if (hasFillPattern) {\n            fillPattern = (el.__dirty || !el.__canvasFillPattern)\n                ? createCanvasPattern(ctx, fill, el)\n                : el.__canvasFillPattern;\n            el.__canvasFillPattern = fillPattern;\n        }\n        if (hasStrokePattern) {\n            strokePattern = (el.__dirty || !el.__canvasStrokePattern)\n                ? createCanvasPattern(ctx, stroke, el)\n                : el.__canvasStrokePattern;\n            el.__canvasStrokePattern = fillPattern;\n        }\n        if (hasFillGradient) {\n            ctx.fillStyle = fillGradient;\n        }\n        else if (hasFillPattern) {\n            if (fillPattern) {\n                ctx.fillStyle = fillPattern;\n            }\n            else {\n                hasFill = false;\n            }\n        }\n        if (hasStrokeGradient) {\n            ctx.strokeStyle = strokeGradient;\n        }\n        else if (hasStrokePattern) {\n            if (strokePattern) {\n                ctx.strokeStyle = strokePattern;\n            }\n            else {\n                hasStroke = false;\n            }\n        }\n    }\n    var lineDash = style.lineDash && style.lineWidth > 0 && dashStyle_1.normalizeLineDash(style.lineDash, style.lineWidth);\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash;\n    var scale = el.getGlobalScale();\n    path.setScale(scale[0], scale[1], el.segmentIgnoreThreshold);\n    if (lineDash) {\n        var lineScale_1 = (style.strokeNoScale && el.getLineScale) ? el.getLineScale() : 1;\n        if (lineScale_1 && lineScale_1 !== 1) {\n            lineDash = util_1.map(lineDash, function (rawVal) {\n                return rawVal / lineScale_1;\n            });\n            lineDashOffset /= lineScale_1;\n        }\n    }\n    var needsRebuild = true;\n    if (firstDraw || (el.__dirty & Path_1[\"default\"].SHAPE_CHANGED_BIT)\n        || (lineDash && !ctxLineDash && hasStroke)) {\n        path.setDPR(ctx.dpr);\n        if (strokePart) {\n            path.setContext(null);\n        }\n        else {\n            path.setContext(ctx);\n            needsRebuild = false;\n        }\n        path.reset();\n        if (lineDash && !ctxLineDash) {\n            path.setLineDash(lineDash);\n            path.setLineDashOffset(lineDashOffset);\n        }\n        el.buildPath(path, el.shape, inBatch);\n        path.toStatic();\n        el.pathUpdated();\n    }\n    if (needsRebuild) {\n        path.rebuildPath(ctx, strokePart ? strokePercent : 1);\n    }\n    if (lineDash && ctxLineDash) {\n        ctx.setLineDash(lineDash);\n        ctx.lineDashOffset = lineDashOffset;\n    }\n    if (!inBatch) {\n        if (style.strokeFirst) {\n            if (hasStroke) {\n                doStrokePath(ctx, style);\n            }\n            if (hasFill) {\n                doFillPath(ctx, style);\n            }\n        }\n        else {\n            if (hasFill) {\n                doFillPath(ctx, style);\n            }\n            if (hasStroke) {\n                doStrokePath(ctx, style);\n            }\n        }\n    }\n    if (lineDash && ctxLineDash) {\n        ctx.setLineDash([]);\n    }\n}\nfunction brushImage(ctx, el, style) {\n    var image = el.__image = image_1.createOrUpdateImage(style.image, el.__image, el, el.onload);\n    if (!image || !image_1.isImageReady(image)) {\n        return;\n    }\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = el.getWidth();\n    var height = el.getHeight();\n    var aspect = image.width / image.height;\n    if (width == null && height != null) {\n        width = height * aspect;\n    }\n    else if (height == null && width != null) {\n        height = width / aspect;\n    }\n    else if (width == null && height == null) {\n        width = image.width;\n        height = image.height;\n    }\n    if (style.sWidth && style.sHeight) {\n        var sx = style.sx || 0;\n        var sy = style.sy || 0;\n        ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    }\n    else if (style.sx && style.sy) {\n        var sx = style.sx;\n        var sy = style.sy;\n        var sWidth = width - sx;\n        var sHeight = height - sy;\n        ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    }\n    else {\n        ctx.drawImage(image, x, y, width, height);\n    }\n}\nfunction brushText(ctx, el, style) {\n    var text = style.text;\n    text != null && (text += '');\n    if (text) {\n        ctx.font = style.font || text_1.DEFAULT_FONT;\n        ctx.textAlign = style.textAlign;\n        ctx.textBaseline = style.textBaseline;\n        var hasLineDash = void 0;\n        if (ctx.setLineDash) {\n            var lineDash = style.lineDash && style.lineWidth > 0 && dashStyle_1.normalizeLineDash(style.lineDash, style.lineWidth);\n            var lineDashOffset = style.lineDashOffset;\n            if (lineDash) {\n                var lineScale_2 = (style.strokeNoScale && el.getLineScale) ? el.getLineScale() : 1;\n                if (lineScale_2 && lineScale_2 !== 1) {\n                    lineDash = util_1.map(lineDash, function (rawVal) {\n                        return rawVal / lineScale_2;\n                    });\n                    lineDashOffset /= lineScale_2;\n                }\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n                hasLineDash = true;\n            }\n        }\n        if (style.strokeFirst) {\n            if (styleHasStroke(style)) {\n                ctx.strokeText(text, style.x, style.y);\n            }\n            if (styleHasFill(style)) {\n                ctx.fillText(text, style.x, style.y);\n            }\n        }\n        else {\n            if (styleHasFill(style)) {\n                ctx.fillText(text, style.x, style.y);\n            }\n            if (styleHasStroke(style)) {\n                ctx.strokeText(text, style.x, style.y);\n            }\n        }\n        if (hasLineDash) {\n            ctx.setLineDash([]);\n        }\n    }\n}\nvar SHADOW_NUMBER_PROPS = ['shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\nvar STROKE_PROPS = [\n    ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n];\nfunction bindCommonProps(ctx, style, prevStyle, forceSetAll, scope) {\n    var styleChanged = false;\n    if (!forceSetAll) {\n        prevStyle = prevStyle || {};\n        if (style === prevStyle) {\n            return false;\n        }\n    }\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.globalAlpha = style.opacity == null ? Displayable_1.DEFAULT_COMMON_STYLE.opacity : style.opacity;\n    }\n    if (forceSetAll || style.blend !== prevStyle.blend) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.globalCompositeOperation = style.blend || Displayable_1.DEFAULT_COMMON_STYLE.blend;\n    }\n    for (var i = 0; i < SHADOW_NUMBER_PROPS.length; i++) {\n        var propName = SHADOW_NUMBER_PROPS[i];\n        if (forceSetAll || style[propName] !== prevStyle[propName]) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx[propName] = ctx.dpr * (style[propName] || 0);\n        }\n    }\n    if (forceSetAll || style.shadowColor !== prevStyle.shadowColor) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.shadowColor = style.shadowColor || Displayable_1.DEFAULT_COMMON_STYLE.shadowColor;\n    }\n    return styleChanged;\n}\nfunction bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetAll, scope) {\n    var style = getStyle(el, scope.inHover);\n    var prevStyle = forceSetAll\n        ? null\n        : (prevEl && getStyle(prevEl, scope.inHover) || {});\n    if (style === prevStyle) {\n        return false;\n    }\n    var styleChanged = bindCommonProps(ctx, style, prevStyle, forceSetAll, scope);\n    if (forceSetAll || style.fill !== prevStyle.fill) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.fillStyle = style.fill;\n    }\n    if (forceSetAll || style.stroke !== prevStyle.stroke) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.strokeStyle = style.stroke;\n    }\n    if (forceSetAll || style.opacity !== prevStyle.opacity) {\n        if (!styleChanged) {\n            flushPathDrawn(ctx, scope);\n            styleChanged = true;\n        }\n        ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n    if (el.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var newLineWidth = lineWidth / ((style.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1);\n        if (ctx.lineWidth !== newLineWidth) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx.lineWidth = newLineWidth;\n        }\n    }\n    for (var i = 0; i < STROKE_PROPS.length; i++) {\n        var prop = STROKE_PROPS[i];\n        var propName = prop[0];\n        if (forceSetAll || style[propName] !== prevStyle[propName]) {\n            if (!styleChanged) {\n                flushPathDrawn(ctx, scope);\n                styleChanged = true;\n            }\n            ctx[propName] = style[propName] || prop[1];\n        }\n    }\n    return styleChanged;\n}\nfunction bindImageStyle(ctx, el, prevEl, forceSetAll, scope) {\n    return bindCommonProps(ctx, getStyle(el, scope.inHover), prevEl && getStyle(prevEl, scope.inHover), forceSetAll, scope);\n}\nfunction setContextTransform(ctx, el) {\n    var m = el.transform;\n    var dpr = ctx.dpr || 1;\n    if (m) {\n        ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n    }\n    else {\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n}\nfunction updateClipStatus(clipPaths, ctx, scope) {\n    var allClipped = false;\n    for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        allClipped = allClipped || clipPath.isZeroArea();\n        setContextTransform(ctx, clipPath);\n        ctx.beginPath();\n        clipPath.buildPath(ctx, clipPath.shape);\n        ctx.clip();\n    }\n    scope.allClipped = allClipped;\n}\nfunction isTransformChanged(m0, m1) {\n    if (m0 && m1) {\n        return m0[0] !== m1[0]\n            || m0[1] !== m1[1]\n            || m0[2] !== m1[2]\n            || m0[3] !== m1[3]\n            || m0[4] !== m1[4]\n            || m0[5] !== m1[5];\n    }\n    else if (!m0 && !m1) {\n        return false;\n    }\n    return true;\n}\nvar DRAW_TYPE_PATH = 1;\nvar DRAW_TYPE_IMAGE = 2;\nvar DRAW_TYPE_TEXT = 3;\nvar DRAW_TYPE_INCREMENTAL = 4;\nfunction canPathBatch(style) {\n    var hasFill = styleHasFill(style);\n    var hasStroke = styleHasStroke(style);\n    return !(style.lineDash\n        || !(+hasFill ^ +hasStroke)\n        || (hasFill && typeof style.fill !== 'string')\n        || (hasStroke && typeof style.stroke !== 'string')\n        || style.strokePercent < 1\n        || style.strokeOpacity < 1\n        || style.fillOpacity < 1);\n}\nfunction flushPathDrawn(ctx, scope) {\n    scope.batchFill && ctx.fill();\n    scope.batchStroke && ctx.stroke();\n    scope.batchFill = '';\n    scope.batchStroke = '';\n}\nfunction getStyle(el, inHover) {\n    return inHover ? (el.__hoverStyle || el.style) : el.style;\n}\nfunction brushSingle(ctx, el) {\n    brush(ctx, el, { inHover: false, viewWidth: 0, viewHeight: 0 }, true);\n}\nexports.brushSingle = brushSingle;\nfunction brush(ctx, el, scope, isLast) {\n    var m = el.transform;\n    if (!el.shouldBePainted(scope.viewWidth, scope.viewHeight, false, false)) {\n        el.__dirty &= ~Element_1[\"default\"].REDARAW_BIT;\n        el.__isRendered = false;\n        return;\n    }\n    var clipPaths = el.__clipPaths;\n    var prevElClipPaths = scope.prevElClipPaths;\n    var forceSetTransform = false;\n    var forceSetStyle = false;\n    if (!prevElClipPaths || helper_1.isClipPathChanged(clipPaths, prevElClipPaths)) {\n        if (prevElClipPaths && prevElClipPaths.length) {\n            flushPathDrawn(ctx, scope);\n            ctx.restore();\n            forceSetStyle = forceSetTransform = true;\n            scope.prevElClipPaths = null;\n            scope.allClipped = false;\n            scope.prevEl = null;\n        }\n        if (clipPaths && clipPaths.length) {\n            flushPathDrawn(ctx, scope);\n            ctx.save();\n            updateClipStatus(clipPaths, ctx, scope);\n            forceSetTransform = true;\n        }\n        scope.prevElClipPaths = clipPaths;\n    }\n    if (scope.allClipped) {\n        el.__isRendered = false;\n        return;\n    }\n    el.beforeBrush && el.beforeBrush();\n    el.innerBeforeBrush();\n    var prevEl = scope.prevEl;\n    if (!prevEl) {\n        forceSetStyle = forceSetTransform = true;\n    }\n    var canBatchPath = el instanceof Path_1[\"default\"]\n        && el.autoBatch\n        && canPathBatch(el.style);\n    if (forceSetTransform || isTransformChanged(m, prevEl.transform)) {\n        flushPathDrawn(ctx, scope);\n        setContextTransform(ctx, el);\n    }\n    else if (!canBatchPath) {\n        flushPathDrawn(ctx, scope);\n    }\n    var style = getStyle(el, scope.inHover);\n    if (el instanceof Path_1[\"default\"]) {\n        if (scope.lastDrawType !== DRAW_TYPE_PATH) {\n            forceSetStyle = true;\n            scope.lastDrawType = DRAW_TYPE_PATH;\n        }\n        bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n        if (!canBatchPath || (!scope.batchFill && !scope.batchStroke)) {\n            ctx.beginPath();\n        }\n        brushPath(ctx, el, style, canBatchPath);\n        if (canBatchPath) {\n            scope.batchFill = style.fill || '';\n            scope.batchStroke = style.stroke || '';\n        }\n    }\n    else {\n        if (el instanceof TSpan_1[\"default\"]) {\n            if (scope.lastDrawType !== DRAW_TYPE_TEXT) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_TEXT;\n            }\n            bindPathAndTextCommonStyle(ctx, el, prevEl, forceSetStyle, scope);\n            brushText(ctx, el, style);\n        }\n        else if (el instanceof Image_1[\"default\"]) {\n            if (scope.lastDrawType !== DRAW_TYPE_IMAGE) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_IMAGE;\n            }\n            bindImageStyle(ctx, el, prevEl, forceSetStyle, scope);\n            brushImage(ctx, el, style);\n        }\n        else if (el instanceof export_1.IncrementalDisplayable) {\n            if (scope.lastDrawType !== DRAW_TYPE_INCREMENTAL) {\n                forceSetStyle = true;\n                scope.lastDrawType = DRAW_TYPE_INCREMENTAL;\n            }\n            brushIncremental(ctx, el, scope);\n        }\n    }\n    if (canBatchPath && isLast) {\n        flushPathDrawn(ctx, scope);\n    }\n    el.innerAfterBrush();\n    el.afterBrush && el.afterBrush();\n    scope.prevEl = el;\n    el.__dirty = 0;\n    el.__isRendered = true;\n}\nexports.brush = brush;\nfunction brushIncremental(ctx, el, scope) {\n    var displayables = el.getDisplayables();\n    var temporalDisplayables = el.getTemporalDisplayables();\n    ctx.save();\n    var innerScope = {\n        prevElClipPaths: null,\n        prevEl: null,\n        allClipped: false,\n        viewWidth: scope.viewWidth,\n        viewHeight: scope.viewHeight,\n        inHover: scope.inHover\n    };\n    var i;\n    var len;\n    for (i = el.getCursor(), len = displayables.length; i < len; i++) {\n        var displayable = displayables[i];\n        displayable.beforeBrush && displayable.beforeBrush();\n        displayable.innerBeforeBrush();\n        brush(ctx, displayable, innerScope, i === len - 1);\n        displayable.innerAfterBrush();\n        displayable.afterBrush && displayable.afterBrush();\n        innerScope.prevEl = displayable;\n    }\n    for (var i_1 = 0, len_1 = temporalDisplayables.length; i_1 < len_1; i_1++) {\n        var displayable = temporalDisplayables[i_1];\n        displayable.beforeBrush && displayable.beforeBrush();\n        displayable.innerBeforeBrush();\n        brush(ctx, displayable, innerScope, i_1 === len_1 - 1);\n        displayable.innerAfterBrush();\n        displayable.afterBrush && displayable.afterBrush();\n        innerScope.prevEl = displayable;\n    }\n    el.clearTemporalDisplayables();\n    el.notClear = true;\n    ctx.restore();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}