{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar RADIAN_EPSILON = 1e-4;\nfunction _trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  }\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\nexports.linearMap = linearMap;\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n    return parseFloat(percent);\n  }\n  return percent == null ? NaN : +percent;\n}\nexports.parsePercent = parsePercent;\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  }\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\nexports.round = round;\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\nexports.asc = asc;\nfunction getPrecision(val) {\n  val = +val;\n  if (isNaN(val)) {\n    return 0;\n  }\n  var e = 1;\n  var count = 0;\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n  return count;\n}\nexports.getPrecision = getPrecision;\nfunction getPrecisionSafe(val) {\n  var str = val.toString();\n  var eIndex = str.indexOf('e');\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\nexports.getPrecisionSafe = getPrecisionSafe;\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\nexports.getPixelPrecision = getPixelPrecision;\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n  if (sum === 0) {\n    return 0;\n  }\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  });\n  while (currentSum < targetSeats) {\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    }\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n  return seats[idx] / digits;\n}\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = 9007199254740991;\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\nexports.remRadian = remRadian;\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\nexports.isRadianAroundZero = isRadianAroundZero;\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d{1,2})(?::(\\d{1,2})(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/;\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    var match = TIME_REG.exec(value);\n    if (!match) {\n      return new Date(NaN);\n    }\n    if (!match[8]) {\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } else {\n      var hour = +match[4] || 0;\n      if (match[8].toUpperCase() !== 'Z') {\n        hour -= +match[8].slice(0, 3);\n      }\n      return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n    }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n  return new Date(Math.round(value));\n}\nexports.parseDate = parseDate;\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\nexports.quantity = quantity;\nfunction quantityExponent(val) {\n  if (val === 0) {\n    return 0;\n  }\n  var exp = Math.floor(Math.log(val) / Math.LN10);\n  if (val / Math.pow(10, exp) >= 10) {\n    exp++;\n  }\n  return exp;\n}\nexports.quantityExponent = quantityExponent;\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10;\n  var nf;\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n  val = nf * exp10;\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\nexports.nice = nice;\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\nexports.quantile = quantile;\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close_1 = list[i].close;\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close_1[lg] = !lg ? 1 - currClose : 1;\n      }\n      curr = interval[lg];\n      currClose = close_1[lg];\n    }\n    if (interval[0] === interval[1] && close_1[0] * close_1[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return list;\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\nexports.reformIntervals = reformIntervals;\nfunction numericToNumber(val) {\n  var valFloat = parseFloat(val);\n  return valFloat == val && (valFloat !== 0 || typeof val !== 'string' || val.indexOf('x') <= 0) ? valFloat : NaN;\n}\nexports.numericToNumber = numericToNumber;\nfunction isNumeric(val) {\n  return !isNaN(numericToNumber(val));\n}\nexports.isNumeric = isNumeric;\nfunction getRandomIdBase() {\n  return Math.round(Math.random() * 9);\n}\nexports.getRandomIdBase = getRandomIdBase;\nfunction getGreatestCommonDividor(a, b) {\n  if (b === 0) {\n    return a;\n  }\n  return getGreatestCommonDividor(b, a % b);\n}\nexports.getGreatestCommonDividor = getGreatestCommonDividor;\nfunction getLeastCommonMultiple(a, b) {\n  if (a == null) {\n    return b;\n  }\n  if (b == null) {\n    return a;\n  }\n  return a * b / getGreatestCommonDividor(a, b);\n}\nexports.getLeastCommonMultiple = getLeastCommonMultiple;","map":{"version":3,"names":["exports","__esModule","zrUtil","require","RADIAN_EPSILON","_trim","str","replace","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","round","x","precision","returnStr","Math","min","max","toFixed","asc","arr","sort","a","b","getPrecision","isNaN","e","count","getPrecisionSafe","toString","eIndex","indexOf","slice","dotIndex","length","getPixelPrecision","dataExtent","pixelExtent","log","LN10","dataQuantity","floor","sizeQuantity","abs","isFinite","getPercentWithPrecision","valueList","idx","sum","reduce","acc","digits","pow","votesPerQuota","map","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","i","len","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","parseDate","value","Date","exec","hour","toUpperCase","UTC","quantity","quantityExponent","exp","nice","exponent","exp10","f","nf","quantile","ascArr","p","H","h","v","reformIntervals","list","littleThan","curr","Infinity","currClose","interval","close_1","close","lg","splice","numericToNumber","valFloat","isNumeric","getRandomIdBase","random","getGreatestCommonDividor","getLeastCommonMultiple"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/util/number.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  }\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n\nexports.linearMap = linearMap;\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n\nexports.parsePercent = parsePercent;\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  }\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nexports.round = round;\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n\nexports.asc = asc;\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  }\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n\nexports.getPrecision = getPrecision;\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString();\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n\nexports.getPrecisionSafe = getPrecisionSafe;\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n\nexports.getPixelPrecision = getPixelPrecision;\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  });\n\n  while (currentSum < targetSeats) {\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    }\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n}\n\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n\nexports.remRadian = remRadian;\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nexports.isRadianAroundZero = isRadianAroundZero;\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d{1,2})(?::(\\d{1,2})(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/;\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      return new Date(NaN);\n    }\n\n    if (!match[8]) {\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } else {\n      var hour = +match[4] || 0;\n\n      if (match[8].toUpperCase() !== 'Z') {\n        hour -= +match[8].slice(0, 3);\n      }\n\n      return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n    }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n\nexports.parseDate = parseDate;\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nexports.quantity = quantity;\n\nfunction quantityExponent(val) {\n  if (val === 0) {\n    return 0;\n  }\n\n  var exp = Math.floor(Math.log(val) / Math.LN10);\n\n  if (val / Math.pow(10, exp) >= 10) {\n    exp++;\n  }\n\n  return exp;\n}\n\nexports.quantityExponent = quantityExponent;\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10;\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10;\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n\nexports.nice = nice;\n\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\n\nexports.quantile = quantile;\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close_1 = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close_1[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close_1[lg];\n    }\n\n    if (interval[0] === interval[1] && close_1[0] * close_1[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n\nexports.reformIntervals = reformIntervals;\n\nfunction numericToNumber(val) {\n  var valFloat = parseFloat(val);\n  return valFloat == val && (valFloat !== 0 || typeof val !== 'string' || val.indexOf('x') <= 0) ? valFloat : NaN;\n}\n\nexports.numericToNumber = numericToNumber;\n\nfunction isNumeric(val) {\n  return !isNaN(numericToNumber(val));\n}\n\nexports.isNumeric = isNumeric;\n\nfunction getRandomIdBase() {\n  return Math.round(Math.random() * 9);\n}\n\nexports.getRandomIdBase = getRandomIdBase;\n\nfunction getGreatestCommonDividor(a, b) {\n  if (b === 0) {\n    return a;\n  }\n\n  return getGreatestCommonDividor(b, a % b);\n}\n\nexports.getGreatestCommonDividor = getGreatestCommonDividor;\n\nfunction getLeastCommonMultiple(a, b) {\n  if (a == null) {\n    return b;\n  }\n\n  if (b == null) {\n    return a;\n  }\n\n  return a * b / getGreatestCommonDividor(a, b);\n}\n\nexports.getLeastCommonMultiple = getLeastCommonMultiple;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}