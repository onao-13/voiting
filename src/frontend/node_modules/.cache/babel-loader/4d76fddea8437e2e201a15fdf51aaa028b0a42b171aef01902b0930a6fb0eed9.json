{"ast":null,"code":"/**\n * Wraps the native Canvas element and overrides its CanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiCanvas = /** @class */function () {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  function HdpiCanvas(_a) {\n    var _b = _a.document,\n      document = _b === void 0 ? window.document : _b,\n      _c = _a.width,\n      width = _c === void 0 ? 600 : _c,\n      _d = _a.height,\n      height = _d === void 0 ? 300 : _d,\n      _e = _a.domLayer,\n      domLayer = _e === void 0 ? false : _e,\n      _f = _a.zIndex,\n      zIndex = _f === void 0 ? 0 : _f,\n      _g = _a.name,\n      name = _g === void 0 ? undefined : _g,\n      _h = _a.overrideDevicePixelRatio,\n      overrideDevicePixelRatio = _h === void 0 ? undefined : _h;\n    this._container = undefined;\n    this._enabled = true;\n    this._opacity = 1;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    this.document = document;\n    this.element = document.createElement('canvas');\n    this.context = this.element.getContext('2d');\n    this.imageSource = this.context.canvas;\n    var style = this.element.style;\n    style.userSelect = 'none';\n    style.display = 'block';\n    if (domLayer) {\n      style.position = 'absolute';\n      style.zIndex = String(zIndex);\n      style.top = '0';\n      style.left = '0';\n      style.pointerEvents = 'none';\n      style.opacity = \"1\";\n      if (name) {\n        this.element.id = name;\n      }\n    }\n    this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  Object.defineProperty(HdpiCanvas.prototype, \"container\", {\n    get: function () {\n      return this._container;\n    },\n    set: function (value) {\n      if (this._container !== value) {\n        this.remove();\n        if (value) {\n          value.appendChild(this.element);\n        }\n        this._container = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"enabled\", {\n    get: function () {\n      return this._enabled;\n    },\n    set: function (value) {\n      this.element.style.display = value ? 'block' : 'none';\n      this._enabled = !!value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"opacity\", {\n    get: function () {\n      return this._opacity;\n    },\n    set: function (value) {\n      this.element.style.opacity = \"\" + value;\n      this._opacity = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.prototype.remove = function () {\n    var parentNode = this.element.parentNode;\n    if (parentNode != null) {\n      parentNode.removeChild(this.element);\n    }\n  };\n  HdpiCanvas.prototype.destroy = function () {\n    this.element.remove();\n    this._canvas = undefined;\n    Object.freeze(this);\n  };\n  HdpiCanvas.prototype.snapshot = function () {\n    // No-op for compatibility with HdpiOffscreenCanvas.\n  };\n  HdpiCanvas.prototype.clear = function () {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  };\n  HdpiCanvas.prototype.toImage = function () {\n    var img = this.document.createElement('img');\n    img.src = this.getDataURL();\n    return img;\n  };\n  HdpiCanvas.prototype.getDataURL = function (type) {\n    return this.element.toDataURL(type);\n  };\n  /**\n   * @param fileName The name of the downloaded file.\n   * @param fileFormat The file format, the default is `image/png`\n   */\n  HdpiCanvas.prototype.download = function (fileName, fileFormat) {\n    if (fileFormat === void 0) {\n      fileFormat = 'image/png';\n    }\n    fileName = (fileName || '').trim() || 'image';\n    var dataUrl = this.getDataURL(fileFormat);\n    var document = this.document;\n    var a = document.createElement('a');\n    a.href = dataUrl;\n    a.download = fileName;\n    a.style.display = 'none';\n    document.body.appendChild(a); // required for the `click` to work in Firefox\n    a.click();\n    document.body.removeChild(a);\n  };\n  Object.defineProperty(HdpiCanvas.prototype, \"pixelRatio\", {\n    get: function () {\n      return this._pixelRatio;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  HdpiCanvas.prototype.setPixelRatio = function (ratio) {\n    var pixelRatio = ratio || window.devicePixelRatio;\n    if (pixelRatio === this.pixelRatio) {\n      return;\n    }\n    HdpiCanvas.overrideScale(this.context, pixelRatio);\n    this._pixelRatio = pixelRatio;\n    this.resize(this.width, this.height);\n  };\n  Object.defineProperty(HdpiCanvas.prototype, \"pixelated\", {\n    get: function () {\n      return this.element.style.imageRendering === 'pixelated';\n    },\n    set: function (value) {\n      this.element.style.imageRendering = value ? 'pixelated' : 'auto';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.prototype.resize = function (width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    var _a = this,\n      element = _a.element,\n      context = _a.context,\n      pixelRatio = _a.pixelRatio;\n    element.width = Math.round(width * pixelRatio);\n    element.height = Math.round(height * pixelRatio);\n    element.style.width = width + 'px';\n    element.style.height = height + 'px';\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  };\n  Object.defineProperty(HdpiCanvas, \"textMeasuringContext\", {\n    get: function () {\n      if (this._textMeasuringContext) {\n        return this._textMeasuringContext;\n      }\n      var canvas = document.createElement('canvas');\n      this._textMeasuringContext = canvas.getContext('2d');\n      return this._textMeasuringContext;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas, \"svgText\", {\n    get: function () {\n      if (this._svgText) {\n        return this._svgText;\n      }\n      var xmlns = 'http://www.w3.org/2000/svg';\n      var svg = document.createElementNS(xmlns, 'svg');\n      svg.setAttribute('width', '100');\n      svg.setAttribute('height', '100');\n      // Add a descriptive class name in case someone sees this SVG element\n      // in devtools and wonders about its purpose:\n      if (svg.classList) {\n        svg.classList.add('text-measuring-svg');\n      } else {\n        svg.setAttribute('class', 'text-measuring-svg');\n      }\n      svg.style.position = 'absolute';\n      svg.style.top = '-1000px';\n      svg.style.visibility = 'hidden';\n      var svgText = document.createElementNS(xmlns, 'text');\n      svgText.setAttribute('x', '0');\n      svgText.setAttribute('y', '30');\n      svgText.setAttribute('text', 'black');\n      svg.appendChild(svgText);\n      document.body.appendChild(svg);\n      this._svgText = svgText;\n      return svgText;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiCanvas, \"has\", {\n    get: function () {\n      if (this._has) {\n        return this._has;\n      }\n      var isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n      var isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n      var isSafari = !isChrome && navigator.userAgent.indexOf('Safari') > -1;\n      this._has = Object.freeze({\n        textMetrics: this.textMeasuringContext.measureText('test').actualBoundingBoxDescent !== undefined &&\n        // Firefox implemented advanced TextMetrics object in v74:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n        // but it's buggy, so we'll keed using the SVG for text measurement in Firefox for now.\n        !isFirefox && !isSafari,\n        getTransform: this.textMeasuringContext.getTransform !== undefined\n      });\n      return this._has;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiCanvas.measureText = function (text, font, textBaseline, textAlign) {\n    var ctx = this.textMeasuringContext;\n    ctx.font = font;\n    ctx.textBaseline = textBaseline;\n    ctx.textAlign = textAlign;\n    return ctx.measureText(text);\n  };\n  /**\n   * Returns the width and height of the measured text.\n   * @param text The single-line text to measure.\n   * @param font The font shorthand string.\n   */\n  HdpiCanvas.getTextSize = function (text, font) {\n    if (this.has.textMetrics) {\n      var ctx = this.textMeasuringContext;\n      ctx.font = font;\n      var metrics = ctx.measureText(text);\n      return {\n        width: metrics.width,\n        height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n      };\n    } else {\n      return this.measureSvgText(text, font);\n    }\n  };\n  HdpiCanvas.measureSvgText = function (text, font) {\n    var cache = this.textSizeCache;\n    var fontCache = cache[font];\n    // Note: consider not caching the size of numeric strings.\n    // For example: if (isNaN(+text)) { // skip\n    if (fontCache) {\n      var size_1 = fontCache[text];\n      if (size_1) {\n        return size_1;\n      }\n    } else {\n      cache[font] = {};\n    }\n    var svgText = this.svgText;\n    svgText.style.font = font;\n    svgText.textContent = text;\n    // `getBBox` returns an instance of `SVGRect` with the same `width` and `height`\n    // measurements as `DOMRect` instance returned by the `getBoundingClientRect`.\n    // But the `SVGRect` instance has half the properties of the `DOMRect`,\n    // so we use the `getBBox` method.\n    var bbox = svgText.getBBox();\n    var size = {\n      width: bbox.width,\n      height: bbox.height\n    };\n    cache[font][text] = size;\n    return size;\n  };\n  HdpiCanvas.overrideScale = function (ctx, scale) {\n    var depth = 0;\n    var overrides = {\n      save: function () {\n        this.$save();\n        depth++;\n      },\n      restore: function () {\n        if (depth > 0) {\n          this.$restore();\n          depth--;\n        } else {\n          throw new Error('Unable to restore() past depth 0');\n        }\n      },\n      setTransform: function (a, b, c, d, e, f) {\n        if (typeof a === 'object') {\n          this.$setTransform(a);\n        } else {\n          this.$setTransform(a * scale, b * scale, c * scale, d * scale, e * scale, f * scale);\n        }\n      },\n      resetTransform: function () {\n        // As of Jan 8, 2019, `resetTransform` is still an \"experimental technology\",\n        // and doesn't work in IE11 and Edge 44.\n        this.$setTransform(scale, 0, 0, scale, 0, 0);\n      }\n    };\n    for (var name_1 in overrides) {\n      if (overrides.hasOwnProperty(name_1)) {\n        // Save native methods under prefixed names,\n        // if this hasn't been done by the previous overrides already.\n        if (!ctx['$' + name_1]) {\n          ctx['$' + name_1] = ctx[name_1];\n        }\n        // Replace native methods with overrides,\n        // or previous overrides with the new ones.\n        ctx[name_1] = overrides[name_1];\n      }\n    }\n  };\n  HdpiCanvas.textSizeCache = {};\n  return HdpiCanvas;\n}();\nexport { HdpiCanvas };","map":{"version":3,"names":["HdpiCanvas","_a","_b","document","window","_c","width","_d","height","_e","domLayer","_f","zIndex","_g","name","undefined","_h","overrideDevicePixelRatio","_container","_enabled","_opacity","_pixelRatio","NaN","_width","_height","element","createElement","context","getContext","imageSource","canvas","style","userSelect","display","position","String","top","left","pointerEvents","opacity","id","setPixelRatio","resize","Object","defineProperty","prototype","get","set","value","remove","appendChild","enumerable","configurable","parentNode","removeChild","destroy","_canvas","freeze","snapshot","clear","save","resetTransform","clearRect","restore","toImage","img","src","getDataURL","type","toDataURL","download","fileName","fileFormat","trim","dataUrl","a","href","body","click","ratio","pixelRatio","devicePixelRatio","overrideScale","imageRendering","Math","round","_textMeasuringContext","_svgText","xmlns","svg","createElementNS","setAttribute","classList","add","visibility","svgText","_has","isChrome","navigator","userAgent","indexOf","isFirefox","isSafari","textMetrics","textMeasuringContext","measureText","actualBoundingBoxDescent","getTransform","text","font","textBaseline","textAlign","ctx","getTextSize","has","metrics","actualBoundingBoxAscent","measureSvgText","cache","textSizeCache","fontCache","size_1","textContent","bbox","getBBox","size","scale","depth","overrides","$save","$restore","Error","setTransform","b","c","d","e","f","$setTransform","name_1","hasOwnProperty"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/canvas/hdpiCanvas.js"],"sourcesContent":["/**\n * Wraps the native Canvas element and overrides its CanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiCanvas = /** @class */ (function () {\n    // The width/height attributes of the Canvas element default to\n    // 300/150 according to w3.org.\n    function HdpiCanvas(_a) {\n        var _b = _a.document, document = _b === void 0 ? window.document : _b, _c = _a.width, width = _c === void 0 ? 600 : _c, _d = _a.height, height = _d === void 0 ? 300 : _d, _e = _a.domLayer, domLayer = _e === void 0 ? false : _e, _f = _a.zIndex, zIndex = _f === void 0 ? 0 : _f, _g = _a.name, name = _g === void 0 ? undefined : _g, _h = _a.overrideDevicePixelRatio, overrideDevicePixelRatio = _h === void 0 ? undefined : _h;\n        this._container = undefined;\n        this._enabled = true;\n        this._opacity = 1;\n        // `NaN` is deliberate here, so that overrides are always applied\n        // and the `resetTransform` inside the `resize` method works in IE11.\n        this._pixelRatio = NaN;\n        this._width = 0;\n        this._height = 0;\n        this.document = document;\n        this.element = document.createElement('canvas');\n        this.context = this.element.getContext('2d');\n        this.imageSource = this.context.canvas;\n        var style = this.element.style;\n        style.userSelect = 'none';\n        style.display = 'block';\n        if (domLayer) {\n            style.position = 'absolute';\n            style.zIndex = String(zIndex);\n            style.top = '0';\n            style.left = '0';\n            style.pointerEvents = 'none';\n            style.opacity = \"1\";\n            if (name) {\n                this.element.id = name;\n            }\n        }\n        this.setPixelRatio(overrideDevicePixelRatio);\n        this.resize(width, height);\n    }\n    Object.defineProperty(HdpiCanvas.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        set: function (value) {\n            if (this._container !== value) {\n                this.remove();\n                if (value) {\n                    value.appendChild(this.element);\n                }\n                this._container = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            this.element.style.display = value ? 'block' : 'none';\n            this._enabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"opacity\", {\n        get: function () {\n            return this._opacity;\n        },\n        set: function (value) {\n            this.element.style.opacity = \"\" + value;\n            this._opacity = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.remove = function () {\n        var parentNode = this.element.parentNode;\n        if (parentNode != null) {\n            parentNode.removeChild(this.element);\n        }\n    };\n    HdpiCanvas.prototype.destroy = function () {\n        this.element.remove();\n        this._canvas = undefined;\n        Object.freeze(this);\n    };\n    HdpiCanvas.prototype.snapshot = function () {\n        // No-op for compatibility with HdpiOffscreenCanvas.\n    };\n    HdpiCanvas.prototype.clear = function () {\n        this.context.save();\n        this.context.resetTransform();\n        this.context.clearRect(0, 0, this.width, this.height);\n        this.context.restore();\n    };\n    HdpiCanvas.prototype.toImage = function () {\n        var img = this.document.createElement('img');\n        img.src = this.getDataURL();\n        return img;\n    };\n    HdpiCanvas.prototype.getDataURL = function (type) {\n        return this.element.toDataURL(type);\n    };\n    /**\n     * @param fileName The name of the downloaded file.\n     * @param fileFormat The file format, the default is `image/png`\n     */\n    HdpiCanvas.prototype.download = function (fileName, fileFormat) {\n        if (fileFormat === void 0) { fileFormat = 'image/png'; }\n        fileName = (fileName || '').trim() || 'image';\n        var dataUrl = this.getDataURL(fileFormat);\n        var document = this.document;\n        var a = document.createElement('a');\n        a.href = dataUrl;\n        a.download = fileName;\n        a.style.display = 'none';\n        document.body.appendChild(a); // required for the `click` to work in Firefox\n        a.click();\n        document.body.removeChild(a);\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"pixelRatio\", {\n        get: function () {\n            return this._pixelRatio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the pixel ratio of the Canvas element to the given value,\n     * or uses the window.devicePixelRatio (default), then resizes the Canvas\n     * element accordingly (default).\n     */\n    HdpiCanvas.prototype.setPixelRatio = function (ratio) {\n        var pixelRatio = ratio || window.devicePixelRatio;\n        if (pixelRatio === this.pixelRatio) {\n            return;\n        }\n        HdpiCanvas.overrideScale(this.context, pixelRatio);\n        this._pixelRatio = pixelRatio;\n        this.resize(this.width, this.height);\n    };\n    Object.defineProperty(HdpiCanvas.prototype, \"pixelated\", {\n        get: function () {\n            return this.element.style.imageRendering === 'pixelated';\n        },\n        set: function (value) {\n            this.element.style.imageRendering = value ? 'pixelated' : 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.prototype.resize = function (width, height) {\n        if (!(width > 0 && height > 0)) {\n            return;\n        }\n        var _a = this, element = _a.element, context = _a.context, pixelRatio = _a.pixelRatio;\n        element.width = Math.round(width * pixelRatio);\n        element.height = Math.round(height * pixelRatio);\n        element.style.width = width + 'px';\n        element.style.height = height + 'px';\n        context.resetTransform();\n        this._width = width;\n        this._height = height;\n    };\n    Object.defineProperty(HdpiCanvas, \"textMeasuringContext\", {\n        get: function () {\n            if (this._textMeasuringContext) {\n                return this._textMeasuringContext;\n            }\n            var canvas = document.createElement('canvas');\n            this._textMeasuringContext = canvas.getContext('2d');\n            return this._textMeasuringContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas, \"svgText\", {\n        get: function () {\n            if (this._svgText) {\n                return this._svgText;\n            }\n            var xmlns = 'http://www.w3.org/2000/svg';\n            var svg = document.createElementNS(xmlns, 'svg');\n            svg.setAttribute('width', '100');\n            svg.setAttribute('height', '100');\n            // Add a descriptive class name in case someone sees this SVG element\n            // in devtools and wonders about its purpose:\n            if (svg.classList) {\n                svg.classList.add('text-measuring-svg');\n            }\n            else {\n                svg.setAttribute('class', 'text-measuring-svg');\n            }\n            svg.style.position = 'absolute';\n            svg.style.top = '-1000px';\n            svg.style.visibility = 'hidden';\n            var svgText = document.createElementNS(xmlns, 'text');\n            svgText.setAttribute('x', '0');\n            svgText.setAttribute('y', '30');\n            svgText.setAttribute('text', 'black');\n            svg.appendChild(svgText);\n            document.body.appendChild(svg);\n            this._svgText = svgText;\n            return svgText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiCanvas, \"has\", {\n        get: function () {\n            if (this._has) {\n                return this._has;\n            }\n            var isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n            var isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n            var isSafari = !isChrome && navigator.userAgent.indexOf('Safari') > -1;\n            this._has = Object.freeze({\n                textMetrics: this.textMeasuringContext.measureText('test').actualBoundingBoxDescent !== undefined &&\n                    // Firefox implemented advanced TextMetrics object in v74:\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n                    // but it's buggy, so we'll keed using the SVG for text measurement in Firefox for now.\n                    !isFirefox &&\n                    !isSafari,\n                getTransform: this.textMeasuringContext.getTransform !== undefined,\n            });\n            return this._has;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiCanvas.measureText = function (text, font, textBaseline, textAlign) {\n        var ctx = this.textMeasuringContext;\n        ctx.font = font;\n        ctx.textBaseline = textBaseline;\n        ctx.textAlign = textAlign;\n        return ctx.measureText(text);\n    };\n    /**\n     * Returns the width and height of the measured text.\n     * @param text The single-line text to measure.\n     * @param font The font shorthand string.\n     */\n    HdpiCanvas.getTextSize = function (text, font) {\n        if (this.has.textMetrics) {\n            var ctx = this.textMeasuringContext;\n            ctx.font = font;\n            var metrics = ctx.measureText(text);\n            return {\n                width: metrics.width,\n                height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n            };\n        }\n        else {\n            return this.measureSvgText(text, font);\n        }\n    };\n    HdpiCanvas.measureSvgText = function (text, font) {\n        var cache = this.textSizeCache;\n        var fontCache = cache[font];\n        // Note: consider not caching the size of numeric strings.\n        // For example: if (isNaN(+text)) { // skip\n        if (fontCache) {\n            var size_1 = fontCache[text];\n            if (size_1) {\n                return size_1;\n            }\n        }\n        else {\n            cache[font] = {};\n        }\n        var svgText = this.svgText;\n        svgText.style.font = font;\n        svgText.textContent = text;\n        // `getBBox` returns an instance of `SVGRect` with the same `width` and `height`\n        // measurements as `DOMRect` instance returned by the `getBoundingClientRect`.\n        // But the `SVGRect` instance has half the properties of the `DOMRect`,\n        // so we use the `getBBox` method.\n        var bbox = svgText.getBBox();\n        var size = {\n            width: bbox.width,\n            height: bbox.height,\n        };\n        cache[font][text] = size;\n        return size;\n    };\n    HdpiCanvas.overrideScale = function (ctx, scale) {\n        var depth = 0;\n        var overrides = {\n            save: function () {\n                this.$save();\n                depth++;\n            },\n            restore: function () {\n                if (depth > 0) {\n                    this.$restore();\n                    depth--;\n                }\n                else {\n                    throw new Error('Unable to restore() past depth 0');\n                }\n            },\n            setTransform: function (a, b, c, d, e, f) {\n                if (typeof a === 'object') {\n                    this.$setTransform(a);\n                }\n                else {\n                    this.$setTransform(a * scale, b * scale, c * scale, d * scale, e * scale, f * scale);\n                }\n            },\n            resetTransform: function () {\n                // As of Jan 8, 2019, `resetTransform` is still an \"experimental technology\",\n                // and doesn't work in IE11 and Edge 44.\n                this.$setTransform(scale, 0, 0, scale, 0, 0);\n            },\n        };\n        for (var name_1 in overrides) {\n            if (overrides.hasOwnProperty(name_1)) {\n                // Save native methods under prefixed names,\n                // if this hasn't been done by the previous overrides already.\n                if (!ctx['$' + name_1]) {\n                    ctx['$' + name_1] = ctx[name_1];\n                }\n                // Replace native methods with overrides,\n                // or previous overrides with the new ones.\n                ctx[name_1] = overrides[name_1];\n            }\n        }\n    };\n    HdpiCanvas.textSizeCache = {};\n    return HdpiCanvas;\n}());\nexport { HdpiCanvas };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}