{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"../core/event\");\nvar zrUtil = require(\"../core/util\");\nvar Eventful_1 = require(\"../core/Eventful\");\nvar env_1 = require(\"../core/env\");\nvar TOUCH_CLICK_DELAY = 300;\nvar globalEventSupported = env_1[\"default\"].domSupported;\nvar localNativeListenerNames = function () {\n  var mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'wheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n  var touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\n  var pointerEventNameMap = {\n    pointerdown: 1,\n    pointerup: 1,\n    pointermove: 1,\n    pointerout: 1\n  };\n  var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n    var nm = name.replace('mouse', 'pointer');\n    return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\n  });\n  return {\n    mouse: mouseHandlerNames,\n    touch: touchHandlerNames,\n    pointer: pointerHandlerNames\n  };\n}();\nvar globalNativeListenerNames = {\n  mouse: ['mousemove', 'mouseup'],\n  pointer: ['pointermove', 'pointerup']\n};\nvar wheelEventSupported = false;\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n}\nfunction setTouchTimer(scope) {\n  scope.touching = true;\n  if (scope.touchTimer != null) {\n    clearTimeout(scope.touchTimer);\n    scope.touchTimer = null;\n  }\n  scope.touchTimer = setTimeout(function () {\n    scope.touching = false;\n    scope.touchTimer = null;\n  }, 700);\n}\nfunction markTouch(event) {\n  event && (event.zrByTouch = true);\n}\nfunction normalizeGlobalEvent(instance, event) {\n  return event_1.normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\n}\nfunction isLocalEl(instance, el) {\n  var elTmp = el;\n  var isLocal = false;\n  while (elTmp && elTmp.nodeType !== 9 && !(isLocal = elTmp.domBelongToZr || elTmp !== el && elTmp === instance.painterRoot)) {\n    elTmp = elTmp.parentNode;\n  }\n  return isLocal;\n}\nvar FakeGlobalEvent = function () {\n  function FakeGlobalEvent(instance, event) {\n    this.stopPropagation = zrUtil.noop;\n    this.stopImmediatePropagation = zrUtil.noop;\n    this.preventDefault = zrUtil.noop;\n    this.type = event.type;\n    this.target = this.currentTarget = instance.dom;\n    this.pointerType = event.pointerType;\n    this.clientX = event.clientX;\n    this.clientY = event.clientY;\n  }\n  return FakeGlobalEvent;\n}();\nvar localDOMHandlers = {\n  mousedown: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    this.__mayPointerCapture = [event.zrX, event.zrY];\n    this.trigger('mousedown', event);\n  },\n  mousemove: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    var downPoint = this.__mayPointerCapture;\n    if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\n      this.__togglePointerCapture(true);\n    }\n    this.trigger('mousemove', event);\n  },\n  mouseup: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    this.__togglePointerCapture(false);\n    this.trigger('mouseup', event);\n  },\n  mouseout: function (event) {\n    if (event.target !== this.dom) {\n      return;\n    }\n    event = event_1.normalizeEvent(this.dom, event);\n    if (this.__pointerCapturing) {\n      event.zrEventControl = 'no_globalout';\n    }\n    var element = event.toElement || event.relatedTarget;\n    event.zrIsToLocalDOM = isLocalEl(this, element);\n    this.trigger('mouseout', event);\n  },\n  wheel: function (event) {\n    wheelEventSupported = true;\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger('mousewheel', event);\n  },\n  mousewheel: function (event) {\n    if (wheelEventSupported) {\n      return;\n    }\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger('mousewheel', event);\n  },\n  touchstart: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.__lastTouchMoment = new Date();\n    this.handler.processGesture(event, 'start');\n    localDOMHandlers.mousemove.call(this, event);\n    localDOMHandlers.mousedown.call(this, event);\n  },\n  touchmove: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.handler.processGesture(event, 'change');\n    localDOMHandlers.mousemove.call(this, event);\n  },\n  touchend: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.handler.processGesture(event, 'end');\n    localDOMHandlers.mouseup.call(this, event);\n    if (+new Date() - +this.__lastTouchMoment < TOUCH_CLICK_DELAY) {\n      localDOMHandlers.click.call(this, event);\n    }\n  },\n  pointerdown: function (event) {\n    localDOMHandlers.mousedown.call(this, event);\n  },\n  pointermove: function (event) {\n    if (!isPointerFromTouch(event)) {\n      localDOMHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    localDOMHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    if (!isPointerFromTouch(event)) {\n      localDOMHandlers.mouseout.call(this, event);\n    }\n  }\n};\nzrUtil.each(['click', 'dblclick', 'contextmenu'], function (name) {\n  localDOMHandlers[name] = function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\nvar globalDOMHandlers = {\n  pointermove: function (event) {\n    if (!isPointerFromTouch(event)) {\n      globalDOMHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    globalDOMHandlers.mouseup.call(this, event);\n  },\n  mousemove: function (event) {\n    this.trigger('mousemove', event);\n  },\n  mouseup: function (event) {\n    var pointerCaptureReleasing = this.__pointerCapturing;\n    this.__togglePointerCapture(false);\n    this.trigger('mouseup', event);\n    if (pointerCaptureReleasing) {\n      event.zrEventControl = 'only_globalout';\n      this.trigger('mouseout', event);\n    }\n  }\n};\nfunction mountLocalDOMEventListeners(instance, scope) {\n  var domHandlers = scope.domHandlers;\n  if (env_1[\"default\"].pointerEventsSupported) {\n    zrUtil.each(localNativeListenerNames.pointer, function (nativeEventName) {\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n        domHandlers[nativeEventName].call(instance, event);\n      });\n    });\n  } else {\n    if (env_1[\"default\"].touchEventsSupported) {\n      zrUtil.each(localNativeListenerNames.touch, function (nativeEventName) {\n        mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n          domHandlers[nativeEventName].call(instance, event);\n          setTouchTimer(scope);\n        });\n      });\n    }\n    zrUtil.each(localNativeListenerNames.mouse, function (nativeEventName) {\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n        event = event_1.getNativeEvent(event);\n        if (!scope.touching) {\n          domHandlers[nativeEventName].call(instance, event);\n        }\n      });\n    });\n  }\n}\nfunction mountGlobalDOMEventListeners(instance, scope) {\n  if (env_1[\"default\"].pointerEventsSupported) {\n    zrUtil.each(globalNativeListenerNames.pointer, mount);\n  } else if (!env_1[\"default\"].touchEventsSupported) {\n    zrUtil.each(globalNativeListenerNames.mouse, mount);\n  }\n  function mount(nativeEventName) {\n    function nativeEventListener(event) {\n      event = event_1.getNativeEvent(event);\n      if (!isLocalEl(instance, event.target)) {\n        event = normalizeGlobalEvent(instance, event);\n        scope.domHandlers[nativeEventName].call(instance, event);\n      }\n    }\n    mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, {\n      capture: true\n    });\n  }\n}\nfunction mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\n  scope.mounted[nativeEventName] = listener;\n  scope.listenerOpts[nativeEventName] = opt;\n  event_1.addEventListener(scope.domTarget, nativeEventName, listener, opt);\n}\nfunction unmountDOMEventListeners(scope) {\n  var mounted = scope.mounted;\n  for (var nativeEventName in mounted) {\n    if (mounted.hasOwnProperty(nativeEventName)) {\n      event_1.removeEventListener(scope.domTarget, nativeEventName, mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\n    }\n  }\n  scope.mounted = {};\n}\nvar DOMHandlerScope = function () {\n  function DOMHandlerScope(domTarget, domHandlers) {\n    this.mounted = {};\n    this.listenerOpts = {};\n    this.touching = false;\n    this.domTarget = domTarget;\n    this.domHandlers = domHandlers;\n  }\n  return DOMHandlerScope;\n}();\nvar HandlerDomProxy = function (_super) {\n  tslib_1.__extends(HandlerDomProxy, _super);\n  function HandlerDomProxy(dom, painterRoot) {\n    var _this = _super.call(this) || this;\n    _this.__pointerCapturing = false;\n    _this.dom = dom;\n    _this.painterRoot = painterRoot;\n    _this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\n    if (globalEventSupported) {\n      _this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\n    }\n    mountLocalDOMEventListeners(_this, _this._localHandlerScope);\n    return _this;\n  }\n  HandlerDomProxy.prototype.dispose = function () {\n    unmountDOMEventListeners(this._localHandlerScope);\n    if (globalEventSupported) {\n      unmountDOMEventListeners(this._globalHandlerScope);\n    }\n  };\n  HandlerDomProxy.prototype.setCursor = function (cursorStyle) {\n    this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n  };\n  HandlerDomProxy.prototype.__togglePointerCapture = function (isPointerCapturing) {\n    this.__mayPointerCapture = null;\n    if (globalEventSupported && +this.__pointerCapturing ^ +isPointerCapturing) {\n      this.__pointerCapturing = isPointerCapturing;\n      var globalHandlerScope = this._globalHandlerScope;\n      isPointerCapturing ? mountGlobalDOMEventListeners(this, globalHandlerScope) : unmountDOMEventListeners(globalHandlerScope);\n    }\n  };\n  return HandlerDomProxy;\n}(Eventful_1[\"default\"]);\nexports[\"default\"] = HandlerDomProxy;","map":{"version":3,"names":["exports","__esModule","tslib_1","require","event_1","zrUtil","Eventful_1","env_1","TOUCH_CLICK_DELAY","globalEventSupported","domSupported","localNativeListenerNames","mouseHandlerNames","touchHandlerNames","pointerEventNameMap","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","map","name","nm","replace","hasOwnProperty","mouse","touch","pointer","globalNativeListenerNames","wheelEventSupported","isPointerFromTouch","event","pointerType","setTouchTimer","scope","touching","touchTimer","clearTimeout","setTimeout","markTouch","zrByTouch","normalizeGlobalEvent","instance","normalizeEvent","dom","FakeGlobalEvent","isLocalEl","el","elTmp","isLocal","nodeType","domBelongToZr","painterRoot","parentNode","stopPropagation","noop","stopImmediatePropagation","preventDefault","type","target","currentTarget","clientX","clientY","localDOMHandlers","mousedown","__mayPointerCapture","zrX","zrY","trigger","mousemove","downPoint","__togglePointerCapture","mouseup","mouseout","__pointerCapturing","zrEventControl","element","toElement","relatedTarget","zrIsToLocalDOM","wheel","mousewheel","touchstart","__lastTouchMoment","Date","handler","processGesture","call","touchmove","touchend","click","each","globalDOMHandlers","pointerCaptureReleasing","mountLocalDOMEventListeners","domHandlers","pointerEventsSupported","nativeEventName","mountSingleDOMEventListener","touchEventsSupported","getNativeEvent","mountGlobalDOMEventListeners","mount","nativeEventListener","capture","listener","opt","mounted","listenerOpts","addEventListener","domTarget","unmountDOMEventListeners","removeEventListener","DOMHandlerScope","HandlerDomProxy","_super","__extends","_this","_localHandlerScope","_globalHandlerScope","document","prototype","dispose","setCursor","cursorStyle","style","cursor","isPointerCapturing","globalHandlerScope"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/zrender/lib/dom/HandlerProxy.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"../core/event\");\nvar zrUtil = require(\"../core/util\");\nvar Eventful_1 = require(\"../core/Eventful\");\nvar env_1 = require(\"../core/env\");\nvar TOUCH_CLICK_DELAY = 300;\nvar globalEventSupported = env_1[\"default\"].domSupported;\nvar localNativeListenerNames = (function () {\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'wheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n    var pointerEventNameMap = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\n    });\n    return {\n        mouse: mouseHandlerNames,\n        touch: touchHandlerNames,\n        pointer: pointerHandlerNames\n    };\n})();\nvar globalNativeListenerNames = {\n    mouse: ['mousemove', 'mouseup'],\n    pointer: ['pointermove', 'pointerup']\n};\nvar wheelEventSupported = false;\nfunction isPointerFromTouch(event) {\n    var pointerType = event.pointerType;\n    return pointerType === 'pen' || pointerType === 'touch';\n}\nfunction setTouchTimer(scope) {\n    scope.touching = true;\n    if (scope.touchTimer != null) {\n        clearTimeout(scope.touchTimer);\n        scope.touchTimer = null;\n    }\n    scope.touchTimer = setTimeout(function () {\n        scope.touching = false;\n        scope.touchTimer = null;\n    }, 700);\n}\nfunction markTouch(event) {\n    event && (event.zrByTouch = true);\n}\nfunction normalizeGlobalEvent(instance, event) {\n    return event_1.normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\n}\nfunction isLocalEl(instance, el) {\n    var elTmp = el;\n    var isLocal = false;\n    while (elTmp && elTmp.nodeType !== 9\n        && !(isLocal = elTmp.domBelongToZr\n            || (elTmp !== el && elTmp === instance.painterRoot))) {\n        elTmp = elTmp.parentNode;\n    }\n    return isLocal;\n}\nvar FakeGlobalEvent = (function () {\n    function FakeGlobalEvent(instance, event) {\n        this.stopPropagation = zrUtil.noop;\n        this.stopImmediatePropagation = zrUtil.noop;\n        this.preventDefault = zrUtil.noop;\n        this.type = event.type;\n        this.target = this.currentTarget = instance.dom;\n        this.pointerType = event.pointerType;\n        this.clientX = event.clientX;\n        this.clientY = event.clientY;\n    }\n    return FakeGlobalEvent;\n}());\nvar localDOMHandlers = {\n    mousedown: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.__mayPointerCapture = [event.zrX, event.zrY];\n        this.trigger('mousedown', event);\n    },\n    mousemove: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        var downPoint = this.__mayPointerCapture;\n        if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\n            this.__togglePointerCapture(true);\n        }\n        this.trigger('mousemove', event);\n    },\n    mouseup: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.__togglePointerCapture(false);\n        this.trigger('mouseup', event);\n    },\n    mouseout: function (event) {\n        if (event.target !== this.dom) {\n            return;\n        }\n        event = event_1.normalizeEvent(this.dom, event);\n        if (this.__pointerCapturing) {\n            event.zrEventControl = 'no_globalout';\n        }\n        var element = event.toElement || event.relatedTarget;\n        event.zrIsToLocalDOM = isLocalEl(this, element);\n        this.trigger('mouseout', event);\n    },\n    wheel: function (event) {\n        wheelEventSupported = true;\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger('mousewheel', event);\n    },\n    mousewheel: function (event) {\n        if (wheelEventSupported) {\n            return;\n        }\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger('mousewheel', event);\n    },\n    touchstart: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.__lastTouchMoment = new Date();\n        this.handler.processGesture(event, 'start');\n        localDOMHandlers.mousemove.call(this, event);\n        localDOMHandlers.mousedown.call(this, event);\n    },\n    touchmove: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.handler.processGesture(event, 'change');\n        localDOMHandlers.mousemove.call(this, event);\n    },\n    touchend: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.handler.processGesture(event, 'end');\n        localDOMHandlers.mouseup.call(this, event);\n        if (+new Date() - (+this.__lastTouchMoment) < TOUCH_CLICK_DELAY) {\n            localDOMHandlers.click.call(this, event);\n        }\n    },\n    pointerdown: function (event) {\n        localDOMHandlers.mousedown.call(this, event);\n    },\n    pointermove: function (event) {\n        if (!isPointerFromTouch(event)) {\n            localDOMHandlers.mousemove.call(this, event);\n        }\n    },\n    pointerup: function (event) {\n        localDOMHandlers.mouseup.call(this, event);\n    },\n    pointerout: function (event) {\n        if (!isPointerFromTouch(event)) {\n            localDOMHandlers.mouseout.call(this, event);\n        }\n    }\n};\nzrUtil.each(['click', 'dblclick', 'contextmenu'], function (name) {\n    localDOMHandlers[name] = function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger(name, event);\n    };\n});\nvar globalDOMHandlers = {\n    pointermove: function (event) {\n        if (!isPointerFromTouch(event)) {\n            globalDOMHandlers.mousemove.call(this, event);\n        }\n    },\n    pointerup: function (event) {\n        globalDOMHandlers.mouseup.call(this, event);\n    },\n    mousemove: function (event) {\n        this.trigger('mousemove', event);\n    },\n    mouseup: function (event) {\n        var pointerCaptureReleasing = this.__pointerCapturing;\n        this.__togglePointerCapture(false);\n        this.trigger('mouseup', event);\n        if (pointerCaptureReleasing) {\n            event.zrEventControl = 'only_globalout';\n            this.trigger('mouseout', event);\n        }\n    }\n};\nfunction mountLocalDOMEventListeners(instance, scope) {\n    var domHandlers = scope.domHandlers;\n    if (env_1[\"default\"].pointerEventsSupported) {\n        zrUtil.each(localNativeListenerNames.pointer, function (nativeEventName) {\n            mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                domHandlers[nativeEventName].call(instance, event);\n            });\n        });\n    }\n    else {\n        if (env_1[\"default\"].touchEventsSupported) {\n            zrUtil.each(localNativeListenerNames.touch, function (nativeEventName) {\n                mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                    domHandlers[nativeEventName].call(instance, event);\n                    setTouchTimer(scope);\n                });\n            });\n        }\n        zrUtil.each(localNativeListenerNames.mouse, function (nativeEventName) {\n            mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                event = event_1.getNativeEvent(event);\n                if (!scope.touching) {\n                    domHandlers[nativeEventName].call(instance, event);\n                }\n            });\n        });\n    }\n}\nfunction mountGlobalDOMEventListeners(instance, scope) {\n    if (env_1[\"default\"].pointerEventsSupported) {\n        zrUtil.each(globalNativeListenerNames.pointer, mount);\n    }\n    else if (!env_1[\"default\"].touchEventsSupported) {\n        zrUtil.each(globalNativeListenerNames.mouse, mount);\n    }\n    function mount(nativeEventName) {\n        function nativeEventListener(event) {\n            event = event_1.getNativeEvent(event);\n            if (!isLocalEl(instance, event.target)) {\n                event = normalizeGlobalEvent(instance, event);\n                scope.domHandlers[nativeEventName].call(instance, event);\n            }\n        }\n        mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, { capture: true });\n    }\n}\nfunction mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\n    scope.mounted[nativeEventName] = listener;\n    scope.listenerOpts[nativeEventName] = opt;\n    event_1.addEventListener(scope.domTarget, nativeEventName, listener, opt);\n}\nfunction unmountDOMEventListeners(scope) {\n    var mounted = scope.mounted;\n    for (var nativeEventName in mounted) {\n        if (mounted.hasOwnProperty(nativeEventName)) {\n            event_1.removeEventListener(scope.domTarget, nativeEventName, mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\n        }\n    }\n    scope.mounted = {};\n}\nvar DOMHandlerScope = (function () {\n    function DOMHandlerScope(domTarget, domHandlers) {\n        this.mounted = {};\n        this.listenerOpts = {};\n        this.touching = false;\n        this.domTarget = domTarget;\n        this.domHandlers = domHandlers;\n    }\n    return DOMHandlerScope;\n}());\nvar HandlerDomProxy = (function (_super) {\n    tslib_1.__extends(HandlerDomProxy, _super);\n    function HandlerDomProxy(dom, painterRoot) {\n        var _this = _super.call(this) || this;\n        _this.__pointerCapturing = false;\n        _this.dom = dom;\n        _this.painterRoot = painterRoot;\n        _this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\n        if (globalEventSupported) {\n            _this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\n        }\n        mountLocalDOMEventListeners(_this, _this._localHandlerScope);\n        return _this;\n    }\n    HandlerDomProxy.prototype.dispose = function () {\n        unmountDOMEventListeners(this._localHandlerScope);\n        if (globalEventSupported) {\n            unmountDOMEventListeners(this._globalHandlerScope);\n        }\n    };\n    HandlerDomProxy.prototype.setCursor = function (cursorStyle) {\n        this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n    };\n    HandlerDomProxy.prototype.__togglePointerCapture = function (isPointerCapturing) {\n        this.__mayPointerCapture = null;\n        if (globalEventSupported\n            && ((+this.__pointerCapturing) ^ (+isPointerCapturing))) {\n            this.__pointerCapturing = isPointerCapturing;\n            var globalHandlerScope = this._globalHandlerScope;\n            isPointerCapturing\n                ? mountGlobalDOMEventListeners(this, globalHandlerScope)\n                : unmountDOMEventListeners(globalHandlerScope);\n        }\n    };\n    return HandlerDomProxy;\n}(Eventful_1[\"default\"]));\nexports[\"default\"] = HandlerDomProxy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}