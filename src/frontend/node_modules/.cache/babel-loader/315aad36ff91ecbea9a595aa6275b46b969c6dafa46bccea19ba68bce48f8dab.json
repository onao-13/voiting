{"ast":null,"code":"import { HdpiCanvas } from './hdpiCanvas';\n/**\n * Wraps a native OffscreenCanvas and overrides its OffscreenCanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiOffscreenCanvas = /** @class */function () {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  function HdpiOffscreenCanvas(_a) {\n    var _b = _a.width,\n      width = _b === void 0 ? 600 : _b,\n      _c = _a.height,\n      height = _c === void 0 ? 300 : _c,\n      _d = _a.overrideDevicePixelRatio,\n      overrideDevicePixelRatio = _d === void 0 ? undefined : _d;\n    this.enabled = true;\n    this.opacity = 1;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    this.canvas = new OffscreenCanvas(width, height);\n    this.context = this.canvas.getContext('2d');\n    this.imageSource = this.canvas.transferToImageBitmap();\n    this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  HdpiOffscreenCanvas.isSupported = function () {\n    return window['OffscreenCanvas'] != null;\n  };\n  HdpiOffscreenCanvas.prototype.snapshot = function () {\n    this.imageSource.close();\n    this.imageSource = this.canvas.transferToImageBitmap();\n  };\n  HdpiOffscreenCanvas.prototype.destroy = function () {\n    this.imageSource.close();\n  };\n  HdpiOffscreenCanvas.prototype.clear = function () {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  };\n  Object.defineProperty(HdpiOffscreenCanvas.prototype, \"pixelRatio\", {\n    get: function () {\n      return this._pixelRatio;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  HdpiOffscreenCanvas.prototype.setPixelRatio = function (ratio) {\n    var pixelRatio = ratio || window.devicePixelRatio;\n    if (pixelRatio === this.pixelRatio) {\n      return;\n    }\n    HdpiCanvas.overrideScale(this.context, pixelRatio);\n    this._pixelRatio = pixelRatio;\n    this.resize(this.width, this.height);\n  };\n  Object.defineProperty(HdpiOffscreenCanvas.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HdpiOffscreenCanvas.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  HdpiOffscreenCanvas.prototype.resize = function (width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    var _a = this,\n      canvas = _a.canvas,\n      context = _a.context,\n      pixelRatio = _a.pixelRatio;\n    canvas.width = Math.round(width * pixelRatio);\n    canvas.height = Math.round(height * pixelRatio);\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  };\n  return HdpiOffscreenCanvas;\n}();\nexport { HdpiOffscreenCanvas };","map":{"version":3,"names":["HdpiCanvas","HdpiOffscreenCanvas","_a","_b","width","_c","height","_d","overrideDevicePixelRatio","undefined","enabled","opacity","_pixelRatio","NaN","_width","_height","canvas","OffscreenCanvas","context","getContext","imageSource","transferToImageBitmap","setPixelRatio","resize","isSupported","window","prototype","snapshot","close","destroy","clear","save","resetTransform","clearRect","restore","Object","defineProperty","get","enumerable","configurable","ratio","pixelRatio","devicePixelRatio","overrideScale","Math","round"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/canvas/hdpiOffscreenCanvas.js"],"sourcesContent":["import { HdpiCanvas } from './hdpiCanvas';\n/**\n * Wraps a native OffscreenCanvas and overrides its OffscreenCanvasRenderingContext2D to\n * provide resolution independent rendering based on `window.devicePixelRatio`.\n */\nvar HdpiOffscreenCanvas = /** @class */ (function () {\n    // The width/height attributes of the Canvas element default to\n    // 300/150 according to w3.org.\n    function HdpiOffscreenCanvas(_a) {\n        var _b = _a.width, width = _b === void 0 ? 600 : _b, _c = _a.height, height = _c === void 0 ? 300 : _c, _d = _a.overrideDevicePixelRatio, overrideDevicePixelRatio = _d === void 0 ? undefined : _d;\n        this.enabled = true;\n        this.opacity = 1;\n        // `NaN` is deliberate here, so that overrides are always applied\n        // and the `resetTransform` inside the `resize` method works in IE11.\n        this._pixelRatio = NaN;\n        this._width = 0;\n        this._height = 0;\n        this.canvas = new OffscreenCanvas(width, height);\n        this.context = this.canvas.getContext('2d');\n        this.imageSource = this.canvas.transferToImageBitmap();\n        this.setPixelRatio(overrideDevicePixelRatio);\n        this.resize(width, height);\n    }\n    HdpiOffscreenCanvas.isSupported = function () {\n        return window['OffscreenCanvas'] != null;\n    };\n    HdpiOffscreenCanvas.prototype.snapshot = function () {\n        this.imageSource.close();\n        this.imageSource = this.canvas.transferToImageBitmap();\n    };\n    HdpiOffscreenCanvas.prototype.destroy = function () {\n        this.imageSource.close();\n    };\n    HdpiOffscreenCanvas.prototype.clear = function () {\n        this.context.save();\n        this.context.resetTransform();\n        this.context.clearRect(0, 0, this.width, this.height);\n        this.context.restore();\n    };\n    Object.defineProperty(HdpiOffscreenCanvas.prototype, \"pixelRatio\", {\n        get: function () {\n            return this._pixelRatio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Changes the pixel ratio of the Canvas element to the given value,\n     * or uses the window.devicePixelRatio (default), then resizes the Canvas\n     * element accordingly (default).\n     */\n    HdpiOffscreenCanvas.prototype.setPixelRatio = function (ratio) {\n        var pixelRatio = ratio || window.devicePixelRatio;\n        if (pixelRatio === this.pixelRatio) {\n            return;\n        }\n        HdpiCanvas.overrideScale(this.context, pixelRatio);\n        this._pixelRatio = pixelRatio;\n        this.resize(this.width, this.height);\n    };\n    Object.defineProperty(HdpiOffscreenCanvas.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HdpiOffscreenCanvas.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HdpiOffscreenCanvas.prototype.resize = function (width, height) {\n        if (!(width > 0 && height > 0)) {\n            return;\n        }\n        var _a = this, canvas = _a.canvas, context = _a.context, pixelRatio = _a.pixelRatio;\n        canvas.width = Math.round(width * pixelRatio);\n        canvas.height = Math.round(height * pixelRatio);\n        context.resetTransform();\n        this._width = width;\n        this._height = height;\n    };\n    return HdpiOffscreenCanvas;\n}());\nexport { HdpiOffscreenCanvas };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}