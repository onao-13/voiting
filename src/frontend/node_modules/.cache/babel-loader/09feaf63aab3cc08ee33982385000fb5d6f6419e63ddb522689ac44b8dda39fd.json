{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport { AgChartsVue } from 'ag-charts-vue3';\nexport default {\n  components: {\n    'ag-charts-vue': AgChartsVue\n  },\n  data: () => ({\n    options: null,\n    event: {}\n  }),\n  methods: {\n    ...mapActions(['GET_EVENTS_FROM_API']),\n    downloadPDF() {\n      this.$refs.html2Pdf.generatePdf();\n    },\n    getEvent() {\n      let vm = this;\n      let id = this.$route.params['id'];\n      if (this.EVENTS.length > 0) {\n        this.EVENTS.map(function (item) {\n          if (id == item.id.toString()) {\n            vm.event = item;\n            vm.createChart();\n          }\n        });\n      }\n    },\n    createChart() {\n      let event = JSON.parse(JSON.stringify(this.event));\n      let voteAgainst = JSON.parse(JSON.stringify(this.event.voteAgainst));\n      this.options = {\n        data: [{\n          label: 'За',\n          value: voteFor\n        }, {\n          label: 'Против',\n          value: voteAgainst\n        }],\n        series: [{\n          type: 'pie',\n          angleKey: 'value',\n          calloutLabelKey: 'label',\n          sectorLabelKey: 'value',\n          sectorLabel: {\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: 17\n          },\n          fills: ['#FF0000', '#0000FF'],\n          highlightStyle: {\n            item: {\n              fillOpacity: 0,\n              stroke: '#000',\n              strokeWidth: 3\n            }\n          }\n        }],\n        legend: {\n          enabled: false\n        }\n      };\n    }\n  },\n  computed: {\n    ...mapGetters(['EVENTS']),\n    NameFile() {\n      return this.event.title;\n    },\n    voteFor() {\n      let num = this.event.voteFor * 100 / this.event.total;\n      return num.toFixed(2);\n    },\n    voteAgainst() {\n      let num = this.event.voteAgainst * 100 / this.event.total;\n      return num.toFixed(2);\n    }\n  },\n  created() {\n    this.createChart(this.event);\n  },\n  mounted() {\n    this.GET_EVENTS_FROM_API();\n    setTimeout(this.getEvent, 1000);\n    this.createChart();\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","AgChartsVue","components","data","options","event","methods","downloadPDF","$refs","html2Pdf","generatePdf","getEvent","vm","id","$route","params","EVENTS","length","map","item","toString","createChart","JSON","parse","stringify","voteAgainst","label","value","voteFor","series","type","angleKey","calloutLabelKey","sectorLabelKey","sectorLabel","color","fontWeight","fontSize","fills","highlightStyle","fillOpacity","stroke","strokeWidth","legend","enabled","computed","NameFile","title","num","total","toFixed","created","mounted","GET_EVENTS_FROM_API","setTimeout"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\EventsPageItem.vue"],"sourcesContent":["<template>\r\n<main-header>{{event.title}}</main-header>\r\n<div class=\"event\" id=\"invoice\">\r\n  <div class=\"event__title\">\r\n    {{event.title}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Дата проведения:</span> {{event.date}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Кандидат:</span> {{event.name}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Всего голосующих:</span> {{event.total}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Проголосовало \"ЗА\":</span> {{voteFor}}%\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Проголосовало \"ПРОТИВ\":</span> {{voteAgainst}}%\r\n  </div>\r\n</div>\r\n<div class=\"chart\">\r\n  <ag-charts-vue  id=\"invoice2\" :options=\"options\"></ag-charts-vue>\r\n</div>\r\n<div class=\"event__button\">\r\n <down-load-button dom=\"#invoice\" dom2=\"#invoice2\" :nameFile=\"NameFile + '.pdf'\"/>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport { AgChartsVue } from 'ag-charts-vue3';\r\n\r\nexport default {\r\n  components: {\r\n    'ag-charts-vue': AgChartsVue,\r\n  },\r\n\r\n data:() => ({\r\n  options: null,\r\n  event: {\r\n\r\n  },\r\n }),\r\n\r\n methods: {\r\n  ...mapActions([\r\n    'GET_EVENTS_FROM_API'\r\n  ]),\r\n\r\n  downloadPDF() {\r\n    this.$refs.html2Pdf.generatePdf()\r\n  },\r\n\r\n  getEvent() {\r\n    let vm = this;\r\n    let id = this.$route.params['id']\r\n    if (this.EVENTS.length > 0) {\r\n      this.EVENTS.map(function (item) {\r\n        if (id == item.id.toString()) {\r\n          vm.event = item;\r\n          vm.createChart();\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  createChart() {\r\n    let event = JSON.parse(JSON.stringify(this.event));\r\n    let voteAgainst = JSON.parse(JSON.stringify(this.event.voteAgainst));\r\n    this.options = {\r\n      data: [\r\n        { label: 'За', value: voteFor},\r\n        { label: 'Против', value: voteAgainst},\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          angleKey: 'value',\r\n          calloutLabelKey: 'label',\r\n          sectorLabelKey: 'value',\r\n          sectorLabel: {\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n            fontSize: 17,\r\n          },\r\n          fills: ['#FF0000', '#0000FF'],\r\n          highlightStyle: {\r\n            item: {\r\n              fillOpacity: 0,\r\n              stroke: '#000',\r\n              strokeWidth: 3,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      legend: {\r\n        enabled: false,\r\n      },\r\n    };\r\n  },\r\n },\r\n\r\n computed: {\r\n   ...mapGetters([\r\n     'EVENTS',\r\n   ]),\r\n\r\n   NameFile() {\r\n    return this.event.title\r\n   },\r\n\r\n   voteFor() {\r\n    let num = this.event.voteFor * 100 / this.event.total\r\n    return num.toFixed(2)\r\n   },\r\n\r\n   voteAgainst() {\r\n    let num = this.event.voteAgainst * 100 / this.event.total\r\n    return num.toFixed(2)\r\n   }\r\n },\r\n\r\n created() {\r\n    this.createChart(this.event)\r\n  },\r\n\r\n  mounted() {\r\n    this.GET_EVENTS_FROM_API()\r\n    setTimeout(this.getEvent, 1000)\r\n    this.createChart()\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.event {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  max-width: 1000px;\r\n  gap: 10px;\r\n  padding: 20px 0 0 20px;\r\n}\r\n.event__title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n.event__item {\r\n  span {\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\n.event__button {\r\n  padding: 0 0 0 20px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}