{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"iframe\", {\n  src: \"\",\n  frameborder: \"0\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"pie1\",\n  class: \"pie\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"main1\",\n  style: {\n    \"float\": \"left\",\n    \"width\": \"100%\",\n    \"height\": \"450px\"\n  }\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.downloadPdf && _ctx.downloadPdf(...args))\n  }, \"Скачать\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACAA,oBAAwC;EAAhCC,GAAG,EAAC,EAAE;EAACC,WAAW,EAAC;;gCAC3BF,oBAEM;EAFDG,EAAE,EAAC,MAAM;EAACC,KAAK,EAAC;iBACnBJ,oBAA8D;EAAzDG,EAAE,EAAC,OAAO;EAACE,KAA2C,EAA3C;IAAA;IAAA;IAAA;EAAA;;;;6DAFlBC,UAAwC,EACxCC,UAEM,EACNP,oBAA6C;IAApCQ,OAAK,yCAAEC,6CAAW;KAAE,SAAO","names":["_createElementVNode","src","frameborder","id","class","style","_hoisted_1","_hoisted_2","onClick","_ctx"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\PieChart.vue"],"sourcesContent":["<template>\r\n<iframe src=\"\" frameborder=\"0\"></iframe>\r\n<div id=\"pie1\" class=\"pie\">\r\n  <div id=\"main1\" style=\"float:left;width:100%;height: 450px\" />\r\n</div>\r\n<button @click=\"downloadPdf\">Скачать</button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n methods: {\r\n  initData() {\r\n   const echarts = require('echarts/lib/echarts')\r\n\r\n   require('echarts/lib/chart/pie')\r\n   require('echarts/lib/component/tooltip')\r\n\r\n    const myChart = echarts.init(document.getElementById('main1'))\r\n      myChart.setOption({\r\n      tooltip: {\r\n       trigger: 'item',\r\n        formatter:'{b}: {c} ({d}%)'\r\n      },\r\n      series: [\r\n        {\r\n         type: 'pie',\r\n         radius: '60%',\r\n         center: ['20%', '50%'],\r\n         data: [\r\n             {value: 12, name:'За', itemStyle: {color:'#4169E1' }},\r\n             {value: 18, name:'Против', itemStyle: {color:'#008000' }},\r\n\r\n         ],\r\n         label: {\r\n           normal: {\r\n             show: true,\r\n             textStyle: {\r\n              fontWeight: 400,\r\n              fontSize: 18\r\n             },\r\n             formatter:'{b} \\n {c} \\n ({d}%)'\r\n           }\r\n         },\r\n         itemStyle: {\r\n           emphasis: {\r\n             shadowBlur: 10,\r\n             shadowOffsetX: 0,\r\n             shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n           }\r\n         }\r\n        }\r\n      ]\r\n    })\r\n    window.onresize = myChart.resize\r\n  }\r\n },\r\n\r\n mounted() {\r\n  this.initData()\r\n }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}