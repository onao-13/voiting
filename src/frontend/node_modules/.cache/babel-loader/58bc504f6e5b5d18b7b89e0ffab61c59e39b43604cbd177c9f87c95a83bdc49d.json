{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar env_1 = require(\"zrender/lib/core/env\");\nvar modelUtil = require(\"../util/model\");\nvar Component_1 = require(\"./Component\");\nvar palette_1 = require(\"./mixin/palette\");\nvar dataFormat_1 = require(\"../model/mixin/dataFormat\");\nvar layout_1 = require(\"../util/layout\");\nvar task_1 = require(\"../stream/task\");\nvar clazz_1 = require(\"../util/clazz\");\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\nvar seriesFormatTooltip_1 = require(\"../component/tooltip/seriesFormatTooltip\");\nvar inner = modelUtil.makeInner();\nfunction getSelectionKey(data, dataIndex) {\n  return data.getName(dataIndex) || data.getId(dataIndex);\n}\nvar SeriesModel = function (_super) {\n  tslib_1.__extends(SeriesModel, _super);\n  function SeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._selectedDataIndicesMap = {};\n    return _this;\n  }\n  SeriesModel.prototype.init = function (option, parentModel, ecModel) {\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = task_1.createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    var sourceManager = inner(this).sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager.prepareSource();\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(data, 'getInitialData returned invalid data.');\n    }\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n    this._initSelectedMapFromData(data);\n  };\n  SeriesModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n    var layoutMode = layout_1.fetchLayoutMode(this);\n    var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n    var themeSubType = this.subType;\n    if (Component_1[\"default\"].hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption());\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  };\n  SeriesModel.prototype.mergeOption = function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = layout_1.fetchLayoutMode(this);\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n    var sourceManager = inner(this).sourceManager;\n    sourceManager.dirty();\n    sourceManager.prepareSource();\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n    this._initSelectedMapFromData(data);\n  };\n  SeriesModel.prototype.fillDataTextStyle = function (data) {\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  };\n  SeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return;\n  };\n  SeriesModel.prototype.appendData = function (params) {\n    var data = this.getRawData();\n    data.appendData(params.data);\n  };\n  SeriesModel.prototype.getData = function (dataType) {\n    var task = getCurrentTask(this);\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      return inner(this).data;\n    }\n  };\n  SeriesModel.prototype.getAllData = function () {\n    var mainData = this.getData();\n    return mainData && mainData.getLinkedDataAll ? mainData.getLinkedDataAll() : [{\n      data: mainData\n    }];\n  };\n  SeriesModel.prototype.setData = function (data) {\n    var task = getCurrentTask(this);\n    if (task) {\n      var context = task.context;\n      context.outputData = data;\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n    inner(this).data = data;\n  };\n  SeriesModel.prototype.getSource = function () {\n    return inner(this).sourceManager.getSource();\n  };\n  SeriesModel.prototype.getRawData = function () {\n    return inner(this).dataBeforeProcessed;\n  };\n  SeriesModel.prototype.getBaseAxis = function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  };\n  SeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return seriesFormatTooltip_1.defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n  };\n  SeriesModel.prototype.isAnimationEnabled = function () {\n    if (env_1[\"default\"].node) {\n      return false;\n    }\n    var animationEnabled = this.getShallow('animation');\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n    return !!animationEnabled;\n  };\n  SeriesModel.prototype.restoreData = function () {\n    this.dataTask.dirty();\n  };\n  SeriesModel.prototype.getColorFromPalette = function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel;\n    var color = palette_1.PaletteMixin.prototype.getColorFromPalette.call(this, name, scope, requestColorNum);\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n    return color;\n  };\n  SeriesModel.prototype.coordDimToDataDim = function (coordDim) {\n    return this.getRawData().mapDimensionsAll(coordDim);\n  };\n  SeriesModel.prototype.getProgressive = function () {\n    return this.get('progressive');\n  };\n  SeriesModel.prototype.getProgressiveThreshold = function () {\n    return this.get('progressiveThreshold');\n  };\n  SeriesModel.prototype.select = function (innerDataIndices, dataType) {\n    this._innerSelect(this.getData(dataType), innerDataIndices);\n  };\n  SeriesModel.prototype.unselect = function (innerDataIndices, dataType) {\n    var selectedMap = this.option.selectedMap;\n    if (!selectedMap) {\n      return;\n    }\n    var data = this.getData(dataType);\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      var dataIndex = innerDataIndices[i];\n      var nameOrId = getSelectionKey(data, dataIndex);\n      selectedMap[nameOrId] = false;\n      this._selectedDataIndicesMap[nameOrId] = -1;\n    }\n  };\n  SeriesModel.prototype.toggleSelect = function (innerDataIndices, dataType) {\n    var tmpArr = [];\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      tmpArr[0] = innerDataIndices[i];\n      this.isSelected(innerDataIndices[i], dataType) ? this.unselect(tmpArr, dataType) : this.select(tmpArr, dataType);\n    }\n  };\n  SeriesModel.prototype.getSelectedDataIndices = function () {\n    var selectedDataIndicesMap = this._selectedDataIndicesMap;\n    var nameOrIds = zrUtil.keys(selectedDataIndicesMap);\n    var dataIndices = [];\n    for (var i = 0; i < nameOrIds.length; i++) {\n      var dataIndex = selectedDataIndicesMap[nameOrIds[i]];\n      if (dataIndex >= 0) {\n        dataIndices.push(dataIndex);\n      }\n    }\n    return dataIndices;\n  };\n  SeriesModel.prototype.isSelected = function (dataIndex, dataType) {\n    var selectedMap = this.option.selectedMap;\n    if (!selectedMap) {\n      return false;\n    }\n    var data = this.getData(dataType);\n    var nameOrId = getSelectionKey(data, dataIndex);\n    return selectedMap[nameOrId] || false;\n  };\n  SeriesModel.prototype._innerSelect = function (data, innerDataIndices) {\n    var _a, _b;\n    var selectedMode = this.option.selectedMode;\n    var len = innerDataIndices.length;\n    if (!selectedMode || !len) {\n      return;\n    }\n    if (selectedMode === 'multiple') {\n      var selectedMap = this.option.selectedMap || (this.option.selectedMap = {});\n      for (var i = 0; i < len; i++) {\n        var dataIndex = innerDataIndices[i];\n        var nameOrId = getSelectionKey(data, dataIndex);\n        selectedMap[nameOrId] = true;\n        this._selectedDataIndicesMap[nameOrId] = data.getRawIndex(dataIndex);\n      }\n    } else if (selectedMode === 'single' || selectedMode === true) {\n      var lastDataIndex = innerDataIndices[len - 1];\n      var nameOrId = getSelectionKey(data, lastDataIndex);\n      this.option.selectedMap = (_a = {}, _a[nameOrId] = true, _a);\n      this._selectedDataIndicesMap = (_b = {}, _b[nameOrId] = data.getRawIndex(lastDataIndex), _b);\n    }\n  };\n  SeriesModel.prototype._initSelectedMapFromData = function (data) {\n    if (this.option.selectedMap) {\n      return;\n    }\n    var dataIndices = [];\n    if (data.hasItemOption) {\n      data.each(function (idx) {\n        var rawItem = data.getRawDataItem(idx);\n        if (typeof rawItem === 'object' && rawItem.selected) {\n          dataIndices.push(idx);\n        }\n      });\n    }\n    if (dataIndices.length > 0) {\n      this._innerSelect(data, dataIndices);\n    }\n  };\n  SeriesModel.registerClass = function (clz) {\n    return Component_1[\"default\"].registerClass(clz);\n  };\n  SeriesModel.protoInitialize = function () {\n    var proto = SeriesModel.prototype;\n    proto.type = 'series.__base__';\n    proto.seriesIndex = 0;\n    proto.useColorPaletteOnData = false;\n    proto.ignoreStyleOnData = false;\n    proto.hasSymbolVisual = false;\n    proto.defaultSymbol = 'circle';\n    proto.visualStyleAccessPath = 'itemStyle';\n    proto.visualDrawType = 'fill';\n  }();\n  return SeriesModel;\n}(Component_1[\"default\"]);\nzrUtil.mixin(SeriesModel, dataFormat_1.DataFormatMixin);\nzrUtil.mixin(SeriesModel, palette_1.PaletteMixin);\nclazz_1.mountExtend(SeriesModel, Component_1[\"default\"]);\nfunction autoSeriesName(seriesModel) {\n  var name = seriesModel.name;\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimensionsAll('seriesName');\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\nfunction dataTaskProgress(param, context) {\n  if (context.outputData && param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n}\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(tslib_1.__spreadArrays(data.CHANGABLE_METHODS, data.DOWNSAMPLE_METHODS), function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataChange, seriesModel));\n  });\n}\nfunction onDataChange(seriesModel, newList) {\n  var task = getCurrentTask(seriesModel);\n  if (task) {\n    task.setOutputEnd((newList || this).count());\n  }\n  return newList;\n}\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n  if (pipeline) {\n    var task = pipeline.currentTask;\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n    return task;\n  }\n}\nexports[\"default\"] = SeriesModel;","map":{"version":3,"names":["exports","__esModule","tslib_1","require","zrUtil","env_1","modelUtil","Component_1","palette_1","dataFormat_1","layout_1","task_1","clazz_1","sourceManager_1","seriesFormatTooltip_1","inner","makeInner","getSelectionKey","data","dataIndex","getName","getId","SeriesModel","_super","__extends","_this","apply","arguments","_selectedDataIndicesMap","prototype","init","option","parentModel","ecModel","seriesIndex","componentIndex","dataTask","createTask","count","dataTaskCount","reset","dataTaskReset","context","model","mergeDefaultAndTheme","sourceManager","SourceManager","prepareSource","getInitialData","wrapData","process","env","NODE_ENV","assert","dataBeforeProcessed","autoSeriesName","_initSelectedMapFromData","layoutMode","fetchLayoutMode","inputPositionParams","getLayoutParams","themeSubType","subType","hasClass","merge","getTheme","get","getDefaultOption","defaultEmphasis","fillDataTextStyle","mergeLayoutParam","mergeOption","newSeriesOption","dirty","isTypedArray","props","i","length","label","appendData","params","getRawData","getData","dataType","task","getCurrentTask","getLinkedData","getAllData","mainData","getLinkedDataAll","setData","outputData","getSource","getBaseAxis","coordSys","coordinateSystem","formatTooltip","multipleSeries","defaultSeriesFormatTooltip","series","isAnimationEnabled","node","animationEnabled","getShallow","restoreData","getColorFromPalette","name","scope","requestColorNum","color","PaletteMixin","call","coordDimToDataDim","coordDim","mapDimensionsAll","getProgressive","getProgressiveThreshold","select","innerDataIndices","_innerSelect","unselect","selectedMap","nameOrId","toggleSelect","tmpArr","isSelected","getSelectedDataIndices","selectedDataIndicesMap","nameOrIds","keys","dataIndices","push","_a","_b","selectedMode","len","getRawIndex","lastDataIndex","hasItemOption","each","idx","rawItem","getRawDataItem","selected","registerClass","clz","protoInitialize","proto","type","useColorPaletteOnData","ignoreStyleOnData","hasSymbolVisual","defaultSymbol","visualStyleAccessPath","visualDrawType","mixin","DataFormatMixin","mountExtend","seriesModel","isNameSpecified","getSeriesAutoName","dataDims","nameArr","dataDim","dimInfo","getDimensionInfo","displayName","join","cloneShallow","dataTaskProgress","param","end","__spreadArrays","CHANGABLE_METHODS","DOWNSAMPLE_METHODS","methodName","wrapMethod","curry","onDataChange","newList","setOutputEnd","scheduler","pipeline","getPipeline","uid","currentTask","agentStubMap"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/model/Series.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env_1 = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar dataFormat_1 = require(\"../model/mixin/dataFormat\");\n\nvar layout_1 = require(\"../util/layout\");\n\nvar task_1 = require(\"../stream/task\");\n\nvar clazz_1 = require(\"../util/clazz\");\n\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\n\nvar seriesFormatTooltip_1 = require(\"../component/tooltip/seriesFormatTooltip\");\n\nvar inner = modelUtil.makeInner();\n\nfunction getSelectionKey(data, dataIndex) {\n  return data.getName(dataIndex) || data.getId(dataIndex);\n}\n\nvar SeriesModel = function (_super) {\n  tslib_1.__extends(SeriesModel, _super);\n\n  function SeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._selectedDataIndicesMap = {};\n    return _this;\n  }\n\n  SeriesModel.prototype.init = function (option, parentModel, ecModel) {\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = task_1.createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    var sourceManager = inner(this).sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager.prepareSource();\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(data, 'getInitialData returned invalid data.');\n    }\n\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n    var layoutMode = layout_1.fetchLayoutMode(this);\n    var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n    var themeSubType = this.subType;\n\n    if (Component_1[\"default\"].hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption());\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  };\n\n  SeriesModel.prototype.mergeOption = function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = layout_1.fetchLayoutMode(this);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var sourceManager = inner(this).sourceManager;\n    sourceManager.dirty();\n    sourceManager.prepareSource();\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.fillDataTextStyle = function (data) {\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  };\n\n  SeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return;\n  };\n\n  SeriesModel.prototype.appendData = function (params) {\n    var data = this.getRawData();\n    data.appendData(params.data);\n  };\n\n  SeriesModel.prototype.getData = function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      return inner(this).data;\n    }\n  };\n\n  SeriesModel.prototype.getAllData = function () {\n    var mainData = this.getData();\n    return mainData && mainData.getLinkedDataAll ? mainData.getLinkedDataAll() : [{\n      data: mainData\n    }];\n  };\n\n  SeriesModel.prototype.setData = function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context;\n      context.outputData = data;\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  };\n\n  SeriesModel.prototype.getSource = function () {\n    return inner(this).sourceManager.getSource();\n  };\n\n  SeriesModel.prototype.getRawData = function () {\n    return inner(this).dataBeforeProcessed;\n  };\n\n  SeriesModel.prototype.getBaseAxis = function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  };\n\n  SeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return seriesFormatTooltip_1.defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n  };\n\n  SeriesModel.prototype.isAnimationEnabled = function () {\n    if (env_1[\"default\"].node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return !!animationEnabled;\n  };\n\n  SeriesModel.prototype.restoreData = function () {\n    this.dataTask.dirty();\n  };\n\n  SeriesModel.prototype.getColorFromPalette = function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel;\n    var color = palette_1.PaletteMixin.prototype.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  };\n\n  SeriesModel.prototype.coordDimToDataDim = function (coordDim) {\n    return this.getRawData().mapDimensionsAll(coordDim);\n  };\n\n  SeriesModel.prototype.getProgressive = function () {\n    return this.get('progressive');\n  };\n\n  SeriesModel.prototype.getProgressiveThreshold = function () {\n    return this.get('progressiveThreshold');\n  };\n\n  SeriesModel.prototype.select = function (innerDataIndices, dataType) {\n    this._innerSelect(this.getData(dataType), innerDataIndices);\n  };\n\n  SeriesModel.prototype.unselect = function (innerDataIndices, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return;\n    }\n\n    var data = this.getData(dataType);\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      var dataIndex = innerDataIndices[i];\n      var nameOrId = getSelectionKey(data, dataIndex);\n      selectedMap[nameOrId] = false;\n      this._selectedDataIndicesMap[nameOrId] = -1;\n    }\n  };\n\n  SeriesModel.prototype.toggleSelect = function (innerDataIndices, dataType) {\n    var tmpArr = [];\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      tmpArr[0] = innerDataIndices[i];\n      this.isSelected(innerDataIndices[i], dataType) ? this.unselect(tmpArr, dataType) : this.select(tmpArr, dataType);\n    }\n  };\n\n  SeriesModel.prototype.getSelectedDataIndices = function () {\n    var selectedDataIndicesMap = this._selectedDataIndicesMap;\n    var nameOrIds = zrUtil.keys(selectedDataIndicesMap);\n    var dataIndices = [];\n\n    for (var i = 0; i < nameOrIds.length; i++) {\n      var dataIndex = selectedDataIndicesMap[nameOrIds[i]];\n\n      if (dataIndex >= 0) {\n        dataIndices.push(dataIndex);\n      }\n    }\n\n    return dataIndices;\n  };\n\n  SeriesModel.prototype.isSelected = function (dataIndex, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return false;\n    }\n\n    var data = this.getData(dataType);\n    var nameOrId = getSelectionKey(data, dataIndex);\n    return selectedMap[nameOrId] || false;\n  };\n\n  SeriesModel.prototype._innerSelect = function (data, innerDataIndices) {\n    var _a, _b;\n\n    var selectedMode = this.option.selectedMode;\n    var len = innerDataIndices.length;\n\n    if (!selectedMode || !len) {\n      return;\n    }\n\n    if (selectedMode === 'multiple') {\n      var selectedMap = this.option.selectedMap || (this.option.selectedMap = {});\n\n      for (var i = 0; i < len; i++) {\n        var dataIndex = innerDataIndices[i];\n        var nameOrId = getSelectionKey(data, dataIndex);\n        selectedMap[nameOrId] = true;\n        this._selectedDataIndicesMap[nameOrId] = data.getRawIndex(dataIndex);\n      }\n    } else if (selectedMode === 'single' || selectedMode === true) {\n      var lastDataIndex = innerDataIndices[len - 1];\n      var nameOrId = getSelectionKey(data, lastDataIndex);\n      this.option.selectedMap = (_a = {}, _a[nameOrId] = true, _a);\n      this._selectedDataIndicesMap = (_b = {}, _b[nameOrId] = data.getRawIndex(lastDataIndex), _b);\n    }\n  };\n\n  SeriesModel.prototype._initSelectedMapFromData = function (data) {\n    if (this.option.selectedMap) {\n      return;\n    }\n\n    var dataIndices = [];\n\n    if (data.hasItemOption) {\n      data.each(function (idx) {\n        var rawItem = data.getRawDataItem(idx);\n\n        if (typeof rawItem === 'object' && rawItem.selected) {\n          dataIndices.push(idx);\n        }\n      });\n    }\n\n    if (dataIndices.length > 0) {\n      this._innerSelect(data, dataIndices);\n    }\n  };\n\n  SeriesModel.registerClass = function (clz) {\n    return Component_1[\"default\"].registerClass(clz);\n  };\n\n  SeriesModel.protoInitialize = function () {\n    var proto = SeriesModel.prototype;\n    proto.type = 'series.__base__';\n    proto.seriesIndex = 0;\n    proto.useColorPaletteOnData = false;\n    proto.ignoreStyleOnData = false;\n    proto.hasSymbolVisual = false;\n    proto.defaultSymbol = 'circle';\n    proto.visualStyleAccessPath = 'itemStyle';\n    proto.visualDrawType = 'fill';\n  }();\n\n  return SeriesModel;\n}(Component_1[\"default\"]);\n\nzrUtil.mixin(SeriesModel, dataFormat_1.DataFormatMixin);\nzrUtil.mixin(SeriesModel, palette_1.PaletteMixin);\nclazz_1.mountExtend(SeriesModel, Component_1[\"default\"]);\n\nfunction autoSeriesName(seriesModel) {\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimensionsAll('seriesName');\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  if (context.outputData && param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n}\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(tslib_1.__spreadArrays(data.CHANGABLE_METHODS, data.DOWNSAMPLE_METHODS), function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataChange, seriesModel));\n  });\n}\n\nfunction onDataChange(seriesModel, newList) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    task.setOutputEnd((newList || this).count());\n  }\n\n  return newList;\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nexports[\"default\"] = SeriesModel;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}