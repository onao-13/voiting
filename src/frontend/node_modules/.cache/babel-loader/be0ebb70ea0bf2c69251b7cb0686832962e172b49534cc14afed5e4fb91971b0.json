{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'edit-event-page',\n  data: () => ({\n    event: {}\n  }),\n  methods: {\n    ...mapActions(['PUT_EVENT_FROM_API', 'DELETE_EVENT_BY_API', 'GET_EVENTS_FROM_API']),\n    checkInputs(event) {\n      const formInputs = document.querySelectorAll('.form__input');\n      for (let input of formInputs) {\n        input.addEventListener('input', function () {\n          input.classList.remove('empty');\n        });\n        if (input.value == '') {\n          input.classList.add('empty');\n        }\n      }\n      for (var key in event) {\n        if (event[key] == \"\") {\n          alert('Заполните, пожалуйста все поля');\n          return false;\n        }\n      }\n      this.putEvent(event);\n    },\n    putEvent(event) {\n      axios.put(`https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/voiting/update/${event.id}`, event).then(this.$router.push('/events')).then(this.GET_EVENTS_FROM_API()).catch(error => {\n        console.log(error);\n        return error;\n      });\n    },\n    deleteEvent(event) {\n      axios.delete(`https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/voiting/delete/${event.id}`).then(this.$router.push('/events')).then(this.GET_EVENTS_FROM_API()).catch(error => {\n        console.log(error);\n        return error;\n      });\n    },\n    getEvent() {\n      let vm = this;\n      let id = this.$route.params['id'];\n      const wait = setInterval(() => {\n        if (this.EVENTS.length > 0) {\n          clearInterval(wait);\n          this.EVENTS.forEach(element => {\n            if (id == element.id.toString()) {\n              vm.event = element;\n            }\n          });\n        }\n      }, 100);\n    }\n  },\n  computed: {\n    ...mapGetters(['EVENTS'])\n  },\n  mounted() {\n    this.GET_EVENTS_FROM_API();\n    this.getEvent();\n  }\n};","map":{"version":3,"mappings":";AA4FA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,KAAI,MAAO,OAAM;AACxB,eAAe;EACdC,IAAI,EAAE,iBAAiB;EAEvBC,IAAI,EAAC,OAAO;IACXC,KAAK,EAAE,CAAC;EACT,CAAC,CAAC;EAEFC,OAAO,EAAE;IACR,GAAGL,UAAU,CAAC,CACX,oBAAoB,EACpB,qBAAqB,EACrB,qBAAoB,CACrB,CAAC;IAEFM,WAAW,CAACF,KAAK,EAAE;MAClB,MAAMG,UAAS,GAAIC,QAAQ,CAACC,gBAAgB,CAAC,cAAc;MAC3D,KAAK,IAAIC,KAAI,IAAKH,UAAU,EAAE;QAC5BG,KAAK,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAW;UACzCD,KAAK,CAACE,SAAS,CAACC,MAAM,CAAC,OAAO;QAChC,CAAC;QACD,IAAIH,KAAK,CAACI,KAAI,IAAK,EAAE,EAAE;UACrBJ,KAAK,CAACE,SAAS,CAACG,GAAG,CAAC,OAAO;QAC7B;MACF;MAEA,KAAK,IAAIC,GAAE,IAAKZ,KAAK,EAAE;QACrB,IAAIA,KAAK,CAACY,GAAG,KAAK,EAAE,EAAE;UACpBC,KAAK,CAAC,gCAAgC;UACtC,OAAO,KAAI;QACb;MACF;MAEA,IAAI,CAACC,QAAQ,CAACd,KAAK;IACrB,CAAC;IAEDc,QAAQ,CAACd,KAAK,EAAE;MACdH,KAAK,CAACkB,GAAG,CAAE,+EAA8Ef,KAAK,CAACgB,EAAG,EAAC,EAAEhB,KAAK,EACvGiB,IAAI,CAAC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC,EACjCF,IAAI,CAAC,IAAI,CAACG,mBAAmB,EAAE,EAE/BC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK;QACjB,OAAOA,KAAK;MACd,CAAC;IACL,CAAC;IAEDG,WAAW,CAACzB,KAAK,EAAE;MACjBH,KAAK,CAAC6B,MAAM,CAAE,+EAA8E1B,KAAK,CAACgB,EAAG,EAAC,EACnGC,IAAI,CAAC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC,EACjCF,IAAI,CAAC,IAAI,CAACG,mBAAmB,EAAE,EAE/BC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK;QACjB,OAAOA,KAAK;MACd,CAAC;IACL,CAAC;IAEDK,QAAQ,GAAG;MACT,IAAIC,EAAC,GAAI,IAAI;MACb,IAAIZ,EAAC,GAAI,IAAI,CAACa,MAAM,CAACC,MAAM,CAAC,IAAI;MAEhC,MAAMC,IAAG,GAAIC,WAAW,CAAC,MAAM;QAC7B,IAAI,IAAI,CAACC,MAAM,CAACC,MAAK,GAAI,CAAC,EAAE;UAC1BC,aAAa,CAACJ,IAAI;UAClB,IAAI,CAACE,MAAM,CAACG,OAAO,CAACC,OAAM,IAAK;YAC7B,IAAIrB,EAAC,IAAKqB,OAAO,CAACrB,EAAE,CAACsB,QAAQ,EAAE,EAAE;cAC/BV,EAAE,CAAC5B,KAAI,GAAIqC,OAAO;YAEpB;UACF,CAAC;QACH;MACF,CAAC,EAAE,GAAG;IACR;EACD,CAAC;EAEDE,QAAQ,EAAE;IACT,GAAG5C,UAAS,CAAG,CACb,QAAQ,CACT;EACF,CAAC;EAED6C,OAAO,GAAG;IACT,IAAI,CAACpB,mBAAmB,EAAC;IACzB,IAAI,CAACO,QAAQ,EAAC;EACf;AACD","names":["mapGetters","mapActions","axios","name","data","event","methods","checkInputs","formInputs","document","querySelectorAll","input","addEventListener","classList","remove","value","add","key","alert","putEvent","put","id","then","$router","push","GET_EVENTS_FROM_API","catch","error","console","log","deleteEvent","delete","getEvent","vm","$route","params","wait","setInterval","EVENTS","length","clearInterval","forEach","element","toString","computed","mounted"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\pages\\EditEventPage.vue"],"sourcesContent":["<template>\r\n<main-header>Редактирование ивента</main-header>\r\n<div class=\"container\">\r\n <div class=\"event\">\r\n  <div class=\"event__header\">\r\n   <div class=\"event__header_title\">Бюллетень</div>\r\n  </div>\r\n  <div v-html=\"event.description\" class=\"event__description\"></div>\r\n\r\n  <table class=\"event__table\">\r\n   <tr>\r\n    <th>ФИО соискателя</th>\r\n    <th>Достоин ученой степени</th>\r\n    <th>Результаты голосования</th>\r\n   </tr>\r\n   <tr>\r\n    <td>{{event.name}}</td>\r\n    <td>кандидата геолого-минералогических наук</td>\r\n    <td>\r\n     <div class=\"buttons\">\r\n      <button class=\"btn\">ЗА</button>\r\n      <button class=\"btn\">ПРОТИВ</button>\r\n     </div>\r\n    </td>\r\n   </tr>\r\n   <tr>\r\n    <td colspan=\"3\">\r\n     • В графе \"Результаты голосования\" выбрать нужное.\r\n    </td>\r\n   </tr>\r\n  </table>\r\n</div>\r\n<div class=\"event__header\">\r\n <div class=\"event__header_title\">Редактирование</div>\r\n</div>\r\n<form class=\"event__form\">\r\n <div class=\"form__inputs\">\r\n  <label for=\"\">\r\n  Название ивента\r\n  <input class=\"form__input\" v-model=\"event.title\" type=\"text\" name=\"\" id=\"\">\r\n  </label>\r\n  <label for=\"\">\r\n   Дата проведения\r\n   <input class=\"form__input\" v-model=\"event.date\" type=\"text\" name=\"\" id=\"\">\r\n  </label>\r\n  <label for=\"\">\r\n   ФИО кандидата\r\n   <input class=\"form__input\" v-model=\"event.name\" type=\"text\" name=\"\" id=\"\">\r\n  </label>\r\n  <label for=\"\">\r\n   Количество голосующих\r\n   <input class=\"form__input\" v-model=\"event.total\" type=\"number\" name=\"\" id=\"\">\r\n  </label>\r\n </div>\r\n <div class=\"form__textarea\">\r\n  <label for=\"\">\r\n   Описание ивента\r\n   <textarea class=\"form__input\" v-model=\"event.description\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n  </label>\r\n </div>\r\n</form>\r\n\r\n<div class=\"event__header\">\r\n <div class=\"event__header_title\">Данные ивента</div>\r\n</div>\r\n\r\n<div class=\"event__data\">\r\n <div class=\"event__data_passwords\">\r\n  <div class=\"event__data_passwords-title\">\r\n   Коды доступа:\r\n  </div>\r\n <div v-for=\"password in event.passwords\" :key=\"password.index\" class=\"password\">{{password.code}}</div>\r\n </div>\r\n\r\n <div class=\"event__data_link\">\r\n  <div class=\"event__data_link-title\">\r\n   Ссылка на голосование\r\n  </div>\r\n  {{ event.link }}\r\n </div>\r\n</div>\r\n\r\n<div class=\"event__buttons\">\r\n <button class=\"btn\" @click=\"checkInputs(event)\">Сохранить изменения</button>\r\n <button class=\"btn\" @click=\"deleteEvent(event)\">Удалить ивент</button>\r\n <button class=\"btn\" @click=\"$router.push(`/event/${event.id}`)\">Посмотреть отчет</button>\r\n</div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport axios from 'axios'\r\nexport default {\r\n name: 'edit-event-page',\r\n\r\n data:() => ({\r\n  event: {}\r\n }),\r\n\r\n methods: {\r\n  ...mapActions([\r\n     'PUT_EVENT_FROM_API',\r\n     'DELETE_EVENT_BY_API',\r\n     'GET_EVENTS_FROM_API'\r\n   ]),\r\n\r\n   checkInputs(event) {\r\n    const formInputs = document.querySelectorAll('.form__input')\r\n    for (let input of formInputs) {\r\n      input.addEventListener('input', function() {\r\n        input.classList.remove('empty')\r\n      })\r\n      if (input.value == '') {\r\n        input.classList.add('empty')\r\n      }\r\n    }\r\n\r\n    for (var key in event) {\r\n      if (event[key] == \"\") {\r\n        alert('Заполните, пожалуйста все поля')\r\n        return false\r\n      }\r\n    }\r\n\r\n    this.putEvent(event)\r\n  },\r\n\r\n  putEvent(event) {\r\n    axios.put(`https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/voiting/update/${event.id}`, event)\r\n      .then(this.$router.push('/events'))\r\n      .then(this.GET_EVENTS_FROM_API())\r\n\r\n      .catch((error) => {\r\n        console.log(error)\r\n        return error;\r\n      })\r\n  },\r\n\r\n  deleteEvent(event) {\r\n    axios.delete(`https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/voiting/delete/${event.id}`)\r\n      .then(this.$router.push('/events'))\r\n      .then(this.GET_EVENTS_FROM_API())\r\n\r\n      .catch((error) => {\r\n        console.log(error)\r\n        return error;\r\n      })\r\n  },\r\n\r\n  getEvent() {\r\n    let vm = this;\r\n    let id = this.$route.params['id']\r\n\r\n    const wait = setInterval(() => {\r\n      if (this.EVENTS.length > 0) {\r\n        clearInterval(wait)\r\n        this.EVENTS.forEach(element => {\r\n          if (id == element.id.toString()) {\r\n            vm.event = element;\r\n\r\n          }\r\n        })\r\n      }\r\n    }, 100)\r\n  },\r\n },\r\n\r\n computed: {\r\n  ...mapGetters ([\r\n    'EVENTS',\r\n  ]),\r\n },\r\n\r\n mounted() {\r\n  this.GET_EVENTS_FROM_API()\r\n  this.getEvent()\r\n }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.event {\r\n text-align: center;\r\n max-width: 800px;\r\n margin: 0 auto;\r\n}\r\n.event__header {\r\n font-size: 20px;\r\n font-weight: 900;\r\n text-align: center;\r\n width: fit-content;\r\n margin: 50px auto 20px auto;\r\n padding: 12px 20px;\r\n border-radius: 5px;\r\n background: rgb(230, 230, 230);\r\n}\r\n\r\n.event__description {\r\n margin-bottom: 30px;\r\n}\r\n\r\n.event__table {\r\n margin: 0 auto;\r\n border-collapse: collapse;\r\n border: 1px solid #000;\r\n\r\n th, td {\r\n  padding: 13px;\r\n  width: 300px;\r\n  max-width: 300px;\r\n  border: 1px solid #000;\r\n }\r\n\r\n td {\r\n  font-size: 17px;\r\n  font-weight: 500;\r\n }\r\n\r\n .buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n }\r\n}\r\n\r\n.event__form {\r\n display: flex;\r\n gap: 15px;\r\n display: flex;\r\n gap: 20px;\r\n\r\n label {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  font-size: 18px;\r\n }\r\n\r\n input, textarea {\r\n  border: 1px solid #000;\r\n  padding: 12px 8px 12px 12px;\r\n  font-size: 17px;\r\n  max-width: 100%;\r\n\r\n  &.empty {\r\n    border: 1px solid red;\r\n  }\r\n }\r\n}\r\n\r\n.form__inputs {\r\n display: flex;\r\n flex-direction: column;\r\n gap: 10px;\r\n width: 50%;\r\n}\r\n\r\n.form__textarea {\r\n width: 50%;\r\n}\r\n.event__buttons {\r\n display: flex;\r\n justify-content: center;\r\n gap: 10px;\r\n padding: 40px 0;\r\n}\r\n.event__data {\r\n display: flex;\r\n gap: 20px;\r\n}\r\n\r\n.event__data_passwords {\r\n padding: 20px;\r\n border-radius: 10px;\r\n background: rgb(228, 228, 228);\r\n display: flex;\r\n flex-direction: column;\r\n max-height: 400px;\r\n overflow: auto;\r\n\r\n div {\r\n  padding: 5px 0;\r\n }\r\n}\r\n\r\n.event__data_passwords-title {\r\n font-size: 17px;\r\n font-weight: 700;\r\n}\r\n\r\n.event__data_link-title {\r\n font-size: 17px;\r\n font-weight: 700;\r\n padding-bottom: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}