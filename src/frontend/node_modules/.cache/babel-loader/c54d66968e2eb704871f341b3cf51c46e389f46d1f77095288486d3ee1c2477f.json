{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Component_1 = require(\"../model/Component\");\nvar Component_2 = require(\"../view/Component\");\nvar types_1 = require(\"../util/types\");\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\nvar DatasetModel = function (_super) {\n  tslib_1.__extends(DatasetModel, _super);\n  function DatasetModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'dataset';\n    return _this;\n  }\n  DatasetModel.prototype.init = function (option, parentModel, ecModel) {\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n    this._sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager_1.disableTransformOptionMerge(this);\n  };\n  DatasetModel.prototype.mergeOption = function (newOption, ecModel) {\n    _super.prototype.mergeOption.call(this, newOption, ecModel);\n    sourceManager_1.disableTransformOptionMerge(this);\n  };\n  DatasetModel.prototype.optionUpdated = function () {\n    this._sourceManager.dirty();\n  };\n  DatasetModel.prototype.getSourceManager = function () {\n    return this._sourceManager;\n  };\n  DatasetModel.type = 'dataset';\n  DatasetModel.defaultOption = {\n    seriesLayoutBy: types_1.SERIES_LAYOUT_BY_COLUMN\n  };\n  return DatasetModel;\n}(Component_1[\"default\"]);\nexports.DatasetModel = DatasetModel;\nComponent_1[\"default\"].registerClass(DatasetModel);\nvar DatasetView = function (_super) {\n  tslib_1.__extends(DatasetView, _super);\n  function DatasetView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'dataset';\n    return _this;\n  }\n  DatasetView.type = 'dataset';\n  return DatasetView;\n}(Component_2[\"default\"]);\nComponent_2[\"default\"].registerClass(DatasetView);","map":{"version":3,"names":["exports","__esModule","tslib_1","require","Component_1","Component_2","types_1","sourceManager_1","DatasetModel","_super","__extends","_this","apply","arguments","type","prototype","init","option","parentModel","ecModel","call","_sourceManager","SourceManager","disableTransformOptionMerge","mergeOption","newOption","optionUpdated","dirty","getSourceManager","defaultOption","seriesLayoutBy","SERIES_LAYOUT_BY_COLUMN","registerClass","DatasetView"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/component/dataset.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Component_1 = require(\"../model/Component\");\n\nvar Component_2 = require(\"../view/Component\");\n\nvar types_1 = require(\"../util/types\");\n\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\n\nvar DatasetModel = function (_super) {\n  tslib_1.__extends(DatasetModel, _super);\n\n  function DatasetModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'dataset';\n    return _this;\n  }\n\n  DatasetModel.prototype.init = function (option, parentModel, ecModel) {\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n\n    this._sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager_1.disableTransformOptionMerge(this);\n  };\n\n  DatasetModel.prototype.mergeOption = function (newOption, ecModel) {\n    _super.prototype.mergeOption.call(this, newOption, ecModel);\n\n    sourceManager_1.disableTransformOptionMerge(this);\n  };\n\n  DatasetModel.prototype.optionUpdated = function () {\n    this._sourceManager.dirty();\n  };\n\n  DatasetModel.prototype.getSourceManager = function () {\n    return this._sourceManager;\n  };\n\n  DatasetModel.type = 'dataset';\n  DatasetModel.defaultOption = {\n    seriesLayoutBy: types_1.SERIES_LAYOUT_BY_COLUMN\n  };\n  return DatasetModel;\n}(Component_1[\"default\"]);\n\nexports.DatasetModel = DatasetModel;\nComponent_1[\"default\"].registerClass(DatasetModel);\n\nvar DatasetView = function (_super) {\n  tslib_1.__extends(DatasetView, _super);\n\n  function DatasetView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'dataset';\n    return _this;\n  }\n\n  DatasetView.type = 'dataset';\n  return DatasetView;\n}(Component_2[\"default\"]);\n\nComponent_2[\"default\"].registerClass(DatasetView);"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AAEzB,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,IAAIC,WAAW,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAE/C,IAAIE,WAAW,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE9C,IAAIG,OAAO,GAAGH,OAAO,CAAC,eAAe,CAAC;AAEtC,IAAII,eAAe,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AAE7D,IAAIK,YAAY,GAAG,UAAUC,MAAM,EAAE;EACnCP,OAAO,CAACQ,SAAS,CAACF,YAAY,EAAEC,MAAM,CAAC;EAEvC,SAASD,YAAY,GAAG;IACtB,IAAIG,KAAK,GAAGF,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IAEpEF,KAAK,CAACG,IAAI,GAAG,SAAS;IACtB,OAAOH,KAAK;EACd;EAEAH,YAAY,CAACO,SAAS,CAACC,IAAI,GAAG,UAAUC,MAAM,EAAEC,WAAW,EAAEC,OAAO,EAAE;IACpEV,MAAM,CAACM,SAAS,CAACC,IAAI,CAACI,IAAI,CAAC,IAAI,EAAEH,MAAM,EAAEC,WAAW,EAAEC,OAAO,CAAC;IAE9D,IAAI,CAACE,cAAc,GAAG,IAAId,eAAe,CAACe,aAAa,CAAC,IAAI,CAAC;IAC7Df,eAAe,CAACgB,2BAA2B,CAAC,IAAI,CAAC;EACnD,CAAC;EAEDf,YAAY,CAACO,SAAS,CAACS,WAAW,GAAG,UAAUC,SAAS,EAAEN,OAAO,EAAE;IACjEV,MAAM,CAACM,SAAS,CAACS,WAAW,CAACJ,IAAI,CAAC,IAAI,EAAEK,SAAS,EAAEN,OAAO,CAAC;IAE3DZ,eAAe,CAACgB,2BAA2B,CAAC,IAAI,CAAC;EACnD,CAAC;EAEDf,YAAY,CAACO,SAAS,CAACW,aAAa,GAAG,YAAY;IACjD,IAAI,CAACL,cAAc,CAACM,KAAK,EAAE;EAC7B,CAAC;EAEDnB,YAAY,CAACO,SAAS,CAACa,gBAAgB,GAAG,YAAY;IACpD,OAAO,IAAI,CAACP,cAAc;EAC5B,CAAC;EAEDb,YAAY,CAACM,IAAI,GAAG,SAAS;EAC7BN,YAAY,CAACqB,aAAa,GAAG;IAC3BC,cAAc,EAAExB,OAAO,CAACyB;EAC1B,CAAC;EACD,OAAOvB,YAAY;AACrB,CAAC,CAACJ,WAAW,CAAC,SAAS,CAAC,CAAC;AAEzBJ,OAAO,CAACQ,YAAY,GAAGA,YAAY;AACnCJ,WAAW,CAAC,SAAS,CAAC,CAAC4B,aAAa,CAACxB,YAAY,CAAC;AAElD,IAAIyB,WAAW,GAAG,UAAUxB,MAAM,EAAE;EAClCP,OAAO,CAACQ,SAAS,CAACuB,WAAW,EAAExB,MAAM,CAAC;EAEtC,SAASwB,WAAW,GAAG;IACrB,IAAItB,KAAK,GAAGF,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;IAEpEF,KAAK,CAACG,IAAI,GAAG,SAAS;IACtB,OAAOH,KAAK;EACd;EAEAsB,WAAW,CAACnB,IAAI,GAAG,SAAS;EAC5B,OAAOmB,WAAW;AACpB,CAAC,CAAC5B,WAAW,CAAC,SAAS,CAAC,CAAC;AAEzBA,WAAW,CAAC,SAAS,CAAC,CAAC2B,aAAa,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}