{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar model_1 = require(\"../../util/model\");\nvar util_1 = require(\"zrender/lib/core/util\");\nvar types_1 = require(\"../../util/types\");\nexports.BE_ORDINAL = {\n  Must: 1,\n  Might: 2,\n  Not: 3\n};\nvar innerGlobalModel = model_1.makeInner();\nfunction resetSourceDefaulter(ecModel) {\n  innerGlobalModel(ecModel).datasetMap = util_1.createHashMap();\n}\nexports.resetSourceDefaulter = resetSourceDefaulter;\nfunction inheritSourceMetaRawOption(upstream, newMetaRawOption) {\n  var parentMetaRawOption = upstream ? upstream.metaRawOption : null;\n  var seriesLayoutBy = util_1.retrieve2(newMetaRawOption.seriesLayoutBy, parentMetaRawOption ? parentMetaRawOption.seriesLayoutBy : null);\n  var sourceHeader = util_1.retrieve2(newMetaRawOption.sourceHeader, upstream ? upstream.startIndex : null);\n  var dimensions = util_1.retrieve2(newMetaRawOption.dimensions, upstream ? upstream.dimensionsDefine : null);\n  return {\n    seriesLayoutBy: seriesLayoutBy,\n    sourceHeader: sourceHeader,\n    dimensions: dimensions\n  };\n}\nexports.inheritSourceMetaRawOption = inheritSourceMetaRawOption;\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = innerGlobalModel(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  util_1.each(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\n    var coordDimInfo = util_1.isObject(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\n      name: coordDimInfoLoose\n    };\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\n    }\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  });\n  util_1.each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo);\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count;\n    } else if (baseCategoryDimIndex === coordDimIdx) {\n      pushDim(encode[coordDimName], 0, count);\n      pushDim(encodeItemName, 0, count);\n    } else {\n      var start = datasetRecord.categoryWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.categoryWayDim += count;\n    }\n  });\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n  if (!datasetModel) {\n    return encode;\n  }\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n  if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    util_1.each(dimensionsDefine, function (dim, idx) {\n      if ((util_1.isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = [];\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === exports.BE_ORDINAL.Not;\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === exports.BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== exports.BE_ORDINAL.Not) {\n        return idxRes0;\n      }\n      if (!isPureNumber) {\n        if (guessResult === exports.BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n  if (idxResult) {\n    encode.value = [idxResult.v];\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n;\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n  return encode;\n}\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\nfunction querySeriesUpstreamDatasetModel(seriesModel) {\n  var thisData = seriesModel.get('data', true);\n  if (!thisData) {\n    return model_1.queryReferringComponents(seriesModel.ecModel, 'dataset', {\n      index: seriesModel.get('datasetIndex', true),\n      id: seriesModel.get('datasetId', true)\n    }, model_1.SINGLE_REFERRING).models[0];\n  }\n}\nexports.querySeriesUpstreamDatasetModel = querySeriesUpstreamDatasetModel;\nfunction queryDatasetUpstreamDatasetModels(datasetModel) {\n  if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\n    return [];\n  }\n  return model_1.queryReferringComponents(datasetModel.ecModel, 'dataset', {\n    index: datasetModel.get('fromDatasetIndex', true),\n    id: datasetModel.get('fromDatasetId', true)\n  }, model_1.SINGLE_REFERRING).models;\n}\nexports.queryDatasetUpstreamDatasetModels = queryDatasetUpstreamDatasetModels;\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n}\nexports.guessOrdinal = guessOrdinal;\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result;\n  var maxLoop = 5;\n  if (util_1.isTypedArray(data)) {\n    return exports.BE_ORDINAL.Not;\n  }\n  var dimName;\n  var dimType;\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n    if (util_1.isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (util_1.isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n  if (dimType != null) {\n    return dimType === 'ordinal' ? exports.BE_ORDINAL.Must : exports.BE_ORDINAL.Not;\n  }\n  if (sourceFormat === types_1.SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n    if (seriesLayoutBy === types_1.SERIES_LAYOUT_BY_ROW) {\n      var sample = dataArrayRows[dimIndex];\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\n        var row = dataArrayRows[startIndex + i];\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS) {\n    var dataObjectRows = data;\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n    for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\n      var item = dataObjectRows[i];\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    var dataKeyedColumns = data;\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n    var sample = dataKeyedColumns[dimName];\n    if (!sample || util_1.isTypedArray(sample)) {\n      return exports.BE_ORDINAL.Not;\n    }\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var dataOriginal = data;\n    for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\n      var item = dataOriginal[i];\n      var val = model_1.getDataItemValue(item);\n      if (!util_1.isArray(val)) {\n        return exports.BE_ORDINAL.Not;\n      }\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n  function detectValue(val) {\n    var beStr = util_1.isString(val);\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? exports.BE_ORDINAL.Might : exports.BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return exports.BE_ORDINAL.Must;\n    }\n  }\n  return exports.BE_ORDINAL.Not;\n}","map":{"version":3,"names":["exports","__esModule","model_1","require","util_1","types_1","BE_ORDINAL","Must","Might","Not","innerGlobalModel","makeInner","resetSourceDefaulter","ecModel","datasetMap","createHashMap","inheritSourceMetaRawOption","upstream","newMetaRawOption","parentMetaRawOption","metaRawOption","seriesLayoutBy","retrieve2","sourceHeader","startIndex","dimensions","dimensionsDefine","makeSeriesEncodeForAxisCoordSys","coordDimensions","seriesModel","source","encode","datasetModel","querySeriesUpstreamDatasetModel","encodeItemName","encodeSeriesName","key","uid","baseCategoryDimIndex","categoryWayValueDimStart","slice","each","coordDimInfoLoose","coordDimIdx","coordDimInfo","isObject","name","type","getDataDimCountOnCoordDim","datasetRecord","get","set","categoryWayDim","valueWayDim","coordDimName","count","start","pushDim","dimIdxArr","idxFrom","idxCount","i","push","dimsDef","length","itemName","seriesName","makeSeriesEncodeForNameBased","dimCount","sourceFormat","potentialNameDimIndex","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","dim","idx","idxResult","idxRes0","idxRes1","guessRecords","len","Math","min","guessResult","doGuessOrdinal","data","isPureNumber","v","n","fulfilled","value","nameDimIndex","thisData","queryReferringComponents","index","id","SINGLE_REFERRING","models","queryDatasetUpstreamDatasetModels","guessOrdinal","dimIndex","result","maxLoop","isTypedArray","dimName","dimType","dimDefItem","isString","SOURCE_FORMAT_ARRAY_ROWS","dataArrayRows","SERIES_LAYOUT_BY_ROW","sample","detectValue","row","dataObjectRows","item","dataKeyedColumns","SOURCE_FORMAT_ORIGINAL","dataOriginal","val","getDataItemValue","isArray","beStr","isFinite"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/data/helper/sourceHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar types_1 = require(\"../../util/types\");\n\nexports.BE_ORDINAL = {\n  Must: 1,\n  Might: 2,\n  Not: 3\n};\nvar innerGlobalModel = model_1.makeInner();\n\nfunction resetSourceDefaulter(ecModel) {\n  innerGlobalModel(ecModel).datasetMap = util_1.createHashMap();\n}\n\nexports.resetSourceDefaulter = resetSourceDefaulter;\n\nfunction inheritSourceMetaRawOption(upstream, newMetaRawOption) {\n  var parentMetaRawOption = upstream ? upstream.metaRawOption : null;\n  var seriesLayoutBy = util_1.retrieve2(newMetaRawOption.seriesLayoutBy, parentMetaRawOption ? parentMetaRawOption.seriesLayoutBy : null);\n  var sourceHeader = util_1.retrieve2(newMetaRawOption.sourceHeader, upstream ? upstream.startIndex : null);\n  var dimensions = util_1.retrieve2(newMetaRawOption.dimensions, upstream ? upstream.dimensionsDefine : null);\n  return {\n    seriesLayoutBy: seriesLayoutBy,\n    sourceHeader: sourceHeader,\n    dimensions: dimensions\n  };\n}\n\nexports.inheritSourceMetaRawOption = inheritSourceMetaRawOption;\n\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = innerGlobalModel(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  util_1.each(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\n    var coordDimInfo = util_1.isObject(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\n      name: coordDimInfoLoose\n    };\n\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\n    }\n\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  });\n  util_1.each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo);\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count;\n    } else if (baseCategoryDimIndex === coordDimIdx) {\n      pushDim(encode[coordDimName], 0, count);\n      pushDim(encodeItemName, 0, count);\n    } else {\n      var start = datasetRecord.categoryWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.categoryWayDim += count;\n    }\n  });\n\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\n\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel) {\n    return encode;\n  }\n\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    util_1.each(dimensionsDefine, function (dim, idx) {\n      if ((util_1.isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = [];\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === exports.BE_ORDINAL.Not;\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === exports.BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== exports.BE_ORDINAL.Not) {\n        return idxRes0;\n      }\n\n      if (!isPureNumber) {\n        if (guessResult === exports.BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n\n  if (idxResult) {\n    encode.value = [idxResult.v];\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n;\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n\n  return encode;\n}\n\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\n\nfunction querySeriesUpstreamDatasetModel(seriesModel) {\n  var thisData = seriesModel.get('data', true);\n\n  if (!thisData) {\n    return model_1.queryReferringComponents(seriesModel.ecModel, 'dataset', {\n      index: seriesModel.get('datasetIndex', true),\n      id: seriesModel.get('datasetId', true)\n    }, model_1.SINGLE_REFERRING).models[0];\n  }\n}\n\nexports.querySeriesUpstreamDatasetModel = querySeriesUpstreamDatasetModel;\n\nfunction queryDatasetUpstreamDatasetModels(datasetModel) {\n  if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\n    return [];\n  }\n\n  return model_1.queryReferringComponents(datasetModel.ecModel, 'dataset', {\n    index: datasetModel.get('fromDatasetIndex', true),\n    id: datasetModel.get('fromDatasetId', true)\n  }, model_1.SINGLE_REFERRING).models;\n}\n\nexports.queryDatasetUpstreamDatasetModels = queryDatasetUpstreamDatasetModels;\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n}\n\nexports.guessOrdinal = guessOrdinal;\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result;\n  var maxLoop = 5;\n\n  if (util_1.isTypedArray(data)) {\n    return exports.BE_ORDINAL.Not;\n  }\n\n  var dimName;\n  var dimType;\n\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n\n    if (util_1.isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (util_1.isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n\n  if (dimType != null) {\n    return dimType === 'ordinal' ? exports.BE_ORDINAL.Must : exports.BE_ORDINAL.Not;\n  }\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n\n    if (seriesLayoutBy === types_1.SERIES_LAYOUT_BY_ROW) {\n      var sample = dataArrayRows[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\n        var row = dataArrayRows[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS) {\n    var dataObjectRows = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\n      var item = dataObjectRows[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    var dataKeyedColumns = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    var sample = dataKeyedColumns[dimName];\n\n    if (!sample || util_1.isTypedArray(sample)) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var dataOriginal = data;\n\n    for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\n      var item = dataOriginal[i];\n      var val = model_1.getDataItemValue(item);\n\n      if (!util_1.isArray(val)) {\n        return exports.BE_ORDINAL.Not;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    var beStr = util_1.isString(val);\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? exports.BE_ORDINAL.Might : exports.BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return exports.BE_ORDINAL.Must;\n    }\n  }\n\n  return exports.BE_ORDINAL.Not;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}