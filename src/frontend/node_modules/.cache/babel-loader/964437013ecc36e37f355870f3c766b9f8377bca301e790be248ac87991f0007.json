{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar util_1 = require(\"zrender/lib/core/util\");\nfunction dataStack(ecModel) {\n  var stackInfoMap = util_1.createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack');\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      };\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\nexports[\"default\"] = dataStack;\nfunction calculateStack(stackInfoList) {\n  util_1.each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex;\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex);\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n      var byValue;\n      var stackedDataRawIndex;\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      }\n      var stackedOver = NaN;\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j];\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex);\n          if (sum >= 0 && val > 0 || sum <= 0 && val < 0) {\n            sum += val;\n            stackedOver = val;\n            break;\n          }\n        }\n      }\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData);\n    targetStackInfo.data = newData;\n  });\n}","map":{"version":3,"names":["exports","__esModule","util_1","require","dataStack","ecModel","stackInfoMap","createHashMap","eachSeries","seriesModel","stack","get","stackInfoList","set","data","getData","stackInfo","stackResultDimension","getCalculationInfo","stackedOverDimension","stackedDimension","stackedByDimension","isStackedByIndex","length","setCalculationInfo","push","each","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","NaN","dims","targetData","newData","map","v0","v1","dataIndex","sum","isNaN","byValue","stackedDataRawIndex","getRawIndex","stackedOver","j","rawIndexOf","val","getByRawIndex","hostModel","setData"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/processor/dataStack.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nfunction dataStack(ecModel) {\n  var stackInfoMap = util_1.createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack');\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      };\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nexports[\"default\"] = dataStack;\n\nfunction calculateStack(stackInfoList) {\n  util_1.each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex;\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex);\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      }\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j];\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex);\n\n          if (sum >= 0 && val > 0 || sum <= 0 && val < 0) {\n            sum += val;\n            stackedOver = val;\n            break;\n          }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData);\n    targetStackInfo.data = newData;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}