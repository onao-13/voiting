{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { AgChartsVue } from 'ag-charts-vue3';\nexport default {\n  components: {\n    'ag-charts-vue': AgChartsVue\n  },\n  data: () => ({\n    options: null,\n    event: {}\n  }),\n  methods: {\n    downloadPDF() {\n      this.$refs.html2Pdf.generatePdf();\n    },\n    getEvent() {\n      this.event = this.EVENTS[this.$route.params['id'] - 1];\n    },\n    createChart() {\n      this.options = {\n        data: [{\n          label: 'За',\n          value: 30\n        }, {\n          label: 'Против',\n          value: this.event.voteAgainst\n        }],\n        series: [{\n          type: 'pie',\n          angleKey: 'value',\n          calloutLabelKey: 'label',\n          sectorLabelKey: 'value',\n          sectorLabel: {\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: 17\n          },\n          fills: ['#FF0000', '#0000FF'],\n          highlightStyle: {\n            item: {\n              fillOpacity: 0,\n              stroke: '#000',\n              strokeWidth: 3\n            }\n          }\n        }],\n        legend: {\n          enabled: false\n        }\n      };\n    }\n  },\n  computed: {\n    ...mapGetters(['EVENTS']),\n    NameFile() {\n      return this.event.title;\n    },\n    voteFor() {\n      let num = this.event.voteFor * 100 / this.event.total;\n      return num.toFixed(2);\n    }\n  },\n  created() {\n    this.createChart();\n  },\n  mounted() {\n    this.getEvent();\n    this.createChart();\n  }\n};","map":{"version":3,"mappings":"AA+BA,SAASA,UAAS,QAAS,MAAM;AACjC,SAASC,WAAU,QAAS,gBAAgB;AAE5C,eAAe;EACbC,UAAU,EAAE;IACV,eAAe,EAAED;EACnB,CAAC;EAEFE,IAAI,EAAC,OAAO;IACXC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE,CAEP;EACD,CAAC,CAAC;EAEFC,OAAO,EAAE;IACRC,WAAU,GAAM;MACd,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,WAAW,EAAC;IAClC,CAAC;IAEDC,QAAQ,GAAG;MACV,IAAI,CAACN,KAAI,GAAI,IAAI,CAACO,MAAM,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,GAAC,CAAC;IACpD,CAAC;IAEDC,WAAW,GAAG;MACZ,IAAI,CAACX,OAAM,GAAI;QACbD,IAAI,EAAE,CACJ;UAAEa,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAE,CAAC,EACzB;UAAED,KAAK,EAAE,QAAQ;UAAEC,KAAK,EAAE,IAAI,CAACZ,KAAK,CAACa;QAAY,CAAC,CACnD;QACDC,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,KAAK;UACXC,QAAQ,EAAE,OAAO;UACjBC,eAAe,EAAE,OAAO;UACxBC,cAAc,EAAE,OAAO;UACvBC,WAAW,EAAE;YACXC,KAAK,EAAE,OAAO;YACdC,UAAU,EAAE,MAAM;YAClBC,QAAQ,EAAE;UACZ,CAAC;UACDC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC7BC,cAAc,EAAE;YACdC,IAAI,EAAE;cACJC,WAAW,EAAE,CAAC;cACdC,MAAM,EAAE,MAAM;cACdC,WAAW,EAAE;YACf;UACF;QACF,CAAC,CACF;QACDC,MAAM,EAAE;UACNC,OAAO,EAAE;QACX;MACF,CAAC;IACH;EACD,CAAC;EAEDC,QAAQ,EAAE;IACR,GAAGpC,UAAU,CAAC,CACZ,QAAQ,CACT,CAAC;IAEFqC,QAAQ,GAAG;MACV,OAAO,IAAI,CAAChC,KAAK,CAACiC,KAAI;IACvB,CAAC;IAEDC,OAAO,GAAG;MACT,IAAIC,GAAE,GAAI,IAAI,CAACnC,KAAK,CAACkC,OAAM,GAAI,GAAE,GAAI,IAAI,CAAClC,KAAK,CAACoC,KAAI;MACpD,OAAOD,GAAG,CAACE,OAAO,CAAC,CAAC;IACrB;EACF,CAAC;EAEDC,OAAO,GAAG;IACP,IAAI,CAAC5B,WAAW,EAAC;EACnB,CAAC;EAED6B,OAAO,GAAG;IACR,IAAI,CAACjC,QAAQ,EAAC;IACd,IAAI,CAACI,WAAW,EAAC;EACnB;AAEF","names":["mapGetters","AgChartsVue","components","data","options","event","methods","downloadPDF","$refs","html2Pdf","generatePdf","getEvent","EVENTS","$route","params","createChart","label","value","voteAgainst","series","type","angleKey","calloutLabelKey","sectorLabelKey","sectorLabel","color","fontWeight","fontSize","fills","highlightStyle","item","fillOpacity","stroke","strokeWidth","legend","enabled","computed","NameFile","title","voteFor","num","total","toFixed","created","mounted"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\EventsPageItem.vue"],"sourcesContent":["<template>\r\n<main-header>{{event.title}}</main-header>\r\n<div class=\"event\" id=\"invoice\">\r\n  <div class=\"event__title\">\r\n    {{event.title}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Дата проведения:</span> {{event.date}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Кандидат:</span> {{event.name}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Всего голосующих:</span> {{event.total}}\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Проголосовало \"ЗА\":</span> {{voteFor}}%\r\n  </div>\r\n  <div class=\"event__item\">\r\n    <span>Проголосовало \"ПРОТИВ\":</span> {{event.total}}\r\n  </div>\r\n</div>\r\n<div class=\"chart\">\r\n  <ag-charts-vue  id=\"invoice2\" :options=\"options\"></ag-charts-vue>\r\n</div>\r\n<div class=\"event__button\">\r\n <down-load-button dom=\"#invoice\" dom2=\"#invoice2\" :nameFile=\"NameFile + '.pdf'\"/>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport { AgChartsVue } from 'ag-charts-vue3';\r\n\r\nexport default {\r\n  components: {\r\n    'ag-charts-vue': AgChartsVue,\r\n  },\r\n\r\n data:() => ({\r\n  options: null,\r\n  event: {\r\n\r\n  },\r\n }),\r\n\r\n methods: {\r\n  downloadPDF  () {\r\n    this.$refs.html2Pdf.generatePdf()\r\n  },\r\n\r\n  getEvent() {\r\n   this.event = this.EVENTS[this.$route.params['id']-1]\r\n  },\r\n\r\n  createChart() {\r\n    this.options = {\r\n      data: [\r\n        { label: 'За', value: 30},\r\n        { label: 'Против', value: this.event.voteAgainst },\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          angleKey: 'value',\r\n          calloutLabelKey: 'label',\r\n          sectorLabelKey: 'value',\r\n          sectorLabel: {\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n            fontSize: 17,\r\n          },\r\n          fills: ['#FF0000', '#0000FF'],\r\n          highlightStyle: {\r\n            item: {\r\n              fillOpacity: 0,\r\n              stroke: '#000',\r\n              strokeWidth: 3,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      legend: {\r\n        enabled: false,\r\n      },\r\n    };\r\n  },\r\n },\r\n\r\n computed: {\r\n   ...mapGetters([\r\n     'EVENTS',\r\n   ]),\r\n\r\n   NameFile() {\r\n    return this.event.title\r\n   },\r\n\r\n   voteFor() {\r\n    let num = this.event.voteFor * 100 / this.event.total\r\n    return num.toFixed(2)\r\n   }\r\n },\r\n\r\n created() {\r\n    this.createChart()\r\n  },\r\n\r\n  mounted() {\r\n    this.getEvent()\r\n    this.createChart()\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.event {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  max-width: 1000px;\r\n  gap: 10px;\r\n  padding: 20px 0 0 20px;\r\n}\r\n.event__title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n.event__item {\r\n  span {\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\n.event__button {\r\n  padding: 0 0 0 20px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}