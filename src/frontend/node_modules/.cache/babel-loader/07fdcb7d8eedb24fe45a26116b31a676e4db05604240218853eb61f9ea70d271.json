{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar util_1 = require(\"zrender/lib/core/util\");\nvar parseSVG_1 = require(\"zrender/lib/tool/parseSVG\");\nvar storage = util_1.createHashMap();\nexports[\"default\"] = {\n  registerMap: function (mapName, rawDef, rawSpecialAreas) {\n    var records;\n    if (util_1.isArray(rawDef)) {\n      records = rawDef;\n    } else if (rawDef.svg) {\n      records = [{\n        type: 'svg',\n        source: rawDef.svg,\n        specialAreas: rawDef.specialAreas\n      }];\n    } else {\n      var geoSource = rawDef.geoJson || rawDef.geoJSON;\n      if (geoSource && !rawDef.features) {\n        rawSpecialAreas = rawDef.specialAreas;\n        rawDef = geoSource;\n      }\n      records = [{\n        type: 'geoJSON',\n        source: rawDef,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n    util_1.each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      if (process.env.NODE_ENV !== 'production') {\n        util_1.assert(parse, 'Illegal map type: ' + type);\n      }\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !util_1.isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  svg: function (record) {\n    record.svgXML = parseSVG_1.parseXML(record.source);\n  }\n};","map":{"version":3,"names":["exports","__esModule","util_1","require","parseSVG_1","storage","createHashMap","registerMap","mapName","rawDef","rawSpecialAreas","records","isArray","svg","type","source","specialAreas","geoSource","geoJson","geoJSON","features","each","record","parse","parsers","process","env","NODE_ENV","assert","set","retrieveMap","get","isString","JSON","Function","svgXML","parseXML"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/coord/geo/mapDataStorage.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar parseSVG_1 = require(\"zrender/lib/tool/parseSVG\");\n\nvar storage = util_1.createHashMap();\nexports[\"default\"] = {\n  registerMap: function (mapName, rawDef, rawSpecialAreas) {\n    var records;\n\n    if (util_1.isArray(rawDef)) {\n      records = rawDef;\n    } else if (rawDef.svg) {\n      records = [{\n        type: 'svg',\n        source: rawDef.svg,\n        specialAreas: rawDef.specialAreas\n      }];\n    } else {\n      var geoSource = rawDef.geoJson || rawDef.geoJSON;\n\n      if (geoSource && !rawDef.features) {\n        rawSpecialAreas = rawDef.specialAreas;\n        rawDef = geoSource;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawDef,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    util_1.each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n\n      if (process.env.NODE_ENV !== 'production') {\n        util_1.assert(parse, 'Illegal map type: ' + type);\n      }\n\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !util_1.isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  svg: function (record) {\n    record.svgXML = parseSVG_1.parseXML(record.source);\n  }\n};"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AAEzB,IAAIC,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE7C,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAErD,IAAIE,OAAO,GAAGH,MAAM,CAACI,aAAa,EAAE;AACpCN,OAAO,CAAC,SAAS,CAAC,GAAG;EACnBO,WAAW,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAEC,eAAe,EAAE;IACvD,IAAIC,OAAO;IAEX,IAAIT,MAAM,CAACU,OAAO,CAACH,MAAM,CAAC,EAAE;MAC1BE,OAAO,GAAGF,MAAM;IAClB,CAAC,MAAM,IAAIA,MAAM,CAACI,GAAG,EAAE;MACrBF,OAAO,GAAG,CAAC;QACTG,IAAI,EAAE,KAAK;QACXC,MAAM,EAAEN,MAAM,CAACI,GAAG;QAClBG,YAAY,EAAEP,MAAM,CAACO;MACvB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIC,SAAS,GAAGR,MAAM,CAACS,OAAO,IAAIT,MAAM,CAACU,OAAO;MAEhD,IAAIF,SAAS,IAAI,CAACR,MAAM,CAACW,QAAQ,EAAE;QACjCV,eAAe,GAAGD,MAAM,CAACO,YAAY;QACrCP,MAAM,GAAGQ,SAAS;MACpB;MAEAN,OAAO,GAAG,CAAC;QACTG,IAAI,EAAE,SAAS;QACfC,MAAM,EAAEN,MAAM;QACdO,YAAY,EAAEN;MAChB,CAAC,CAAC;IACJ;IAEAR,MAAM,CAACmB,IAAI,CAACV,OAAO,EAAE,UAAUW,MAAM,EAAE;MACrC,IAAIR,IAAI,GAAGQ,MAAM,CAACR,IAAI;MACtBA,IAAI,KAAK,SAAS,KAAKA,IAAI,GAAGQ,MAAM,CAACR,IAAI,GAAG,SAAS,CAAC;MACtD,IAAIS,KAAK,GAAGC,OAAO,CAACV,IAAI,CAAC;MAEzB,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzCzB,MAAM,CAAC0B,MAAM,CAACL,KAAK,EAAE,oBAAoB,GAAGT,IAAI,CAAC;MACnD;MAEAS,KAAK,CAACD,MAAM,CAAC;IACf,CAAC,CAAC;IACF,OAAOjB,OAAO,CAACwB,GAAG,CAACrB,OAAO,EAAEG,OAAO,CAAC;EACtC,CAAC;EACDmB,WAAW,EAAE,UAAUtB,OAAO,EAAE;IAC9B,OAAOH,OAAO,CAAC0B,GAAG,CAACvB,OAAO,CAAC;EAC7B;AACF,CAAC;AACD,IAAIgB,OAAO,GAAG;EACZL,OAAO,EAAE,UAAUG,MAAM,EAAE;IACzB,IAAIP,MAAM,GAAGO,MAAM,CAACP,MAAM;IAC1BO,MAAM,CAACH,OAAO,GAAG,CAACjB,MAAM,CAAC8B,QAAQ,CAACjB,MAAM,CAAC,GAAGA,MAAM,GAAG,OAAOkB,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACV,KAAK,GAAGU,IAAI,CAACV,KAAK,CAACR,MAAM,CAAC,GAAG,IAAImB,QAAQ,CAAC,UAAU,GAAGnB,MAAM,GAAG,IAAI,CAAC,EAAE;EAClK,CAAC;EACDF,GAAG,EAAE,UAAUS,MAAM,EAAE;IACrBA,MAAM,CAACa,MAAM,GAAG/B,UAAU,CAACgC,QAAQ,CAACd,MAAM,CAACP,MAAM,CAAC;EACpD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}