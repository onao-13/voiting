{"ast":null,"code":"import { AgChartsVue } from 'ag-charts-vue3';\nimport { mapGetters } from 'vuex';\nimport pdfMake from 'pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport htmlToPdfmake from 'html-to-pdfmake';\nexport default {\n  components: {\n    'ag-charts-vue': AgChartsVue\n  },\n  data: function () {\n    return {\n      options: null,\n      event: {}\n    };\n  },\n  methods: {\n    createChart() {\n      this.options = {\n        data: [{\n          label: 'За',\n          value: this.event.voteFor\n        }, {\n          label: 'Против',\n          value: this.event.voteAgainst\n        }],\n        series: [{\n          type: 'pie',\n          angleKey: 'value',\n          calloutLabelKey: 'label',\n          sectorLabelKey: 'value',\n          sectorLabel: {\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: 17\n          },\n          palette: {\n            fills: ['#000', '#0076C5']\n          }\n        }]\n      };\n    },\n    getEvent() {\n      this.event = this.EVENTS[this.$route.params['id'] - 1];\n    },\n    print() {\n      //get table html\n      const pdfTable = document.getElementById('printCons');\n      //html to pdf format\n      var html = htmlToPdfmake(pdfTable.innerHTML);\n      const documentDefinition = {\n        content: html\n      };\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\n      pdfMake.createPdf(documentDefinition).open();\n    }\n  },\n  created() {\n    this.createChart();\n  },\n  mounted() {\n    this.getEvent();\n    this.createChart();\n  },\n  computed: {\n    ...mapGetters(['EVENTS'])\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,WAAU,QAAS,gBAAgB;AAC5C,SAASC,UAAS,QAAS,MAAM;AAEjC,OAAOC,OAAM,MAAO,SAAS;AAC7B,OAAOC,QAAO,MAAO,yBAAyB;AAC9C,OAAOC,aAAY,MAAO,iBAAiB;AAE3C,eAAe;EAEbC,UAAU,EAAE;IACV,eAAe,EAAEL;EACnB,CAAC;EACDM,IAAI,EAAE,YAAY;IAChB,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,CAEP;IACF,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ,IAAI,CAACH,OAAM,GAAI;QACfD,IAAI,EAAE,CACJ;UAAEK,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACK;QAAO,CAAC,EACzC;UAAEF,KAAK,EAAE,QAAQ;UAAEC,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACM;QAAY,CAAC,CACnD;QACDC,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,KAAK;UACXC,QAAQ,EAAE,OAAO;UACjBC,eAAe,EAAE,OAAO;UACxBC,cAAc,EAAE,OAAO;UACvBC,WAAW,EAAE;YACXC,KAAK,EAAE,OAAO;YACdC,UAAU,EAAE,MAAM;YAClBC,QAAQ,EAAE;UACZ,CAAC;UACDC,OAAO,EAAE;YACPC,KAAK,EAAE,CACH,MAAM,EACN,SAAS;UAEf;QACF,CAAC;MAEL,CAAC;IACD,CAAC;IAEDC,QAAQ,GAAG;MACT,IAAI,CAAClB,KAAI,GAAI,IAAI,CAACmB,MAAM,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,GAAC,CAAC;IACrD,CAAC;IAEDC,KAAK,GAAG;MACN;MACA,MAAMC,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;MACrD;MACA,IAAIC,IAAG,GAAI9B,aAAa,CAAC2B,QAAQ,CAACI,SAAS,CAAC;MAE5C,MAAMC,kBAAiB,GAAI;QAAEC,OAAO,EAAEH;MAAK,CAAC;MAC5ChC,OAAO,CAACoC,GAAE,GAAInC,QAAQ,CAACD,OAAO,CAACoC,GAAG;MAClCpC,OAAO,CAACqC,SAAS,CAACH,kBAAkB,CAAC,CAACI,IAAI,EAAE;IAC9C;EACF,CAAC;EAEDC,OAAO,GAAG;IACR,IAAI,CAAC/B,WAAW,EAAC;EAEnB,CAAC;EAEDgC,OAAO,GAAG;IACR,IAAI,CAAChB,QAAQ,EAAC;IACd,IAAI,CAAChB,WAAW,EAAC;EACnB,CAAC;EAEDiC,QAAQ,EAAE;IACT,GAAG1C,UAAU,CAAC,CACZ,QAAQ,CACT;EACH;AACD","names":["AgChartsVue","mapGetters","pdfMake","pdfFonts","htmlToPdfmake","components","data","options","event","methods","createChart","label","value","voteFor","voteAgainst","series","type","angleKey","calloutLabelKey","sectorLabelKey","sectorLabel","color","fontWeight","fontSize","palette","fills","getEvent","EVENTS","$route","params","print","pdfTable","document","getElementById","html","innerHTML","documentDefinition","content","vfs","createPdf","open","created","mounted","computed"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\PieChart.vue"],"sourcesContent":["<template>\r\n\r\n   <ag-charts-vue  :options=\"options\"></ag-charts-vue>\r\n\r\n\r\n   <button id=\"no-print\" @click=\"print\" class=\"btn\">Скачать в pdf</button>\r\n</template>\r\n\r\n<script>\r\nimport { AgChartsVue } from 'ag-charts-vue3';\r\nimport { mapGetters } from 'vuex';\r\n\r\nimport pdfMake from 'pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport htmlToPdfmake from 'html-to-pdfmake';\r\n\r\nexport default {\r\n\r\n  components: {\r\n    'ag-charts-vue': AgChartsVue,\r\n  },\r\n  data: function () {\r\n    return {\r\n      options: null,\r\n      event: {\r\n\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    createChart() {\r\n      this.options = {\r\n      data: [\r\n        { label: 'За', value: this.event.voteFor},\r\n        { label: 'Против', value: this.event.voteAgainst },\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          angleKey: 'value',\r\n          calloutLabelKey: 'label',\r\n          sectorLabelKey: 'value',\r\n          sectorLabel: {\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n            fontSize: 17\r\n          },\r\n          palette: {\r\n            fills: [\r\n                '#000',\r\n                '#0076C5',\r\n            ],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    },\r\n\r\n    getEvent() {\r\n      this.event = this.EVENTS[this.$route.params['id']-1]\r\n    },\r\n\r\n    print() {\r\n      //get table html\r\n      const pdfTable = document.getElementById('printCons');\r\n      //html to pdf format\r\n      var html = htmlToPdfmake(pdfTable.innerHTML);\r\n\r\n      const documentDefinition = { content: html };\r\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n      pdfMake.createPdf(documentDefinition).open();\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.createChart()\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.getEvent()\r\n    this.createChart()\r\n  },\r\n\r\n  computed: {\r\n   ...mapGetters([\r\n     'EVENTS',\r\n   ]),\r\n },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}