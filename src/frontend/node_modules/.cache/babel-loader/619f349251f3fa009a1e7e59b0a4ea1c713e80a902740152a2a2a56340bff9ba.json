{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nvar HierarchyNode = /** @class */function () {\n  function HierarchyNode(datum) {\n    this.value = 0;\n    this.depth = 0;\n    this.height = 0;\n    this.parent = undefined;\n    this.children = undefined;\n    this.datum = datum;\n  }\n  HierarchyNode.prototype.countFn = function (node) {\n    var sum = 0,\n      children = node.children;\n    if (!children || !children.length) {\n      sum = 1;\n    } else {\n      var i = children.length;\n      while (--i >= 0) {\n        sum += children[i].value;\n      }\n    }\n    node.value = sum;\n  };\n  HierarchyNode.prototype.count = function () {\n    return this.eachAfter(this.countFn);\n  };\n  HierarchyNode.prototype.each = function (callback, scope) {\n    var _this = this;\n    var index = -1;\n    this.iterator(function (node) {\n      callback.call(scope, node, ++index, _this);\n    });\n    return this;\n  };\n  /**\n   * Invokes the given callback for each node in post-order traversal.\n   * @param callback\n   * @param scope\n   */\n  HierarchyNode.prototype.eachAfter = function (callback, scope) {\n    var node = this;\n    var nodes = [node];\n    var next = [];\n    while (node = nodes.pop()) {\n      next.push(node);\n      var children = node.children;\n      if (children) {\n        for (var i = 0, n = children.length; i < n; ++i) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n    var index = -1;\n    while (node = next.pop()) {\n      callback.call(scope, node, ++index, this);\n    }\n    return this;\n  };\n  /**\n   * Invokes the given callback for each node in pre-order traversal.\n   * @param callback\n   * @param scope\n   */\n  HierarchyNode.prototype.eachBefore = function (callback, scope) {\n    var node = this;\n    var nodes = [node];\n    var index = -1;\n    while (node = nodes.pop()) {\n      callback.call(scope, node, ++index, this);\n      var children = node.children;\n      if (children) {\n        for (var i = children.length - 1; i >= 0; --i) {\n          var child = children[i];\n          nodes.push(child);\n        }\n      }\n    }\n    return this;\n  };\n  HierarchyNode.prototype.find = function (callback, scope) {\n    var _this = this;\n    var index = -1;\n    var result;\n    this.iterator(function (node) {\n      if (callback.call(scope, node, ++index, _this)) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  };\n  HierarchyNode.prototype.sum = function (value) {\n    return this.eachAfter(function (node) {\n      var sum = +value(node.datum) || 0;\n      var children = node.children;\n      if (children) {\n        var i = children.length;\n        while (--i >= 0) {\n          sum += children[i].value;\n        }\n      }\n      node.value = sum;\n    });\n  };\n  HierarchyNode.prototype.sort = function (compare) {\n    return this.eachBefore(function (node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  };\n  HierarchyNode.prototype.path = function (end) {\n    var start = this;\n    var ancestor = leastCommonAncestor(start, end);\n    var nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  };\n  HierarchyNode.prototype.ancestors = function () {\n    var node = this;\n    var nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  };\n  HierarchyNode.prototype.descendants = function () {\n    var nodes = [];\n    this.iterator(function (node) {\n      return nodes.push(node);\n    });\n    return nodes;\n  };\n  HierarchyNode.prototype.leaves = function () {\n    var leaves = [];\n    this.eachBefore(function (node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  };\n  HierarchyNode.prototype.links = function () {\n    var root = this;\n    var links = [];\n    root.each(function (node) {\n      if (node !== root) {\n        // Don’t include the root’s parent, if any.\n        links.push({\n          source: node.parent,\n          target: node\n        });\n      }\n    });\n    return links;\n  };\n  HierarchyNode.prototype.iterator = function (callback) {\n    var e_1, _a;\n    var _b = this.children,\n      children = _b === void 0 ? [] : _b;\n    if (callback(this) === false) {\n      return false;\n    }\n    try {\n      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n        if (child.iterator(callback) === false) {\n          return false;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return true;\n  };\n  return HierarchyNode;\n}();\nexport { HierarchyNode };\nexport function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) {\n      children = mapChildren;\n    }\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n  var root = new HierarchyNode(data);\n  var nodes = [root];\n  var _loop_1 = function () {\n    var node = nodes.pop();\n    var datumChildren = children(node.datum);\n    if (!datumChildren) {\n      return \"continue\";\n    }\n    var newNodes = Array.from(datumChildren).map(function (dc) {\n      return new HierarchyNode(dc);\n    });\n    newNodes.forEach(function (child) {\n      child.parent = node;\n      child.depth = node.depth + 1;\n    });\n    node.children = newNodes;\n    nodes.push.apply(nodes, __spread(newNodes));\n  };\n  while (nodes.length > 0) {\n    _loop_1();\n  }\n  return root.eachBefore(computeHeight);\n}\nfunction computeHeight(node) {\n  var height = 0;\n  do {\n    node.height = height;\n    node = node.parent;\n  } while (node && node.height < ++height);\n}\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : undefined;\n}\nfunction objectChildren(d) {\n  return d.children;\n}\nfunction leastCommonAncestor(a, b) {\n  if (!(a && b)) {\n    return undefined;\n  }\n  if (a === b) {\n    return a;\n  }\n  var aNodes = a.ancestors();\n  var bNodes = b.ancestors();\n  var c = undefined;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__spread","arguments","concat","HierarchyNode","datum","depth","height","parent","undefined","children","prototype","countFn","node","sum","count","eachAfter","each","callback","scope","_this","index","nodes","pop","eachBefore","child","find","result","sort","compare","path","end","start","ancestor","leastCommonAncestor","k","splice","ancestors","descendants","leaves","links","root","source","target","e_1","_a","_b","children_1","children_1_1","e_1_1","return","hierarchy","data","Map","mapChildren","objectChildren","_loop_1","datumChildren","newNodes","Array","from","map","dc","forEach","apply","computeHeight","d","isArray","a","b","aNodes","bNodes","c"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/layout/hierarchy.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar HierarchyNode = /** @class */ (function () {\n    function HierarchyNode(datum) {\n        this.value = 0;\n        this.depth = 0;\n        this.height = 0;\n        this.parent = undefined;\n        this.children = undefined;\n        this.datum = datum;\n    }\n    HierarchyNode.prototype.countFn = function (node) {\n        var sum = 0, children = node.children;\n        if (!children || !children.length) {\n            sum = 1;\n        }\n        else {\n            var i = children.length;\n            while (--i >= 0) {\n                sum += children[i].value;\n            }\n        }\n        node.value = sum;\n    };\n    HierarchyNode.prototype.count = function () {\n        return this.eachAfter(this.countFn);\n    };\n    HierarchyNode.prototype.each = function (callback, scope) {\n        var _this = this;\n        var index = -1;\n        this.iterator(function (node) {\n            callback.call(scope, node, ++index, _this);\n        });\n        return this;\n    };\n    /**\n     * Invokes the given callback for each node in post-order traversal.\n     * @param callback\n     * @param scope\n     */\n    HierarchyNode.prototype.eachAfter = function (callback, scope) {\n        var node = this;\n        var nodes = [node];\n        var next = [];\n        while ((node = nodes.pop())) {\n            next.push(node);\n            var children = node.children;\n            if (children) {\n                for (var i = 0, n = children.length; i < n; ++i) {\n                    nodes.push(children[i]);\n                }\n            }\n        }\n        var index = -1;\n        while ((node = next.pop())) {\n            callback.call(scope, node, ++index, this);\n        }\n        return this;\n    };\n    /**\n     * Invokes the given callback for each node in pre-order traversal.\n     * @param callback\n     * @param scope\n     */\n    HierarchyNode.prototype.eachBefore = function (callback, scope) {\n        var node = this;\n        var nodes = [node];\n        var index = -1;\n        while ((node = nodes.pop())) {\n            callback.call(scope, node, ++index, this);\n            var children = node.children;\n            if (children) {\n                for (var i = children.length - 1; i >= 0; --i) {\n                    var child = children[i];\n                    nodes.push(child);\n                }\n            }\n        }\n        return this;\n    };\n    HierarchyNode.prototype.find = function (callback, scope) {\n        var _this = this;\n        var index = -1;\n        var result;\n        this.iterator(function (node) {\n            if (callback.call(scope, node, ++index, _this)) {\n                result = node;\n                return false;\n            }\n        });\n        return result;\n    };\n    HierarchyNode.prototype.sum = function (value) {\n        return this.eachAfter(function (node) {\n            var sum = +value(node.datum) || 0;\n            var children = node.children;\n            if (children) {\n                var i = children.length;\n                while (--i >= 0) {\n                    sum += children[i].value;\n                }\n            }\n            node.value = sum;\n        });\n    };\n    HierarchyNode.prototype.sort = function (compare) {\n        return this.eachBefore(function (node) {\n            if (node.children) {\n                node.children.sort(compare);\n            }\n        });\n    };\n    HierarchyNode.prototype.path = function (end) {\n        var start = this;\n        var ancestor = leastCommonAncestor(start, end);\n        var nodes = [start];\n        while (start !== ancestor) {\n            start = start.parent;\n            nodes.push(start);\n        }\n        var k = nodes.length;\n        while (end !== ancestor) {\n            nodes.splice(k, 0, end);\n            end = end.parent;\n        }\n        return nodes;\n    };\n    HierarchyNode.prototype.ancestors = function () {\n        var node = this;\n        var nodes = [node];\n        while ((node = node.parent)) {\n            nodes.push(node);\n        }\n        return nodes;\n    };\n    HierarchyNode.prototype.descendants = function () {\n        var nodes = [];\n        this.iterator(function (node) { return nodes.push(node); });\n        return nodes;\n    };\n    HierarchyNode.prototype.leaves = function () {\n        var leaves = [];\n        this.eachBefore(function (node) {\n            if (!node.children) {\n                leaves.push(node);\n            }\n        });\n        return leaves;\n    };\n    HierarchyNode.prototype.links = function () {\n        var root = this;\n        var links = [];\n        root.each(function (node) {\n            if (node !== root) {\n                // Don’t include the root’s parent, if any.\n                links.push({ source: node.parent, target: node });\n            }\n        });\n        return links;\n    };\n    HierarchyNode.prototype.iterator = function (callback) {\n        var e_1, _a;\n        var _b = this.children, children = _b === void 0 ? [] : _b;\n        if (callback(this) === false) {\n            return false;\n        }\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                if (child.iterator(callback) === false) {\n                    return false;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return true;\n    };\n    return HierarchyNode;\n}());\nexport { HierarchyNode };\nexport function hierarchy(data, children) {\n    if (data instanceof Map) {\n        data = [undefined, data];\n        if (children === undefined) {\n            children = mapChildren;\n        }\n    }\n    else if (children === undefined) {\n        children = objectChildren;\n    }\n    var root = new HierarchyNode(data);\n    var nodes = [root];\n    var _loop_1 = function () {\n        var node = nodes.pop();\n        var datumChildren = children(node.datum);\n        if (!datumChildren) {\n            return \"continue\";\n        }\n        var newNodes = Array.from(datumChildren).map(function (dc) { return new HierarchyNode(dc); });\n        newNodes.forEach(function (child) {\n            child.parent = node;\n            child.depth = node.depth + 1;\n        });\n        node.children = newNodes;\n        nodes.push.apply(nodes, __spread(newNodes));\n    };\n    while (nodes.length > 0) {\n        _loop_1();\n    }\n    return root.eachBefore(computeHeight);\n}\nfunction computeHeight(node) {\n    var height = 0;\n    do {\n        node.height = height;\n        node = node.parent;\n    } while (node && node.height < ++height);\n}\nfunction mapChildren(d) {\n    return Array.isArray(d) ? d[1] : undefined;\n}\nfunction objectChildren(d) {\n    return d.children;\n}\nfunction leastCommonAncestor(a, b) {\n    if (!(a && b)) {\n        return undefined;\n    }\n    if (a === b) {\n        return a;\n    }\n    var aNodes = a.ancestors();\n    var bNodes = b.ancestors();\n    var c = undefined;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n        c = a;\n        a = aNodes.pop();\n        b = bNodes.pop();\n    }\n    return c;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}