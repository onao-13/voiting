{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_pie_chart = _resolveComponent(\"pie-chart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.event.name), 1 /* TEXT */), _createVNode(_component_pie_chart, {\n    event: _ctx.event\n  }, null, 8 /* PROPS */, [\"event\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACCA,oBAAuB,6BAAjBC,UAAK,CAACC,IAAI,kBAChBC,aAA2BC;IAAfC,KAAK,EAAEJ;EAAK","names":["_createElementVNode","_ctx","name","_createVNode","_component_pie_chart","event"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\EventsPageItem.vue"],"sourcesContent":["<template>\r\n <h1>{{event.name}}</h1>\r\n <pie-chart :event=\"event\"/>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport PieChart from './PieChart.vue';\r\nexport default {\r\n  components: { PieChart },\r\n\r\n data:() => ({\r\n  event: {\r\n\r\n  }\r\n }),\r\n\r\n methods: {\r\n  getEvent() {\r\n   this.event = this.EVENTS[this.$route.params['id']-1]\r\n  }\r\n },\r\n\r\n computed: {\r\n   ...mapGetters([\r\n     'EVENTS',\r\n   ]),\r\n },\r\n\r\n mounted() {\r\n  this.getEvent()\r\n },\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}