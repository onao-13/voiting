{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Displayable_1 = require(\"./Displayable\");\nvar Element_1 = require(\"../Element\");\nvar PathProxy_1 = require(\"../core/PathProxy\");\nvar pathContain = require(\"../contain/path\");\nvar util_1 = require(\"../core/util\");\nvar color_1 = require(\"../tool/color\");\nvar config_1 = require(\"../config\");\nexports.DEFAULT_PATH_STYLE = util_1.defaults({\n  fill: '#000',\n  stroke: null,\n  strokePercent: 1,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  lineDashOffset: 0,\n  lineWidth: 1,\n  lineCap: 'butt',\n  miterLimit: 10,\n  strokeNoScale: false,\n  strokeFirst: false\n}, Displayable_1.DEFAULT_COMMON_STYLE);\nexports.DEFAULT_PATH_ANIMATION_PROPS = {\n  style: util_1.defaults({\n    fill: true,\n    stroke: true,\n    strokePercent: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineDashOffset: true,\n    lineWidth: true,\n    miterLimit: true\n  }, Displayable_1.DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = ['x', 'y', 'rotation', 'scaleX', 'scaleY', 'originX', 'originY', 'invisible', 'culling', 'z', 'z2', 'zlevel', 'parent'];\nvar Path = function (_super) {\n  tslib_1.__extends(Path, _super);\n  function Path(opts) {\n    return _super.call(this, opts) || this;\n  }\n  Path.prototype.update = function () {\n    var _this = this;\n    _super.prototype.update.call(this);\n    var style = this.style;\n    if (style.decal) {\n      var decalEl = this._decalEl = this._decalEl || new Path();\n      if (decalEl.buildPath === Path.prototype.buildPath) {\n        decalEl.buildPath = function (ctx) {\n          _this.buildPath(ctx, _this.shape);\n        };\n      }\n      decalEl.silent = true;\n      var decalElStyle = decalEl.style;\n      for (var key in style) {\n        if (decalElStyle[key] !== style[key]) {\n          decalElStyle[key] = style[key];\n        }\n      }\n      decalElStyle.fill = style.fill ? style.decal : null;\n      decalElStyle.decal = null;\n      decalElStyle.shadowColor = null;\n      style.strokeFirst && (decalElStyle.stroke = null);\n      for (var i = 0; i < pathCopyParams.length; ++i) {\n        decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n      }\n      decalEl.__dirty |= Element_1[\"default\"].REDARAW_BIT;\n    } else if (this._decalEl) {\n      this._decalEl = null;\n    }\n  };\n  Path.prototype.getDecalElement = function () {\n    return this._decalEl;\n  };\n  Path.prototype._init = function (props) {\n    var keysArr = util_1.keys(props);\n    this.shape = this.getDefaultShape();\n    var defaultStyle = this.getDefaultStyle();\n    if (defaultStyle) {\n      this.useStyle(defaultStyle);\n    }\n    for (var i = 0; i < keysArr.length; i++) {\n      var key = keysArr[i];\n      var value = props[key];\n      if (key === 'style') {\n        if (!this.style) {\n          this.useStyle(value);\n        } else {\n          util_1.extend(this.style, value);\n        }\n      } else if (key === 'shape') {\n        util_1.extend(this.shape, value);\n      } else {\n        _super.prototype.attrKV.call(this, key, value);\n      }\n    }\n    if (!this.style) {\n      this.useStyle({});\n    }\n  };\n  Path.prototype.getDefaultStyle = function () {\n    return null;\n  };\n  Path.prototype.getDefaultShape = function () {\n    return {};\n  };\n  Path.prototype.canBeInsideText = function () {\n    return this.hasFill();\n  };\n  Path.prototype.getInsideTextFill = function () {\n    var pathFill = this.style.fill;\n    if (pathFill !== 'none') {\n      if (util_1.isString(pathFill)) {\n        var fillLum = color_1.lum(pathFill, 0);\n        if (fillLum > 0.5) {\n          return config_1.DARK_LABEL_COLOR;\n        } else if (fillLum > 0.2) {\n          return config_1.LIGHTER_LABEL_COLOR;\n        }\n        return config_1.LIGHT_LABEL_COLOR;\n      } else if (pathFill) {\n        return config_1.LIGHT_LABEL_COLOR;\n      }\n    }\n    return config_1.DARK_LABEL_COLOR;\n  };\n  Path.prototype.getInsideTextStroke = function (textFill) {\n    var pathFill = this.style.fill;\n    if (util_1.isString(pathFill)) {\n      var zr = this.__zr;\n      var isDarkMode = !!(zr && zr.isDarkMode());\n      var isDarkLabel = color_1.lum(textFill, 0) < config_1.DARK_MODE_THRESHOLD;\n      if (isDarkMode === isDarkLabel) {\n        return pathFill;\n      }\n    }\n  };\n  Path.prototype.buildPath = function (ctx, shapeCfg, inBundle) {};\n  Path.prototype.pathUpdated = function () {\n    this.__dirty &= ~Path.SHAPE_CHANGED_BIT;\n  };\n  Path.prototype.createPathProxy = function () {\n    this.path = new PathProxy_1[\"default\"](false);\n  };\n  Path.prototype.hasStroke = function () {\n    var style = this.style;\n    var stroke = style.stroke;\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n  };\n  Path.prototype.hasFill = function () {\n    var style = this.style;\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n  };\n  Path.prototype.getBoundingRect = function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n    if (needsUpdateRect) {\n      var firstInvoke = false;\n      if (!this.path) {\n        firstInvoke = true;\n        this.createPathProxy();\n      }\n      var path = this.path;\n      if (firstInvoke || this.__dirty & Path.SHAPE_CHANGED_BIT) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n        this.pathUpdated();\n      }\n      rect = path.getBoundingRect();\n    }\n    this._rect = rect;\n    if (this.hasStroke() && this.path && this.path.len() > 0) {\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect);\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n        var w = style.lineWidth;\n        if (!this.hasFill()) {\n          var strokeContainThreshold = this.strokeContainThreshold;\n          w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n        }\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      }\n      return rectWithStroke;\n    }\n    return rect;\n  };\n  Path.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n    if (rect.contain(x, y)) {\n      var pathProxy = this.path;\n      if (this.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n        if (lineScale > 1e-10) {\n          if (!this.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n          if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n      if (this.hasFill()) {\n        return pathContain.contain(pathProxy, x, y);\n      }\n    }\n    return false;\n  };\n  Path.prototype.dirtyShape = function () {\n    this.__dirty |= Path.SHAPE_CHANGED_BIT;\n    if (this._rect) {\n      this._rect = null;\n    }\n    if (this._decalEl) {\n      this._decalEl.dirtyShape();\n    }\n    this.markRedraw();\n  };\n  Path.prototype.dirty = function () {\n    this.dirtyStyle();\n    this.dirtyShape();\n  };\n  Path.prototype.animateShape = function (loop) {\n    return this.animate('shape', loop);\n  };\n  Path.prototype.updateDuringAnimation = function (targetKey) {\n    if (targetKey === 'style') {\n      this.dirtyStyle();\n    } else if (targetKey === 'shape') {\n      this.dirtyShape();\n    } else {\n      this.markRedraw();\n    }\n  };\n  Path.prototype.attrKV = function (key, value) {\n    if (key === 'shape') {\n      this.setShape(value);\n    } else {\n      _super.prototype.attrKV.call(this, key, value);\n    }\n  };\n  Path.prototype.setShape = function (keyOrObj, value) {\n    var shape = this.shape;\n    if (!shape) {\n      shape = this.shape = {};\n    }\n    if (typeof keyOrObj === 'string') {\n      shape[keyOrObj] = value;\n    } else {\n      util_1.extend(shape, keyOrObj);\n    }\n    this.dirtyShape();\n    return this;\n  };\n  Path.prototype.shapeChanged = function () {\n    return !!(this.__dirty & Path.SHAPE_CHANGED_BIT);\n  };\n  Path.prototype.createStyle = function (obj) {\n    return util_1.createObject(exports.DEFAULT_PATH_STYLE, obj);\n  };\n  Path.prototype._innerSaveToNormal = function (toState) {\n    _super.prototype._innerSaveToNormal.call(this, toState);\n    var normalState = this._normalState;\n    if (toState.shape && !normalState.shape) {\n      normalState.shape = util_1.extend({}, this.shape);\n    }\n  };\n  Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n    _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n    var needsRestoreToNormal = !(state && keepCurrentStates);\n    var targetShape;\n    if (state && state.shape) {\n      if (transition) {\n        if (keepCurrentStates) {\n          targetShape = state.shape;\n        } else {\n          targetShape = util_1.extend({}, normalState.shape);\n          util_1.extend(targetShape, state.shape);\n        }\n      } else {\n        targetShape = util_1.extend({}, keepCurrentStates ? this.shape : normalState.shape);\n        util_1.extend(targetShape, state.shape);\n      }\n    } else if (needsRestoreToNormal) {\n      targetShape = normalState.shape;\n    }\n    if (targetShape) {\n      if (transition) {\n        this.shape = util_1.extend({}, this.shape);\n        var targetShapePrimaryProps = {};\n        var shapeKeys = util_1.keys(targetShape);\n        for (var i = 0; i < shapeKeys.length; i++) {\n          var key = shapeKeys[i];\n          if (typeof targetShape[key] === 'object') {\n            this.shape[key] = targetShape[key];\n          } else {\n            targetShapePrimaryProps[key] = targetShape[key];\n          }\n        }\n        this._transitionState(stateName, {\n          shape: targetShapePrimaryProps\n        }, animationCfg);\n      } else {\n        this.shape = targetShape;\n        this.dirtyShape();\n      }\n    }\n  };\n  Path.prototype._mergeStates = function (states) {\n    var mergedState = _super.prototype._mergeStates.call(this, states);\n    var mergedShape;\n    for (var i = 0; i < states.length; i++) {\n      var state = states[i];\n      if (state.shape) {\n        mergedShape = mergedShape || {};\n        this._mergeStyle(mergedShape, state.shape);\n      }\n    }\n    if (mergedShape) {\n      mergedState.shape = mergedShape;\n    }\n    return mergedState;\n  };\n  Path.prototype.getAnimationStyleProps = function () {\n    return exports.DEFAULT_PATH_ANIMATION_PROPS;\n  };\n  Path.prototype.isZeroArea = function () {\n    return false;\n  };\n  Path.extend = function (defaultProps) {\n    var Sub = function (_super) {\n      tslib_1.__extends(Sub, _super);\n      function Sub(opts) {\n        var _this = _super.call(this, opts) || this;\n        defaultProps.init && defaultProps.init.call(_this, opts);\n        return _this;\n      }\n      Sub.prototype.getDefaultStyle = function () {\n        return util_1.clone(defaultProps.style);\n      };\n      Sub.prototype.getDefaultShape = function () {\n        return util_1.clone(defaultProps.shape);\n      };\n      return Sub;\n    }(Path);\n    for (var key in defaultProps) {\n      if (typeof defaultProps[key] === 'function') {\n        Sub.prototype[key] = defaultProps[key];\n      }\n    }\n    return Sub;\n  };\n  Path.SHAPE_CHANGED_BIT = 4;\n  Path.initDefaultProps = function () {\n    var pathProto = Path.prototype;\n    pathProto.type = 'path';\n    pathProto.strokeContainThreshold = 5;\n    pathProto.segmentIgnoreThreshold = 0;\n    pathProto.subPixelOptimize = false;\n    pathProto.autoBatch = false;\n    pathProto.__dirty = Element_1[\"default\"].REDARAW_BIT | Displayable_1[\"default\"].STYLE_CHANGED_BIT | Path.SHAPE_CHANGED_BIT;\n  }();\n  return Path;\n}(Displayable_1[\"default\"]);\nexports[\"default\"] = Path;","map":{"version":3,"names":["exports","__esModule","tslib_1","require","Displayable_1","Element_1","PathProxy_1","pathContain","util_1","color_1","config_1","DEFAULT_PATH_STYLE","defaults","fill","stroke","strokePercent","fillOpacity","strokeOpacity","lineDashOffset","lineWidth","lineCap","miterLimit","strokeNoScale","strokeFirst","DEFAULT_COMMON_STYLE","DEFAULT_PATH_ANIMATION_PROPS","style","DEFAULT_COMMON_ANIMATION_PROPS","pathCopyParams","Path","_super","__extends","opts","call","prototype","update","_this","decal","decalEl","_decalEl","buildPath","ctx","shape","silent","decalElStyle","key","shadowColor","i","length","__dirty","REDARAW_BIT","getDecalElement","_init","props","keysArr","keys","getDefaultShape","defaultStyle","getDefaultStyle","useStyle","value","extend","attrKV","canBeInsideText","hasFill","getInsideTextFill","pathFill","isString","fillLum","lum","DARK_LABEL_COLOR","LIGHTER_LABEL_COLOR","LIGHT_LABEL_COLOR","getInsideTextStroke","textFill","zr","__zr","isDarkMode","isDarkLabel","DARK_MODE_THRESHOLD","shapeCfg","inBundle","pathUpdated","SHAPE_CHANGED_BIT","createPathProxy","path","hasStroke","getBoundingRect","rect","_rect","needsUpdateRect","firstInvoke","beginPath","len","rectWithStroke","_rectWithStroke","clone","copy","lineScale","getLineScale","w","strokeContainThreshold","Math","max","width","height","x","y","contain","localPos","transformCoordToLocal","pathProxy","containStroke","dirtyShape","markRedraw","dirty","dirtyStyle","animateShape","loop","animate","updateDuringAnimation","targetKey","setShape","keyOrObj","shapeChanged","createStyle","obj","createObject","_innerSaveToNormal","toState","normalState","_normalState","_applyStateObj","stateName","state","keepCurrentStates","transition","animationCfg","needsRestoreToNormal","targetShape","targetShapePrimaryProps","shapeKeys","_transitionState","_mergeStates","states","mergedState","mergedShape","_mergeStyle","getAnimationStyleProps","isZeroArea","defaultProps","Sub","init","initDefaultProps","pathProto","type","segmentIgnoreThreshold","subPixelOptimize","autoBatch","STYLE_CHANGED_BIT"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/zrender/lib/graphic/Path.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Displayable_1 = require(\"./Displayable\");\nvar Element_1 = require(\"../Element\");\nvar PathProxy_1 = require(\"../core/PathProxy\");\nvar pathContain = require(\"../contain/path\");\nvar util_1 = require(\"../core/util\");\nvar color_1 = require(\"../tool/color\");\nvar config_1 = require(\"../config\");\nexports.DEFAULT_PATH_STYLE = util_1.defaults({\n    fill: '#000',\n    stroke: null,\n    strokePercent: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    lineDashOffset: 0,\n    lineWidth: 1,\n    lineCap: 'butt',\n    miterLimit: 10,\n    strokeNoScale: false,\n    strokeFirst: false\n}, Displayable_1.DEFAULT_COMMON_STYLE);\nexports.DEFAULT_PATH_ANIMATION_PROPS = {\n    style: util_1.defaults({\n        fill: true,\n        stroke: true,\n        strokePercent: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineDashOffset: true,\n        lineWidth: true,\n        miterLimit: true\n    }, Displayable_1.DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = [\n    'x', 'y', 'rotation', 'scaleX', 'scaleY', 'originX', 'originY', 'invisible',\n    'culling', 'z', 'z2', 'zlevel', 'parent'\n];\nvar Path = (function (_super) {\n    tslib_1.__extends(Path, _super);\n    function Path(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Path.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        var style = this.style;\n        if (style.decal) {\n            var decalEl = this._decalEl\n                = this._decalEl || new Path();\n            if (decalEl.buildPath === Path.prototype.buildPath) {\n                decalEl.buildPath = function (ctx) {\n                    _this.buildPath(ctx, _this.shape);\n                };\n            }\n            decalEl.silent = true;\n            var decalElStyle = decalEl.style;\n            for (var key in style) {\n                if (decalElStyle[key] !== style[key]) {\n                    decalElStyle[key] = style[key];\n                }\n            }\n            decalElStyle.fill = style.fill ? style.decal : null;\n            decalElStyle.decal = null;\n            decalElStyle.shadowColor = null;\n            style.strokeFirst && (decalElStyle.stroke = null);\n            for (var i = 0; i < pathCopyParams.length; ++i) {\n                decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n            }\n            decalEl.__dirty |= Element_1[\"default\"].REDARAW_BIT;\n        }\n        else if (this._decalEl) {\n            this._decalEl = null;\n        }\n    };\n    Path.prototype.getDecalElement = function () {\n        return this._decalEl;\n    };\n    Path.prototype._init = function (props) {\n        var keysArr = util_1.keys(props);\n        this.shape = this.getDefaultShape();\n        var defaultStyle = this.getDefaultStyle();\n        if (defaultStyle) {\n            this.useStyle(defaultStyle);\n        }\n        for (var i = 0; i < keysArr.length; i++) {\n            var key = keysArr[i];\n            var value = props[key];\n            if (key === 'style') {\n                if (!this.style) {\n                    this.useStyle(value);\n                }\n                else {\n                    util_1.extend(this.style, value);\n                }\n            }\n            else if (key === 'shape') {\n                util_1.extend(this.shape, value);\n            }\n            else {\n                _super.prototype.attrKV.call(this, key, value);\n            }\n        }\n        if (!this.style) {\n            this.useStyle({});\n        }\n    };\n    Path.prototype.getDefaultStyle = function () {\n        return null;\n    };\n    Path.prototype.getDefaultShape = function () {\n        return {};\n    };\n    Path.prototype.canBeInsideText = function () {\n        return this.hasFill();\n    };\n    Path.prototype.getInsideTextFill = function () {\n        var pathFill = this.style.fill;\n        if (pathFill !== 'none') {\n            if (util_1.isString(pathFill)) {\n                var fillLum = color_1.lum(pathFill, 0);\n                if (fillLum > 0.5) {\n                    return config_1.DARK_LABEL_COLOR;\n                }\n                else if (fillLum > 0.2) {\n                    return config_1.LIGHTER_LABEL_COLOR;\n                }\n                return config_1.LIGHT_LABEL_COLOR;\n            }\n            else if (pathFill) {\n                return config_1.LIGHT_LABEL_COLOR;\n            }\n        }\n        return config_1.DARK_LABEL_COLOR;\n    };\n    Path.prototype.getInsideTextStroke = function (textFill) {\n        var pathFill = this.style.fill;\n        if (util_1.isString(pathFill)) {\n            var zr = this.__zr;\n            var isDarkMode = !!(zr && zr.isDarkMode());\n            var isDarkLabel = color_1.lum(textFill, 0) < config_1.DARK_MODE_THRESHOLD;\n            if (isDarkMode === isDarkLabel) {\n                return pathFill;\n            }\n        }\n    };\n    Path.prototype.buildPath = function (ctx, shapeCfg, inBundle) { };\n    Path.prototype.pathUpdated = function () {\n        this.__dirty &= ~Path.SHAPE_CHANGED_BIT;\n    };\n    Path.prototype.createPathProxy = function () {\n        this.path = new PathProxy_1[\"default\"](false);\n    };\n    Path.prototype.hasStroke = function () {\n        var style = this.style;\n        var stroke = style.stroke;\n        return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n    };\n    Path.prototype.hasFill = function () {\n        var style = this.style;\n        var fill = style.fill;\n        return fill != null && fill !== 'none';\n    };\n    Path.prototype.getBoundingRect = function () {\n        var rect = this._rect;\n        var style = this.style;\n        var needsUpdateRect = !rect;\n        if (needsUpdateRect) {\n            var firstInvoke = false;\n            if (!this.path) {\n                firstInvoke = true;\n                this.createPathProxy();\n            }\n            var path = this.path;\n            if (firstInvoke || (this.__dirty & Path.SHAPE_CHANGED_BIT)) {\n                path.beginPath();\n                this.buildPath(path, this.shape, false);\n                this.pathUpdated();\n            }\n            rect = path.getBoundingRect();\n        }\n        this._rect = rect;\n        if (this.hasStroke() && this.path && this.path.len() > 0) {\n            var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n            if (this.__dirty || needsUpdateRect) {\n                rectWithStroke.copy(rect);\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                var w = style.lineWidth;\n                if (!this.hasFill()) {\n                    var strokeContainThreshold = this.strokeContainThreshold;\n                    w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n                }\n                if (lineScale > 1e-10) {\n                    rectWithStroke.width += w / lineScale;\n                    rectWithStroke.height += w / lineScale;\n                    rectWithStroke.x -= w / lineScale / 2;\n                    rectWithStroke.y -= w / lineScale / 2;\n                }\n            }\n            return rectWithStroke;\n        }\n        return rect;\n    };\n    Path.prototype.contain = function (x, y) {\n        var localPos = this.transformCoordToLocal(x, y);\n        var rect = this.getBoundingRect();\n        var style = this.style;\n        x = localPos[0];\n        y = localPos[1];\n        if (rect.contain(x, y)) {\n            var pathProxy = this.path;\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                if (lineScale > 1e-10) {\n                    if (!this.hasFill()) {\n                        lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                    }\n                    if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n                        return true;\n                    }\n                }\n            }\n            if (this.hasFill()) {\n                return pathContain.contain(pathProxy, x, y);\n            }\n        }\n        return false;\n    };\n    Path.prototype.dirtyShape = function () {\n        this.__dirty |= Path.SHAPE_CHANGED_BIT;\n        if (this._rect) {\n            this._rect = null;\n        }\n        if (this._decalEl) {\n            this._decalEl.dirtyShape();\n        }\n        this.markRedraw();\n    };\n    Path.prototype.dirty = function () {\n        this.dirtyStyle();\n        this.dirtyShape();\n    };\n    Path.prototype.animateShape = function (loop) {\n        return this.animate('shape', loop);\n    };\n    Path.prototype.updateDuringAnimation = function (targetKey) {\n        if (targetKey === 'style') {\n            this.dirtyStyle();\n        }\n        else if (targetKey === 'shape') {\n            this.dirtyShape();\n        }\n        else {\n            this.markRedraw();\n        }\n    };\n    Path.prototype.attrKV = function (key, value) {\n        if (key === 'shape') {\n            this.setShape(value);\n        }\n        else {\n            _super.prototype.attrKV.call(this, key, value);\n        }\n    };\n    Path.prototype.setShape = function (keyOrObj, value) {\n        var shape = this.shape;\n        if (!shape) {\n            shape = this.shape = {};\n        }\n        if (typeof keyOrObj === 'string') {\n            shape[keyOrObj] = value;\n        }\n        else {\n            util_1.extend(shape, keyOrObj);\n        }\n        this.dirtyShape();\n        return this;\n    };\n    Path.prototype.shapeChanged = function () {\n        return !!(this.__dirty & Path.SHAPE_CHANGED_BIT);\n    };\n    Path.prototype.createStyle = function (obj) {\n        return util_1.createObject(exports.DEFAULT_PATH_STYLE, obj);\n    };\n    Path.prototype._innerSaveToNormal = function (toState) {\n        _super.prototype._innerSaveToNormal.call(this, toState);\n        var normalState = this._normalState;\n        if (toState.shape && !normalState.shape) {\n            normalState.shape = util_1.extend({}, this.shape);\n        }\n    };\n    Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        var targetShape;\n        if (state && state.shape) {\n            if (transition) {\n                if (keepCurrentStates) {\n                    targetShape = state.shape;\n                }\n                else {\n                    targetShape = util_1.extend({}, normalState.shape);\n                    util_1.extend(targetShape, state.shape);\n                }\n            }\n            else {\n                targetShape = util_1.extend({}, keepCurrentStates ? this.shape : normalState.shape);\n                util_1.extend(targetShape, state.shape);\n            }\n        }\n        else if (needsRestoreToNormal) {\n            targetShape = normalState.shape;\n        }\n        if (targetShape) {\n            if (transition) {\n                this.shape = util_1.extend({}, this.shape);\n                var targetShapePrimaryProps = {};\n                var shapeKeys = util_1.keys(targetShape);\n                for (var i = 0; i < shapeKeys.length; i++) {\n                    var key = shapeKeys[i];\n                    if (typeof targetShape[key] === 'object') {\n                        this.shape[key] = targetShape[key];\n                    }\n                    else {\n                        targetShapePrimaryProps[key] = targetShape[key];\n                    }\n                }\n                this._transitionState(stateName, {\n                    shape: targetShapePrimaryProps\n                }, animationCfg);\n            }\n            else {\n                this.shape = targetShape;\n                this.dirtyShape();\n            }\n        }\n    };\n    Path.prototype._mergeStates = function (states) {\n        var mergedState = _super.prototype._mergeStates.call(this, states);\n        var mergedShape;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            if (state.shape) {\n                mergedShape = mergedShape || {};\n                this._mergeStyle(mergedShape, state.shape);\n            }\n        }\n        if (mergedShape) {\n            mergedState.shape = mergedShape;\n        }\n        return mergedState;\n    };\n    Path.prototype.getAnimationStyleProps = function () {\n        return exports.DEFAULT_PATH_ANIMATION_PROPS;\n    };\n    Path.prototype.isZeroArea = function () {\n        return false;\n    };\n    Path.extend = function (defaultProps) {\n        var Sub = (function (_super) {\n            tslib_1.__extends(Sub, _super);\n            function Sub(opts) {\n                var _this = _super.call(this, opts) || this;\n                defaultProps.init && defaultProps.init.call(_this, opts);\n                return _this;\n            }\n            Sub.prototype.getDefaultStyle = function () {\n                return util_1.clone(defaultProps.style);\n            };\n            Sub.prototype.getDefaultShape = function () {\n                return util_1.clone(defaultProps.shape);\n            };\n            return Sub;\n        }(Path));\n        for (var key in defaultProps) {\n            if (typeof defaultProps[key] === 'function') {\n                Sub.prototype[key] = defaultProps[key];\n            }\n        }\n        return Sub;\n    };\n    Path.SHAPE_CHANGED_BIT = 4;\n    Path.initDefaultProps = (function () {\n        var pathProto = Path.prototype;\n        pathProto.type = 'path';\n        pathProto.strokeContainThreshold = 5;\n        pathProto.segmentIgnoreThreshold = 0;\n        pathProto.subPixelOptimize = false;\n        pathProto.autoBatch = false;\n        pathProto.__dirty = Element_1[\"default\"].REDARAW_BIT | Displayable_1[\"default\"].STYLE_CHANGED_BIT | Path.SHAPE_CHANGED_BIT;\n    })();\n    return Path;\n}(Displayable_1[\"default\"]));\nexports[\"default\"] = Path;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}