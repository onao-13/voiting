{"ast":null,"code":"import { NumericTicks } from './ticks';\nexport function calculateNiceSecondaryAxis(domain, primaryTickCount) {\n  // Make secondary axis domain nice using strict tick count, matching the tick count from the primary axis.\n  // This is to make the secondary axis grid lines/ tick positions align with the ones from the primary axis.\n  var start = Math.floor(domain[0]);\n  var stop = domain[1];\n  start = calculateNiceStart(start, stop, primaryTickCount);\n  var step = getTickStep(start, stop, primaryTickCount);\n  var segments = primaryTickCount - 1;\n  stop = start + segments * step;\n  var d = [start, stop];\n  var ticks = getTicks(start, step, primaryTickCount);\n  return [d, ticks];\n}\nfunction calculateNiceStart(a, b, count) {\n  var rawStep = Math.abs(b - a) / (count - 1);\n  var order = Math.floor(Math.log10(rawStep));\n  var magnitude = Math.pow(10, order);\n  return Math.floor(a / magnitude) * magnitude;\n}\nexport function getTicks(start, step, count) {\n  // power of the step will be negative if the step is a fraction (between 0 and 1)\n  var stepPower = Math.floor(Math.log10(step));\n  var fractionDigits = step > 0 && step < 1 ? Math.abs(stepPower) : 0;\n  var f = Math.pow(10, fractionDigits);\n  var ticks = new NumericTicks(fractionDigits);\n  for (var i = 0; i < count; i++) {\n    var tick = start + step * i;\n    ticks[i] = Math.round(tick * f) / f;\n  }\n  return ticks;\n}\nexport function getTickStep(start, stop, count) {\n  var segments = count - 1;\n  var rawStep = (stop - start) / segments;\n  return calculateNextNiceStep(rawStep);\n}\nfunction calculateNextNiceStep(rawStep) {\n  var order = Math.floor(Math.log10(rawStep));\n  var magnitude = Math.pow(10, order);\n  // Make order 1\n  var step = rawStep / magnitude * 10;\n  if (step > 0 && step <= 1) {\n    return magnitude / 10;\n  }\n  if (step > 1 && step <= 2) {\n    return 2 * magnitude / 10;\n  }\n  if (step > 1 && step <= 5) {\n    return 5 * magnitude / 10;\n  }\n  if (step > 5 && step <= 10) {\n    return 10 * magnitude / 10;\n  }\n  if (step > 10 && step <= 20) {\n    return 20 * magnitude / 10;\n  }\n  if (step > 20 && step <= 40) {\n    return 40 * magnitude / 10;\n  }\n  if (step > 40 && step <= 50) {\n    return 50 * magnitude / 10;\n  }\n  if (step > 50 && step <= 100) {\n    return 100 * magnitude / 10;\n  }\n  return step;\n}","map":{"version":3,"names":["NumericTicks","calculateNiceSecondaryAxis","domain","primaryTickCount","start","Math","floor","stop","calculateNiceStart","step","getTickStep","segments","d","ticks","getTicks","a","b","count","rawStep","abs","order","log10","magnitude","pow","stepPower","fractionDigits","f","i","tick","round","calculateNextNiceStep"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/util/secondaryAxisTicks.js"],"sourcesContent":["import { NumericTicks } from './ticks';\nexport function calculateNiceSecondaryAxis(domain, primaryTickCount) {\n    // Make secondary axis domain nice using strict tick count, matching the tick count from the primary axis.\n    // This is to make the secondary axis grid lines/ tick positions align with the ones from the primary axis.\n    var start = Math.floor(domain[0]);\n    var stop = domain[1];\n    start = calculateNiceStart(start, stop, primaryTickCount);\n    var step = getTickStep(start, stop, primaryTickCount);\n    var segments = primaryTickCount - 1;\n    stop = start + segments * step;\n    var d = [start, stop];\n    var ticks = getTicks(start, step, primaryTickCount);\n    return [d, ticks];\n}\nfunction calculateNiceStart(a, b, count) {\n    var rawStep = Math.abs(b - a) / (count - 1);\n    var order = Math.floor(Math.log10(rawStep));\n    var magnitude = Math.pow(10, order);\n    return Math.floor(a / magnitude) * magnitude;\n}\nexport function getTicks(start, step, count) {\n    // power of the step will be negative if the step is a fraction (between 0 and 1)\n    var stepPower = Math.floor(Math.log10(step));\n    var fractionDigits = step > 0 && step < 1 ? Math.abs(stepPower) : 0;\n    var f = Math.pow(10, fractionDigits);\n    var ticks = new NumericTicks(fractionDigits);\n    for (var i = 0; i < count; i++) {\n        var tick = start + step * i;\n        ticks[i] = Math.round(tick * f) / f;\n    }\n    return ticks;\n}\nexport function getTickStep(start, stop, count) {\n    var segments = count - 1;\n    var rawStep = (stop - start) / segments;\n    return calculateNextNiceStep(rawStep);\n}\nfunction calculateNextNiceStep(rawStep) {\n    var order = Math.floor(Math.log10(rawStep));\n    var magnitude = Math.pow(10, order);\n    // Make order 1\n    var step = (rawStep / magnitude) * 10;\n    if (step > 0 && step <= 1) {\n        return magnitude / 10;\n    }\n    if (step > 1 && step <= 2) {\n        return (2 * magnitude) / 10;\n    }\n    if (step > 1 && step <= 5) {\n        return (5 * magnitude) / 10;\n    }\n    if (step > 5 && step <= 10) {\n        return (10 * magnitude) / 10;\n    }\n    if (step > 10 && step <= 20) {\n        return (20 * magnitude) / 10;\n    }\n    if (step > 20 && step <= 40) {\n        return (40 * magnitude) / 10;\n    }\n    if (step > 40 && step <= 50) {\n        return (50 * magnitude) / 10;\n    }\n    if (step > 50 && step <= 100) {\n        return (100 * magnitude) / 10;\n    }\n    return step;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}