{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nimport { DEFAULT_CARTESIAN_CHART_OVERRIDES, DEFAULT_BAR_CHART_OVERRIDES, DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES } from './defaults';\nimport { jsonMerge, DELETE, jsonWalk } from '../../util/json';\nimport { applySeriesTransform } from './transforms';\nimport { getChartTheme } from './themes';\nimport { processSeriesOptions } from './prepareSeries';\nexport function optionsType(input) {\n  var _a, _b, _c, _d;\n  return _d = (_a = input.type, _a !== null && _a !== void 0 ? _a : (_c = (_b = input.series) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type), _d !== null && _d !== void 0 ? _d : 'line';\n}\nexport function isAgCartesianChartOptions(input) {\n  var specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return true;\n  }\n  switch (specifiedType) {\n    case 'cartesian':\n    case 'area':\n    case 'bar':\n    case 'column':\n    case 'groupedCategory':\n    case 'histogram':\n    case 'line':\n    case 'scatter':\n      return true;\n    default:\n      return false;\n  }\n}\nexport function isAgHierarchyChartOptions(input) {\n  var specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  switch (input.type) {\n    case 'hierarchy':\n    // fall-through - hierarchy and treemap are synonyms.\n    case 'treemap':\n      return true;\n    default:\n      return false;\n  }\n}\nexport function isAgPolarChartOptions(input) {\n  var specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  switch (input.type) {\n    case 'polar':\n    // fall-through - polar and pie are synonyms.\n    case 'pie':\n      return true;\n    default:\n      return false;\n  }\n}\nexport function isSeriesOptionType(input) {\n  if (input == null) {\n    return false;\n  }\n  return ['line', 'bar', 'column', 'histogram', 'scatter', 'area', 'pie', 'treemap'].indexOf(input) >= 0;\n}\nfunction countArrayElements(input) {\n  var e_1, _a;\n  var count = 0;\n  try {\n    for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n      var next = input_1_1.value;\n      if (next instanceof Array) {\n        count += countArrayElements(next);\n      }\n      if (next != null) {\n        count++;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return count;\n}\nfunction takeColours(context, colours, maxCount) {\n  var result = [];\n  for (var count = 0; count < maxCount; count++) {\n    result.push(colours[(count + context.colourIndex) % colours.length]);\n  }\n  return result;\n}\nexport var noDataCloneMergeOptions = {\n  avoidDeepClone: ['data']\n};\nexport function prepareOptions(newOptions) {\n  var fallbackOptions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    fallbackOptions[_i - 1] = arguments[_i];\n  }\n  var _a;\n  var options = jsonMerge(__spread(fallbackOptions, [newOptions]), noDataCloneMergeOptions);\n  sanityCheckOptions(options);\n  // Determine type and ensure it's explicit in the options config.\n  var userSuppliedOptionsType = options.type;\n  var type = optionsType(options);\n  options = __assign(__assign({}, options), {\n    type: type\n  });\n  var defaultSeriesType = isAgCartesianChartOptions(options) ? 'line' : isAgHierarchyChartOptions(options) ? 'treemap' : isAgPolarChartOptions(options) ? 'pie' : 'line';\n  var defaultOverrides = type === 'bar' ? DEFAULT_BAR_CHART_OVERRIDES : type === 'scatter' ? DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES : type === 'histogram' ? DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES : isAgCartesianChartOptions(options) ? DEFAULT_CARTESIAN_CHART_OVERRIDES : {};\n  var _b = prepareMainOptions(defaultOverrides, options),\n    context = _b.context,\n    mergedOptions = _b.mergedOptions,\n    axesThemes = _b.axesThemes,\n    seriesThemes = _b.seriesThemes;\n  // Special cases where we have arrays of elements which need their own defaults.\n  // Apply series themes before calling processSeriesOptions() as it reduces and renames some\n  // properties, and in that case then cannot correctly have themes applied.\n  mergedOptions.series = processSeriesOptions((mergedOptions.series || []).map(function (s) {\n    var type = s.type ? s.type : isSeriesOptionType(userSuppliedOptionsType) ? userSuppliedOptionsType : defaultSeriesType;\n    var mergedSeries = jsonMerge([seriesThemes[type] || {}, __assign(__assign({}, s), {\n      type: type\n    })], noDataCloneMergeOptions);\n    if (type === 'pie') {\n      preparePieOptions(seriesThemes.pie, s, mergedSeries);\n    }\n    return mergedSeries;\n  })).map(function (s) {\n    return prepareSeries(context, s);\n  });\n  if (isAgCartesianChartOptions(mergedOptions)) {\n    mergedOptions.axes = (_a = mergedOptions.axes) === null || _a === void 0 ? void 0 : _a.map(function (a) {\n      var _a;\n      var type = (_a = a.type, _a !== null && _a !== void 0 ? _a : 'number');\n      var axis = __assign(__assign({}, a), {\n        type: type\n      });\n      var axesTheme = jsonMerge([axesThemes[type], axesThemes[type][a.position || 'unknown'] || {}]);\n      return prepareAxis(axis, axesTheme);\n    });\n  }\n  prepareEnabledOptions(options, mergedOptions);\n  return mergedOptions;\n}\nfunction sanityCheckOptions(options) {\n  var _a, _b;\n  if ((_a = options.series) === null || _a === void 0 ? void 0 : _a.some(function (s) {\n    return s.yKeys != null && s.yKey != null;\n  })) {\n    console.warn('AG Charts - series options yKeys and yKey are mutually exclusive, please only use yKey for future compatibility.');\n  }\n  if ((_b = options.series) === null || _b === void 0 ? void 0 : _b.some(function (s) {\n    return s.yNames != null && s.yName != null;\n  })) {\n    console.warn('AG Charts - series options yNames and yName are mutually exclusive, please only use yName for future compatibility.');\n  }\n}\nfunction prepareMainOptions(defaultOverrides, options) {\n  var _a = prepareTheme(options),\n    theme = _a.theme,\n    cleanedTheme = _a.cleanedTheme,\n    axesThemes = _a.axesThemes,\n    seriesThemes = _a.seriesThemes;\n  var context = {\n    colourIndex: 0,\n    palette: theme.palette\n  };\n  var mergedOptions = jsonMerge([defaultOverrides, cleanedTheme, options], noDataCloneMergeOptions);\n  return {\n    context: context,\n    mergedOptions: mergedOptions,\n    axesThemes: axesThemes,\n    seriesThemes: seriesThemes\n  };\n}\nfunction prepareTheme(options) {\n  var theme = getChartTheme(options.theme);\n  var themeConfig = theme.getConfig(optionsType(options) || 'cartesian');\n  return {\n    theme: theme,\n    axesThemes: themeConfig['axes'] || {},\n    seriesThemes: themeConfig['series'] || {},\n    cleanedTheme: jsonMerge([themeConfig, {\n      axes: DELETE,\n      series: DELETE\n    }])\n  };\n}\nfunction prepareSeries(context, input) {\n  var defaults = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    defaults[_i - 2] = arguments[_i];\n  }\n  var paletteOptions = calculateSeriesPalette(context, input);\n  // Part of the options interface, but not directly consumed by the series implementations.\n  var removeOptions = {\n    stacked: DELETE\n  };\n  var mergedResult = jsonMerge(__spread(defaults, [paletteOptions, input, removeOptions]), noDataCloneMergeOptions);\n  return applySeriesTransform(mergedResult);\n}\nfunction calculateSeriesPalette(context, input) {\n  var paletteOptions = {};\n  var _a = context.palette,\n    fills = _a.fills,\n    strokes = _a.strokes;\n  var inputAny = input;\n  var colourCount = countArrayElements(inputAny['yKeys'] || []) || 1; // Defaults to 1 if no yKeys.\n  switch (input.type) {\n    case 'pie':\n      colourCount = Math.max(fills.length, strokes.length);\n    // fall-through - only colourCount varies for `pie`.\n    case 'area':\n    case 'bar':\n    case 'column':\n      paletteOptions.fills = takeColours(context, fills, colourCount);\n      paletteOptions.strokes = takeColours(context, strokes, colourCount);\n      break;\n    case 'histogram':\n      paletteOptions.fill = takeColours(context, fills, 1)[0];\n      paletteOptions.stroke = takeColours(context, strokes, 1)[0];\n      break;\n    case 'scatter':\n      paletteOptions.marker = {\n        stroke: takeColours(context, strokes, 1)[0],\n        fill: takeColours(context, fills, 1)[0]\n      };\n      break;\n    case 'line':\n      paletteOptions.stroke = takeColours(context, fills, 1)[0];\n      paletteOptions.marker = {\n        stroke: takeColours(context, strokes, 1)[0],\n        fill: takeColours(context, fills, 1)[0]\n      };\n      break;\n    case 'treemap':\n      break;\n    default:\n      throw new Error('AG Charts - unknown series type: ' + input.type);\n  }\n  context.colourIndex += colourCount;\n  return paletteOptions;\n}\nfunction prepareAxis(axis, axisTheme) {\n  // Remove redundant theme overload keys.\n  var removeOptions = {\n    top: DELETE,\n    bottom: DELETE,\n    left: DELETE,\n    right: DELETE\n  };\n  // Special cross lines case where we have an arrays of cross line elements which need their own defaults.\n  if (axis.crossLines) {\n    if (!Array.isArray(axis.crossLines)) {\n      console.warn('AG Charts - axis[].crossLines should be an array.');\n      axis.crossLines = [];\n    }\n    var crossLinesTheme_1 = axisTheme.crossLines;\n    axis.crossLines = axis.crossLines.map(function (crossLine) {\n      return jsonMerge([crossLinesTheme_1, crossLine]);\n    });\n  }\n  var cleanTheme = {\n    crossLines: DELETE\n  };\n  return jsonMerge([axisTheme, cleanTheme, axis, removeOptions], noDataCloneMergeOptions);\n}\nfunction prepareEnabledOptions(options, mergedOptions) {\n  // Set `enabled: true` for all option objects where the user has provided values.\n  jsonWalk(options, function (_, userOpts, mergedOpts) {\n    if (!mergedOpts) {\n      return;\n    }\n    if ('enabled' in mergedOpts && userOpts.enabled == null) {\n      mergedOpts.enabled = true;\n    }\n  }, {\n    skip: ['data']\n  }, mergedOptions);\n}\nfunction preparePieOptions(pieSeriesTheme, seriesOptions, mergedSeries) {\n  if (Array.isArray(seriesOptions.innerLabels)) {\n    mergedSeries.innerLabels = seriesOptions.innerLabels.map(function (ln) {\n      return jsonMerge([pieSeriesTheme.innerLabels, ln]);\n    });\n  } else {\n    mergedSeries.innerLabels = DELETE;\n  }\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","r","ar","e","push","error","__spread","concat","DEFAULT_CARTESIAN_CHART_OVERRIDES","DEFAULT_BAR_CHART_OVERRIDES","DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES","jsonMerge","DELETE","jsonWalk","applySeriesTransform","getChartTheme","processSeriesOptions","optionsType","input","_a","_b","_c","_d","type","series","isAgCartesianChartOptions","specifiedType","isAgHierarchyChartOptions","isAgPolarChartOptions","isSeriesOptionType","indexOf","countArrayElements","e_1","count","input_1","input_1_1","Array","e_1_1","return","takeColours","context","colours","maxCount","result","colourIndex","noDataCloneMergeOptions","avoidDeepClone","prepareOptions","newOptions","fallbackOptions","_i","options","sanityCheckOptions","userSuppliedOptionsType","defaultSeriesType","defaultOverrides","prepareMainOptions","mergedOptions","axesThemes","seriesThemes","map","mergedSeries","preparePieOptions","pie","prepareSeries","axes","a","axis","axesTheme","position","prepareAxis","prepareEnabledOptions","some","yKeys","yKey","console","warn","yNames","yName","prepareTheme","theme","cleanedTheme","palette","themeConfig","getConfig","defaults","paletteOptions","calculateSeriesPalette","removeOptions","stacked","mergedResult","fills","strokes","inputAny","colourCount","Math","max","fill","stroke","marker","Error","axisTheme","top","bottom","left","right","crossLines","isArray","crossLinesTheme_1","crossLine","cleanTheme","_","userOpts","mergedOpts","enabled","skip","pieSeriesTheme","seriesOptions","innerLabels","ln"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/chart/mapping/prepare.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { DEFAULT_CARTESIAN_CHART_OVERRIDES, DEFAULT_BAR_CHART_OVERRIDES, DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES, } from './defaults';\nimport { jsonMerge, DELETE, jsonWalk } from '../../util/json';\nimport { applySeriesTransform } from './transforms';\nimport { getChartTheme } from './themes';\nimport { processSeriesOptions } from './prepareSeries';\nexport function optionsType(input) {\n    var _a, _b, _c, _d;\n    return _d = (_a = input.type, (_a !== null && _a !== void 0 ? _a : (_c = (_b = input.series) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.type)), (_d !== null && _d !== void 0 ? _d : 'line');\n}\nexport function isAgCartesianChartOptions(input) {\n    var specifiedType = optionsType(input);\n    if (specifiedType == null) {\n        return true;\n    }\n    switch (specifiedType) {\n        case 'cartesian':\n        case 'area':\n        case 'bar':\n        case 'column':\n        case 'groupedCategory':\n        case 'histogram':\n        case 'line':\n        case 'scatter':\n            return true;\n        default:\n            return false;\n    }\n}\nexport function isAgHierarchyChartOptions(input) {\n    var specifiedType = optionsType(input);\n    if (specifiedType == null) {\n        return false;\n    }\n    switch (input.type) {\n        case 'hierarchy':\n        // fall-through - hierarchy and treemap are synonyms.\n        case 'treemap':\n            return true;\n        default:\n            return false;\n    }\n}\nexport function isAgPolarChartOptions(input) {\n    var specifiedType = optionsType(input);\n    if (specifiedType == null) {\n        return false;\n    }\n    switch (input.type) {\n        case 'polar':\n        // fall-through - polar and pie are synonyms.\n        case 'pie':\n            return true;\n        default:\n            return false;\n    }\n}\nexport function isSeriesOptionType(input) {\n    if (input == null) {\n        return false;\n    }\n    return ['line', 'bar', 'column', 'histogram', 'scatter', 'area', 'pie', 'treemap'].indexOf(input) >= 0;\n}\nfunction countArrayElements(input) {\n    var e_1, _a;\n    var count = 0;\n    try {\n        for (var input_1 = __values(input), input_1_1 = input_1.next(); !input_1_1.done; input_1_1 = input_1.next()) {\n            var next = input_1_1.value;\n            if (next instanceof Array) {\n                count += countArrayElements(next);\n            }\n            if (next != null) {\n                count++;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (input_1_1 && !input_1_1.done && (_a = input_1.return)) _a.call(input_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return count;\n}\nfunction takeColours(context, colours, maxCount) {\n    var result = [];\n    for (var count = 0; count < maxCount; count++) {\n        result.push(colours[(count + context.colourIndex) % colours.length]);\n    }\n    return result;\n}\nexport var noDataCloneMergeOptions = {\n    avoidDeepClone: ['data'],\n};\nexport function prepareOptions(newOptions) {\n    var fallbackOptions = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        fallbackOptions[_i - 1] = arguments[_i];\n    }\n    var _a;\n    var options = jsonMerge(__spread(fallbackOptions, [newOptions]), noDataCloneMergeOptions);\n    sanityCheckOptions(options);\n    // Determine type and ensure it's explicit in the options config.\n    var userSuppliedOptionsType = options.type;\n    var type = optionsType(options);\n    options = __assign(__assign({}, options), { type: type });\n    var defaultSeriesType = isAgCartesianChartOptions(options)\n        ? 'line'\n        : isAgHierarchyChartOptions(options)\n            ? 'treemap'\n            : isAgPolarChartOptions(options)\n                ? 'pie'\n                : 'line';\n    var defaultOverrides = type === 'bar'\n        ? DEFAULT_BAR_CHART_OVERRIDES\n        : type === 'scatter'\n            ? DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES\n            : type === 'histogram'\n                ? DEFAULT_SCATTER_HISTOGRAM_CHART_OVERRIDES\n                : isAgCartesianChartOptions(options)\n                    ? DEFAULT_CARTESIAN_CHART_OVERRIDES\n                    : {};\n    var _b = prepareMainOptions(defaultOverrides, options), context = _b.context, mergedOptions = _b.mergedOptions, axesThemes = _b.axesThemes, seriesThemes = _b.seriesThemes;\n    // Special cases where we have arrays of elements which need their own defaults.\n    // Apply series themes before calling processSeriesOptions() as it reduces and renames some\n    // properties, and in that case then cannot correctly have themes applied.\n    mergedOptions.series = processSeriesOptions((mergedOptions.series || []).map(function (s) {\n        var type = s.type\n            ? s.type\n            : isSeriesOptionType(userSuppliedOptionsType)\n                ? userSuppliedOptionsType\n                : defaultSeriesType;\n        var mergedSeries = jsonMerge([seriesThemes[type] || {}, __assign(__assign({}, s), { type: type })], noDataCloneMergeOptions);\n        if (type === 'pie') {\n            preparePieOptions(seriesThemes.pie, s, mergedSeries);\n        }\n        return mergedSeries;\n    })).map(function (s) { return prepareSeries(context, s); });\n    if (isAgCartesianChartOptions(mergedOptions)) {\n        mergedOptions.axes = (_a = mergedOptions.axes) === null || _a === void 0 ? void 0 : _a.map(function (a) {\n            var _a;\n            var type = (_a = a.type, (_a !== null && _a !== void 0 ? _a : 'number'));\n            var axis = __assign(__assign({}, a), { type: type });\n            var axesTheme = jsonMerge([axesThemes[type], axesThemes[type][a.position || 'unknown'] || {}]);\n            return prepareAxis(axis, axesTheme);\n        });\n    }\n    prepareEnabledOptions(options, mergedOptions);\n    return mergedOptions;\n}\nfunction sanityCheckOptions(options) {\n    var _a, _b;\n    if ((_a = options.series) === null || _a === void 0 ? void 0 : _a.some(function (s) { return s.yKeys != null && s.yKey != null; })) {\n        console.warn('AG Charts - series options yKeys and yKey are mutually exclusive, please only use yKey for future compatibility.');\n    }\n    if ((_b = options.series) === null || _b === void 0 ? void 0 : _b.some(function (s) { return s.yNames != null && s.yName != null; })) {\n        console.warn('AG Charts - series options yNames and yName are mutually exclusive, please only use yName for future compatibility.');\n    }\n}\nfunction prepareMainOptions(defaultOverrides, options) {\n    var _a = prepareTheme(options), theme = _a.theme, cleanedTheme = _a.cleanedTheme, axesThemes = _a.axesThemes, seriesThemes = _a.seriesThemes;\n    var context = { colourIndex: 0, palette: theme.palette };\n    var mergedOptions = jsonMerge([defaultOverrides, cleanedTheme, options], noDataCloneMergeOptions);\n    return { context: context, mergedOptions: mergedOptions, axesThemes: axesThemes, seriesThemes: seriesThemes };\n}\nfunction prepareTheme(options) {\n    var theme = getChartTheme(options.theme);\n    var themeConfig = theme.getConfig(optionsType(options) || 'cartesian');\n    return {\n        theme: theme,\n        axesThemes: themeConfig['axes'] || {},\n        seriesThemes: themeConfig['series'] || {},\n        cleanedTheme: jsonMerge([themeConfig, { axes: DELETE, series: DELETE }]),\n    };\n}\nfunction prepareSeries(context, input) {\n    var defaults = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        defaults[_i - 2] = arguments[_i];\n    }\n    var paletteOptions = calculateSeriesPalette(context, input);\n    // Part of the options interface, but not directly consumed by the series implementations.\n    var removeOptions = { stacked: DELETE };\n    var mergedResult = jsonMerge(__spread(defaults, [paletteOptions, input, removeOptions]), noDataCloneMergeOptions);\n    return applySeriesTransform(mergedResult);\n}\nfunction calculateSeriesPalette(context, input) {\n    var paletteOptions = {};\n    var _a = context.palette, fills = _a.fills, strokes = _a.strokes;\n    var inputAny = input;\n    var colourCount = countArrayElements(inputAny['yKeys'] || []) || 1; // Defaults to 1 if no yKeys.\n    switch (input.type) {\n        case 'pie':\n            colourCount = Math.max(fills.length, strokes.length);\n        // fall-through - only colourCount varies for `pie`.\n        case 'area':\n        case 'bar':\n        case 'column':\n            paletteOptions.fills = takeColours(context, fills, colourCount);\n            paletteOptions.strokes = takeColours(context, strokes, colourCount);\n            break;\n        case 'histogram':\n            paletteOptions.fill = takeColours(context, fills, 1)[0];\n            paletteOptions.stroke = takeColours(context, strokes, 1)[0];\n            break;\n        case 'scatter':\n            paletteOptions.marker = {\n                stroke: takeColours(context, strokes, 1)[0],\n                fill: takeColours(context, fills, 1)[0],\n            };\n            break;\n        case 'line':\n            paletteOptions.stroke = takeColours(context, fills, 1)[0];\n            paletteOptions.marker = {\n                stroke: takeColours(context, strokes, 1)[0],\n                fill: takeColours(context, fills, 1)[0],\n            };\n            break;\n        case 'treemap':\n            break;\n        default:\n            throw new Error('AG Charts - unknown series type: ' + input.type);\n    }\n    context.colourIndex += colourCount;\n    return paletteOptions;\n}\nfunction prepareAxis(axis, axisTheme) {\n    // Remove redundant theme overload keys.\n    var removeOptions = { top: DELETE, bottom: DELETE, left: DELETE, right: DELETE };\n    // Special cross lines case where we have an arrays of cross line elements which need their own defaults.\n    if (axis.crossLines) {\n        if (!Array.isArray(axis.crossLines)) {\n            console.warn('AG Charts - axis[].crossLines should be an array.');\n            axis.crossLines = [];\n        }\n        var crossLinesTheme_1 = axisTheme.crossLines;\n        axis.crossLines = axis.crossLines.map(function (crossLine) { return jsonMerge([crossLinesTheme_1, crossLine]); });\n    }\n    var cleanTheme = { crossLines: DELETE };\n    return jsonMerge([axisTheme, cleanTheme, axis, removeOptions], noDataCloneMergeOptions);\n}\nfunction prepareEnabledOptions(options, mergedOptions) {\n    // Set `enabled: true` for all option objects where the user has provided values.\n    jsonWalk(options, function (_, userOpts, mergedOpts) {\n        if (!mergedOpts) {\n            return;\n        }\n        if ('enabled' in mergedOpts && userOpts.enabled == null) {\n            mergedOpts.enabled = true;\n        }\n    }, { skip: ['data'] }, mergedOptions);\n}\nfunction preparePieOptions(pieSeriesTheme, seriesOptions, mergedSeries) {\n    if (Array.isArray(seriesOptions.innerLabels)) {\n        mergedSeries.innerLabels = seriesOptions.innerLabels.map(function (ln) {\n            return jsonMerge([pieSeriesTheme.innerLabels, ln]);\n        });\n    }\n    else {\n        mergedSeries.innerLabels = DELETE;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}