{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\nvar format_1 = require(\"../../util/format\");\nvar log_1 = require(\"../../util/log\");\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g;\nvar DataFormatMixin = function () {\n  function DataFormatMixin() {}\n  DataFormatMixin.prototype.getDataParams = function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var style = data.getItemVisual(dataIndex, 'style');\n    var color = style && style[data.getItemVisual(dataIndex, 'drawType') || 'fill'];\n    var borderColor = style && style.stroke;\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      borderColor: borderColor,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      $vars: ['seriesName', 'name', 'value']\n    };\n  };\n  DataFormatMixin.prototype.getFormattedLabel = function (dataIndex, status, dataType, labelDimIndex, formatter, extendParams) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var params = this.getDataParams(dataIndex, dataType);\n    if (extendParams) {\n      zrUtil.extend(params, extendParams);\n    }\n    if (labelDimIndex != null && params.value instanceof Array) {\n      params.value = params.value[labelDimIndex];\n    }\n    if (!formatter) {\n      var itemModel = data.getItemModel(dataIndex);\n      formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : [status, 'label', 'formatter']);\n    }\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = labelDimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = format_1.formatTpl(formatter, params);\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1);\n        }\n        return dataProvider_1.retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  };\n  DataFormatMixin.prototype.getRawValue = function (idx, dataType) {\n    return dataProvider_1.retrieveRawValue(this.getData(dataType), idx);\n  };\n  DataFormatMixin.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return;\n  };\n  return DataFormatMixin;\n}();\nexports.DataFormatMixin = DataFormatMixin;\n;\nfunction normalizeTooltipFormatResult(result) {\n  var markupText;\n  var markupFragment;\n  if (zrUtil.isObject(result)) {\n    if (result.type) {\n      markupFragment = result;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('The return type of `formatTooltip` is not supported: ' + log_1.makePrintable(result));\n      }\n    }\n  } else {\n    markupText = result;\n  }\n  return {\n    markupText: markupText,\n    markupFragment: markupFragment\n  };\n}\nexports.normalizeTooltipFormatResult = normalizeTooltipFormatResult;","map":{"version":3,"names":["exports","__esModule","zrUtil","require","dataProvider_1","format_1","log_1","DIMENSION_LABEL_REG","DataFormatMixin","prototype","getDataParams","dataIndex","dataType","data","getData","rawValue","getRawValue","rawDataIndex","getRawIndex","name","getName","itemOpt","getRawDataItem","style","getItemVisual","color","borderColor","stroke","mainType","isSeries","userOutput","componentType","componentSubType","subType","componentIndex","seriesType","seriesIndex","seriesId","id","seriesName","value","dimensionNames","encode","$vars","getFormattedLabel","status","labelDimIndex","formatter","extendParams","params","extend","Array","itemModel","getItemModel","get","dimensionIndex","str","formatTpl","replace","origin","dim","len","length","charAt","slice","retrieveRawValue","idx","formatTooltip","multipleSeries","normalizeTooltipFormatResult","result","markupText","markupFragment","isObject","type","process","env","NODE_ENV","console","warn","makePrintable"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/model/mixin/dataFormat.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\n\nvar format_1 = require(\"../../util/format\");\n\nvar log_1 = require(\"../../util/log\");\n\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g;\n\nvar DataFormatMixin = function () {\n  function DataFormatMixin() {}\n\n  DataFormatMixin.prototype.getDataParams = function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var style = data.getItemVisual(dataIndex, 'style');\n    var color = style && style[data.getItemVisual(dataIndex, 'drawType') || 'fill'];\n    var borderColor = style && style.stroke;\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      borderColor: borderColor,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      $vars: ['seriesName', 'name', 'value']\n    };\n  };\n\n  DataFormatMixin.prototype.getFormattedLabel = function (dataIndex, status, dataType, labelDimIndex, formatter, extendParams) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (extendParams) {\n      zrUtil.extend(params, extendParams);\n    }\n\n    if (labelDimIndex != null && params.value instanceof Array) {\n      params.value = params.value[labelDimIndex];\n    }\n\n    if (!formatter) {\n      var itemModel = data.getItemModel(dataIndex);\n      formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : [status, 'label', 'formatter']);\n    }\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = labelDimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = format_1.formatTpl(formatter, params);\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1);\n        }\n\n        return dataProvider_1.retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  };\n\n  DataFormatMixin.prototype.getRawValue = function (idx, dataType) {\n    return dataProvider_1.retrieveRawValue(this.getData(dataType), idx);\n  };\n\n  DataFormatMixin.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return;\n  };\n\n  return DataFormatMixin;\n}();\n\nexports.DataFormatMixin = DataFormatMixin;\n;\n\nfunction normalizeTooltipFormatResult(result) {\n  var markupText;\n  var markupFragment;\n\n  if (zrUtil.isObject(result)) {\n    if (result.type) {\n      markupFragment = result;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('The return type of `formatTooltip` is not supported: ' + log_1.makePrintable(result));\n      }\n    }\n  } else {\n    markupText = result;\n  }\n\n  return {\n    markupText: markupText,\n    markupFragment: markupFragment\n  };\n}\n\nexports.normalizeTooltipFormatResult = normalizeTooltipFormatResult;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}