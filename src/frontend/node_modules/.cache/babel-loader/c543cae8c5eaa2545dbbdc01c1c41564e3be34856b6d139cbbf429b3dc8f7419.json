{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    events: []\n  },\n  getters: {\n    EVENTS(state) {\n      return state.events;\n    }\n  },\n  mutations: {\n    SET_EVENTS_TO_STATE(state, events) {\n      state.events = events;\n    }\n  },\n  actions: {\n    //  async GET_POSTS_FROM_API({commit}, posts) {\n    //    try {\n    //      const response = await axios.get('https://voiting-server.cfapps.us10-001.hana.ondemand.com/test/get-data');\n    //      posts = response.data\n    //      commit('SET_POSTS_TO_STATE', posts)\n    //    } catch(er) {\n    //      alert(er)\n    //    }\n    //  },\n\n    GET_EVENTS_FROM_API({\n      commit\n    }) {\n      return axios.get(\"https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/event/get-all\").then(r => r.data).then(events => {\n        commit('SET_EVENTS_TO_STATE', events);\n      }).catch(error => {\n        console.log(error);\n        return error;\n      });\n    },\n    CREATE_EVENT_BY_API() {},\n    DELETE_EVENT_BY_API() {},\n    PUT_EVENT_FROM_API() {}\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","state","events","getters","EVENTS","mutations","SET_EVENTS_TO_STATE","actions","GET_EVENTS_FROM_API","commit","get","then","r","data","catch","error","console","log","CREATE_EVENT_BY_API","DELETE_EVENT_BY_API","PUT_EVENT_FROM_API","modules"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default createStore({\r\n  state: {\r\n    events: [\r\n    ]\r\n  },\r\n  getters: {\r\n    EVENTS(state) {\r\n      return state.events\r\n    }\r\n  },\r\n  mutations: {\r\n    SET_EVENTS_TO_STATE(state, events) {\r\n      state.events = events;\r\n    },\r\n  },\r\n  actions: {\r\n    //  async GET_POSTS_FROM_API({commit}, posts) {\r\n    //    try {\r\n    //      const response = await axios.get('https://voiting-server.cfapps.us10-001.hana.ondemand.com/test/get-data');\r\n    //      posts = response.data\r\n    //      commit('SET_POSTS_TO_STATE', posts)\r\n    //    } catch(er) {\r\n    //      alert(er)\r\n    //    }\r\n    //  },\r\n\r\n    GET_EVENTS_FROM_API({commit}) {\r\n      return axios\r\n        .get(\"https://voiting-server.cfapps.us10-001.hana.ondemand.com/api/event/get-all\")\r\n        .then(r => r.data)\r\n        .then(events => {\r\n          commit('SET_EVENTS_TO_STATE', events)\r\n        })\r\n\r\n        .catch((error) => {\r\n          console.log(error)\r\n          return error;\r\n        })\r\n    },\r\n\r\n    CREATE_EVENT_BY_API() {\r\n\r\n\r\n    },\r\n\r\n    DELETE_EVENT_BY_API() {\r\n\r\n    },\r\n\r\n    PUT_EVENT_FROM_API() {\r\n\r\n    }\r\n\r\n  },\r\n  modules: {\r\n\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,MAAM,EAAE;EAEV,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,CAACH,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACC,MAAM;IACrB;EACF,CAAC;EACDG,SAAS,EAAE;IACTC,mBAAmB,CAACL,KAAK,EAAEC,MAAM,EAAE;MACjCD,KAAK,CAACC,MAAM,GAAGA,MAAM;IACvB;EACF,CAAC;EACDK,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,mBAAmB,CAAC;MAACC;IAAM,CAAC,EAAE;MAC5B,OAAOT,KAAK,CACTU,GAAG,CAAC,4EAA4E,CAAC,CACjFC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CACjBF,IAAI,CAACT,MAAM,IAAI;QACdO,MAAM,CAAC,qBAAqB,EAAEP,MAAM,CAAC;MACvC,CAAC,CAAC,CAEDY,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,OAAOA,KAAK;MACd,CAAC,CAAC;IACN,CAAC;IAEDG,mBAAmB,GAAG,CAGtB,CAAC;IAEDC,mBAAmB,GAAG,CAEtB,CAAC;IAEDC,kBAAkB,GAAG,CAErB;EAEF,CAAC;EACDC,OAAO,EAAE,CAET;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}