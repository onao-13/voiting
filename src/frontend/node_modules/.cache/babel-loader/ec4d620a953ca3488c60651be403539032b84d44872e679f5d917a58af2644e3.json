{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    type: \"text\",\n    value: _ctx.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAA4D;IAArDC,IAAI,EAAC,MAAM;IAAEC,KAAK,EAAEC,eAAU;IAAGC,OAAK,yCAAEC,qDAAW","names":["_createElementBlock","type","value","_ctx","onInput","$options"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\bulletin\\src\\components\\MainInput.vue"],"sourcesContent":["<template>\r\n  <input type=\"text\" :value=\"modelValue\" @input=\"updateInput\">\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n name: 'MainInput',\r\n\r\n data:() => ({\r\n  text: ''\r\n }),\r\n\r\n methods: {\r\n  updateInput() {\r\n   this.$emit('inputValue', this.text)\r\n  }\r\n },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}