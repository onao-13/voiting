{"ast":null,"code":"// For small data structs like a bounding box, objects are superior to arrays\n// in terms of performance (by 3-4% in Chrome 71, Safari 12 and by 20% in Firefox 64).\n// They are also self descriptive and harder to abuse.\n// For example, one has to do:\n// `ctx.strokeRect(bbox.x, bbox.y, bbox.width, bbox.height);`\n// rather than become enticed by the much slower:\n// `ctx.strokeRect(...bbox);`\n// https://jsperf.com/array-vs-object-create-access\nvar BBox = /** @class */function () {\n  function BBox(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  BBox.prototype.clone = function () {\n    var _a = this,\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n    return new BBox(x, y, width, height);\n  };\n  BBox.prototype.equals = function (other) {\n    return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n  };\n  BBox.prototype.isValid = function () {\n    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);\n  };\n  BBox.prototype.dilate = function (value) {\n    this.x -= value;\n    this.y -= value;\n    this.width += value * 2;\n    this.height += value * 2;\n  };\n  BBox.prototype.containsPoint = function (x, y) {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  };\n  BBox.prototype.render = function (ctx, params) {\n    if (params === void 0) {\n      params = BBox.noParams;\n    }\n    ctx.save();\n    if (params.resetTransform) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    ctx.strokeStyle = params.strokeStyle || 'cyan';\n    ctx.lineWidth = params.lineWidth || 1;\n    ctx.strokeRect(this.x, this.y, this.width, this.height);\n    if (params.label) {\n      ctx.fillStyle = params.fillStyle || 'black';\n      ctx.textBaseline = 'bottom';\n      ctx.fillText(params.label, this.x, this.y);\n    }\n    ctx.restore();\n  };\n  BBox.noParams = {};\n  return BBox;\n}();\nexport { BBox };","map":{"version":3,"names":["BBox","x","y","width","height","prototype","clone","_a","equals","other","isValid","isFinite","dilate","value","containsPoint","render","ctx","params","noParams","save","resetTransform","setTransform","strokeStyle","lineWidth","strokeRect","label","fillStyle","textBaseline","fillText","restore"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/scene/bbox.js"],"sourcesContent":["// For small data structs like a bounding box, objects are superior to arrays\n// in terms of performance (by 3-4% in Chrome 71, Safari 12 and by 20% in Firefox 64).\n// They are also self descriptive and harder to abuse.\n// For example, one has to do:\n// `ctx.strokeRect(bbox.x, bbox.y, bbox.width, bbox.height);`\n// rather than become enticed by the much slower:\n// `ctx.strokeRect(...bbox);`\n// https://jsperf.com/array-vs-object-create-access\nvar BBox = /** @class */ (function () {\n    function BBox(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    BBox.prototype.clone = function () {\n        var _a = this, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        return new BBox(x, y, width, height);\n    };\n    BBox.prototype.equals = function (other) {\n        return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n    };\n    BBox.prototype.isValid = function () {\n        return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);\n    };\n    BBox.prototype.dilate = function (value) {\n        this.x -= value;\n        this.y -= value;\n        this.width += value * 2;\n        this.height += value * 2;\n    };\n    BBox.prototype.containsPoint = function (x, y) {\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n    };\n    BBox.prototype.render = function (ctx, params) {\n        if (params === void 0) { params = BBox.noParams; }\n        ctx.save();\n        if (params.resetTransform) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        ctx.strokeStyle = params.strokeStyle || 'cyan';\n        ctx.lineWidth = params.lineWidth || 1;\n        ctx.strokeRect(this.x, this.y, this.width, this.height);\n        if (params.label) {\n            ctx.fillStyle = params.fillStyle || 'black';\n            ctx.textBaseline = 'bottom';\n            ctx.fillText(params.label, this.x, this.y);\n        }\n        ctx.restore();\n    };\n    BBox.noParams = {};\n    return BBox;\n}());\nexport { BBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}