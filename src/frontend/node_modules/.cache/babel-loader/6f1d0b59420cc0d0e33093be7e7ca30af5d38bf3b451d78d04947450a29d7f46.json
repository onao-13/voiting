{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar graphic_1 = require(\"../util/graphic\");\nvar PathProxy_1 = require(\"zrender/lib/core/PathProxy\");\nvar util_1 = require(\"zrender/lib/contain/util\");\nvar curve_1 = require(\"zrender/lib/core/curve\");\nvar util_2 = require(\"zrender/lib/core/util\");\nvar matrix_1 = require(\"zrender/lib/core/matrix\");\nvar vector = require(\"zrender/lib/core/vector\");\nvar states_1 = require(\"../util/states\");\nvar PI2 = Math.PI * 2;\nvar CMD = PathProxy_1[\"default\"].CMD;\nvar DEFAULT_SEARCH_SPACE = ['top', 'right', 'bottom', 'left'];\nfunction getCandidateAnchor(pos, distance, rect, outPt, outDir) {\n  var width = rect.width;\n  var height = rect.height;\n  switch (pos) {\n    case 'top':\n      outPt.set(rect.x + width / 2, rect.y - distance);\n      outDir.set(0, -1);\n      break;\n    case 'bottom':\n      outPt.set(rect.x + width / 2, rect.y + height + distance);\n      outDir.set(0, 1);\n      break;\n    case 'left':\n      outPt.set(rect.x - distance, rect.y + height / 2);\n      outDir.set(-1, 0);\n      break;\n    case 'right':\n      outPt.set(rect.x + width + distance, rect.y + height / 2);\n      outDir.set(1, 0);\n      break;\n  }\n}\nfunction projectPointToArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y, out) {\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n  x /= d;\n  y /= d;\n  var ox = x * r + cx;\n  var oy = y * r + cy;\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = util_1.normalizeRadian(endAngle);\n    endAngle = util_1.normalizeRadian(tmp);\n  } else {\n    startAngle = util_1.normalizeRadian(startAngle);\n    endAngle = util_1.normalizeRadian(endAngle);\n  }\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n  var angle = Math.atan2(y, x);\n  if (angle < 0) {\n    angle += PI2;\n  }\n  if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n  var x1 = r * Math.cos(startAngle) + cx;\n  var y1 = r * Math.sin(startAngle) + cy;\n  var x2 = r * Math.cos(endAngle) + cx;\n  var y2 = r * Math.sin(endAngle) + cy;\n  var d1 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n  var d2 = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\n  if (d1 < d2) {\n    out[0] = x1;\n    out[1] = y1;\n    return Math.sqrt(d1);\n  } else {\n    out[0] = x2;\n    out[1] = y2;\n    return Math.sqrt(d2);\n  }\n}\nfunction projectPointToLine(x1, y1, x2, y2, x, y, out, limitToEnds) {\n  var dx = x - x1;\n  var dy = y - y1;\n  var dx1 = x2 - x1;\n  var dy1 = y2 - y1;\n  var lineLen = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n  dx1 /= lineLen;\n  dy1 /= lineLen;\n  var projectedLen = dx * dx1 + dy * dy1;\n  var t = projectedLen / lineLen;\n  if (limitToEnds) {\n    t = Math.min(Math.max(t, 0), 1);\n  }\n  t *= lineLen;\n  var ox = out[0] = x1 + t * dx1;\n  var oy = out[1] = y1 + t * dy1;\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\nfunction projectPointToRect(x1, y1, width, height, x, y, out) {\n  if (width < 0) {\n    x1 = x1 + width;\n    width = -width;\n  }\n  if (height < 0) {\n    y1 = y1 + height;\n    height = -height;\n  }\n  var x2 = x1 + width;\n  var y2 = y1 + height;\n  var ox = out[0] = Math.min(Math.max(x, x1), x2);\n  var oy = out[1] = Math.min(Math.max(y, y1), y2);\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\nvar tmpPt = [];\nfunction nearestPointOnRect(pt, rect, out) {\n  var dist = projectPointToRect(rect.x, rect.y, rect.width, rect.height, pt.x, pt.y, tmpPt);\n  out.set(tmpPt[0], tmpPt[1]);\n  return dist;\n}\nfunction nearestPointOnPath(pt, path, out) {\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n  var x1;\n  var y1;\n  var minDist = Infinity;\n  var data = path.data;\n  var x = pt.x;\n  var y = pt.y;\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++];\n    if (i === 1) {\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n    var d = minDist;\n    switch (cmd) {\n      case CMD.M:\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n      case CMD.L:\n        d = projectPointToLine(xi, yi, data[i], data[i + 1], x, y, tmpPt, true);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n      case CMD.C:\n        d = curve_1.cubicProjectPoint(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n      case CMD.Q:\n        d = curve_1.quadraticProjectPoint(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        i += 1;\n        var anticlockwise = !!(1 - data[i++]);\n        x1 = Math.cos(theta) * rx + cx;\n        y1 = Math.sin(theta) * ry + cy;\n        if (i <= 1) {\n          x0 = x1;\n          y0 = y1;\n        }\n        var _x = (x - cx) * ry / rx + cx;\n        d = projectPointToArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y, tmpPt);\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        d = projectPointToRect(x0, y0, width, height, x, y, tmpPt);\n        break;\n      case CMD.Z:\n        d = projectPointToLine(xi, yi, x0, y0, x, y, tmpPt, true);\n        xi = x0;\n        yi = y0;\n        break;\n    }\n    if (d < minDist) {\n      minDist = d;\n      out.set(tmpPt[0], tmpPt[1]);\n    }\n  }\n  return minDist;\n}\nvar pt0 = new graphic_1.Point();\nvar pt1 = new graphic_1.Point();\nvar pt2 = new graphic_1.Point();\nvar dir = new graphic_1.Point();\nvar dir2 = new graphic_1.Point();\nfunction updateLabelLinePoints(target, labelLineModel) {\n  if (!target) {\n    return;\n  }\n  var labelLine = target.getTextGuideLine();\n  var label = target.getTextContent();\n  if (!(label && labelLine)) {\n    return;\n  }\n  var labelGuideConfig = target.textGuideLineConfig || {};\n  var points = [[0, 0], [0, 0], [0, 0]];\n  var searchSpace = labelGuideConfig.candidates || DEFAULT_SEARCH_SPACE;\n  var labelRect = label.getBoundingRect().clone();\n  labelRect.applyTransform(label.getComputedTransform());\n  var minDist = Infinity;\n  var anchorPoint = labelGuideConfig.anchor;\n  var targetTransform = target.getComputedTransform();\n  var targetInversedTransform = targetTransform && matrix_1.invert([], targetTransform);\n  var len = labelLineModel.get('length2') || 0;\n  if (anchorPoint) {\n    pt2.copy(anchorPoint);\n  }\n  for (var i = 0; i < searchSpace.length; i++) {\n    var candidate = searchSpace[i];\n    getCandidateAnchor(candidate, 0, labelRect, pt0, dir);\n    graphic_1.Point.scaleAndAdd(pt1, pt0, dir, len);\n    pt1.transform(targetInversedTransform);\n    var boundingRect = target.getBoundingRect();\n    var dist = anchorPoint ? anchorPoint.distance(pt1) : target instanceof graphic_1.Path ? nearestPointOnPath(pt1, target.path, pt2) : nearestPointOnRect(pt1, boundingRect, pt2);\n    if (dist < minDist) {\n      minDist = dist;\n      pt1.transform(targetTransform);\n      pt2.transform(targetTransform);\n      pt2.toArray(points[0]);\n      pt1.toArray(points[1]);\n      pt0.toArray(points[2]);\n    }\n  }\n  limitTurnAngle(points, labelLineModel.get('minTurnAngle'));\n  labelLine.setShape({\n    points: points\n  });\n}\nexports.updateLabelLinePoints = updateLabelLinePoints;\nvar tmpArr = [];\nvar tmpProjPoint = new graphic_1.Point();\nfunction limitTurnAngle(linePoints, minTurnAngle) {\n  if (!(minTurnAngle <= 180 && minTurnAngle > 0)) {\n    return;\n  }\n  minTurnAngle = minTurnAngle / 180 * Math.PI;\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  graphic_1.Point.sub(dir, pt0, pt1);\n  graphic_1.Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(dir2);\n  var minTurnAngleCos = Math.cos(minTurnAngle);\n  if (minTurnAngleCos < angleCos) {\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr);\n    tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI - minTurnAngle));\n    var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n    if (isNaN(t)) {\n      return;\n    }\n    if (t < 0) {\n      graphic_1.Point.copy(tmpProjPoint, pt1);\n    } else if (t > 1) {\n      graphic_1.Point.copy(tmpProjPoint, pt2);\n    }\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\nexports.limitTurnAngle = limitTurnAngle;\nfunction limitSurfaceAngle(linePoints, surfaceNormal, maxSurfaceAngle) {\n  if (!(maxSurfaceAngle <= 180 && maxSurfaceAngle > 0)) {\n    return;\n  }\n  maxSurfaceAngle = maxSurfaceAngle / 180 * Math.PI;\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  graphic_1.Point.sub(dir, pt1, pt0);\n  graphic_1.Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(surfaceNormal);\n  var maxSurfaceAngleCos = Math.cos(maxSurfaceAngle);\n  if (angleCos < maxSurfaceAngleCos) {\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr);\n    var HALF_PI = Math.PI / 2;\n    var angle2 = Math.acos(dir2.dot(surfaceNormal));\n    var newAngle = HALF_PI + angle2 - maxSurfaceAngle;\n    if (newAngle >= HALF_PI) {\n      graphic_1.Point.copy(tmpProjPoint, pt2);\n    } else {\n      tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI / 2 - newAngle));\n      var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n      if (isNaN(t)) {\n        return;\n      }\n      if (t < 0) {\n        graphic_1.Point.copy(tmpProjPoint, pt1);\n      } else if (t > 1) {\n        graphic_1.Point.copy(tmpProjPoint, pt2);\n      }\n    }\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\nexports.limitSurfaceAngle = limitSurfaceAngle;\nfunction setLabelLineState(labelLine, ignore, stateName, stateModel) {\n  var isNormal = stateName === 'normal';\n  var stateObj = isNormal ? labelLine : labelLine.ensureState(stateName);\n  stateObj.ignore = ignore;\n  var smooth = stateModel.get('smooth');\n  if (smooth && smooth === true) {\n    smooth = 0.3;\n  }\n  stateObj.shape = stateObj.shape || {};\n  if (smooth > 0) {\n    stateObj.shape.smooth = smooth;\n  }\n  var styleObj = stateModel.getModel('lineStyle').getLineStyle();\n  isNormal ? labelLine.useStyle(styleObj) : stateObj.style = styleObj;\n}\nfunction buildLabelLinePath(path, shape) {\n  var smooth = shape.smooth;\n  var points = shape.points;\n  if (!points) {\n    return;\n  }\n  path.moveTo(points[0][0], points[0][1]);\n  if (smooth > 0 && points.length >= 3) {\n    var len1 = vector.dist(points[0], points[1]);\n    var len2 = vector.dist(points[1], points[2]);\n    if (!len1 || !len2) {\n      path.lineTo(points[1][0], points[1][1]);\n      path.lineTo(points[2][0], points[2][1]);\n      return;\n    }\n    var moveLen = Math.min(len1, len2) * smooth;\n    var midPoint0 = vector.lerp([], points[1], points[0], moveLen / len1);\n    var midPoint2 = vector.lerp([], points[1], points[2], moveLen / len2);\n    var midPoint1 = vector.lerp([], midPoint0, midPoint2, 0.5);\n    path.bezierCurveTo(midPoint0[0], midPoint0[1], midPoint0[0], midPoint0[1], midPoint1[0], midPoint1[1]);\n    path.bezierCurveTo(midPoint2[0], midPoint2[1], midPoint2[0], midPoint2[1], points[2][0], points[2][1]);\n  } else {\n    for (var i = 1; i < points.length; i++) {\n      path.lineTo(points[i][0], points[i][1]);\n    }\n  }\n}\nfunction setLabelLineStyle(targetEl, statesModels, defaultStyle) {\n  var labelLine = targetEl.getTextGuideLine();\n  var label = targetEl.getTextContent();\n  if (!label) {\n    if (labelLine) {\n      targetEl.removeTextGuideLine();\n    }\n    return;\n  }\n  var normalModel = statesModels.normal;\n  var showNormal = normalModel.get('show');\n  var labelIgnoreNormal = label.ignore;\n  for (var i = 0; i < states_1.DISPLAY_STATES.length; i++) {\n    var stateName = states_1.DISPLAY_STATES[i];\n    var stateModel = statesModels[stateName];\n    var isNormal = stateName === 'normal';\n    if (stateModel) {\n      var stateShow = stateModel.get('show');\n      var isLabelIgnored = isNormal ? labelIgnoreNormal : util_2.retrieve2(label.states[stateName] && label.states[stateName].ignore, labelIgnoreNormal);\n      if (isLabelIgnored || !util_2.retrieve2(stateShow, showNormal)) {\n        var stateObj = isNormal ? labelLine : labelLine && labelLine.states.normal;\n        if (stateObj) {\n          stateObj.ignore = true;\n        }\n        continue;\n      }\n      if (!labelLine) {\n        labelLine = new graphic_1.Polyline();\n        targetEl.setTextGuideLine(labelLine);\n        if (!isNormal && (labelIgnoreNormal || !showNormal)) {\n          setLabelLineState(labelLine, true, 'normal', statesModels.normal);\n        }\n        if (targetEl.stateProxy) {\n          labelLine.stateProxy = targetEl.stateProxy;\n        }\n      }\n      setLabelLineState(labelLine, false, stateName, stateModel);\n    }\n  }\n  if (labelLine) {\n    util_2.defaults(labelLine.style, defaultStyle);\n    labelLine.style.fill = null;\n    var showAbove = normalModel.get('showAbove');\n    var labelLineConfig = targetEl.textGuideLineConfig = targetEl.textGuideLineConfig || {};\n    labelLineConfig.showAbove = showAbove || false;\n    labelLine.buildPath = buildLabelLinePath;\n  }\n}\nexports.setLabelLineStyle = setLabelLineStyle;\nfunction getLabelLineStatesModels(itemModel, labelLineName) {\n  labelLineName = labelLineName || 'labelLine';\n  var statesModels = {\n    normal: itemModel.getModel(labelLineName)\n  };\n  for (var i = 0; i < states_1.SPECIAL_STATES.length; i++) {\n    var stateName = states_1.SPECIAL_STATES[i];\n    statesModels[stateName] = itemModel.getModel([stateName, labelLineName]);\n  }\n  return statesModels;\n}\nexports.getLabelLineStatesModels = getLabelLineStatesModels;","map":{"version":3,"names":["exports","__esModule","graphic_1","require","PathProxy_1","util_1","curve_1","util_2","matrix_1","vector","states_1","PI2","Math","PI","CMD","DEFAULT_SEARCH_SPACE","getCandidateAnchor","pos","distance","rect","outPt","outDir","width","height","set","x","y","projectPointToArc","cx","cy","r","startAngle","endAngle","anticlockwise","out","d","sqrt","ox","oy","abs","tmp","normalizeRadian","angle","atan2","x1","cos","y1","sin","x2","y2","d1","d2","projectPointToLine","limitToEnds","dx","dy","dx1","dy1","lineLen","projectedLen","t","min","max","projectPointToRect","tmpPt","nearestPointOnRect","pt","dist","nearestPointOnPath","path","xi","yi","x0","y0","minDist","Infinity","data","i","length","cmd","M","L","C","cubicProjectPoint","Q","quadraticProjectPoint","A","rx","ry","theta","dTheta","_x","R","Z","pt0","Point","pt1","pt2","dir","dir2","updateLabelLinePoints","target","labelLineModel","labelLine","getTextGuideLine","label","getTextContent","labelGuideConfig","textGuideLineConfig","points","searchSpace","candidates","labelRect","getBoundingRect","clone","applyTransform","getComputedTransform","anchorPoint","anchor","targetTransform","targetInversedTransform","invert","len","get","copy","candidate","scaleAndAdd","transform","boundingRect","Path","toArray","limitTurnAngle","setShape","tmpArr","tmpProjPoint","linePoints","minTurnAngle","fromArray","sub","len1","len2","scale","angleCos","dot","minTurnAngleCos","tan","isNaN","limitSurfaceAngle","surfaceNormal","maxSurfaceAngle","maxSurfaceAngleCos","HALF_PI","angle2","acos","newAngle","setLabelLineState","ignore","stateName","stateModel","isNormal","stateObj","ensureState","smooth","shape","styleObj","getModel","getLineStyle","useStyle","style","buildLabelLinePath","moveTo","lineTo","moveLen","midPoint0","lerp","midPoint2","midPoint1","bezierCurveTo","setLabelLineStyle","targetEl","statesModels","defaultStyle","removeTextGuideLine","normalModel","normal","showNormal","labelIgnoreNormal","DISPLAY_STATES","stateShow","isLabelIgnored","retrieve2","states","Polyline","setTextGuideLine","stateProxy","defaults","fill","showAbove","labelLineConfig","buildPath","getLabelLineStatesModels","itemModel","labelLineName","SPECIAL_STATES"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/label/labelGuideHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar graphic_1 = require(\"../util/graphic\");\n\nvar PathProxy_1 = require(\"zrender/lib/core/PathProxy\");\n\nvar util_1 = require(\"zrender/lib/contain/util\");\n\nvar curve_1 = require(\"zrender/lib/core/curve\");\n\nvar util_2 = require(\"zrender/lib/core/util\");\n\nvar matrix_1 = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar states_1 = require(\"../util/states\");\n\nvar PI2 = Math.PI * 2;\nvar CMD = PathProxy_1[\"default\"].CMD;\nvar DEFAULT_SEARCH_SPACE = ['top', 'right', 'bottom', 'left'];\n\nfunction getCandidateAnchor(pos, distance, rect, outPt, outDir) {\n  var width = rect.width;\n  var height = rect.height;\n\n  switch (pos) {\n    case 'top':\n      outPt.set(rect.x + width / 2, rect.y - distance);\n      outDir.set(0, -1);\n      break;\n\n    case 'bottom':\n      outPt.set(rect.x + width / 2, rect.y + height + distance);\n      outDir.set(0, 1);\n      break;\n\n    case 'left':\n      outPt.set(rect.x - distance, rect.y + height / 2);\n      outDir.set(-1, 0);\n      break;\n\n    case 'right':\n      outPt.set(rect.x + width + distance, rect.y + height / 2);\n      outDir.set(1, 0);\n      break;\n  }\n}\n\nfunction projectPointToArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y, out) {\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n  x /= d;\n  y /= d;\n  var ox = x * r + cx;\n  var oy = y * r + cy;\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = util_1.normalizeRadian(endAngle);\n    endAngle = util_1.normalizeRadian(tmp);\n  } else {\n    startAngle = util_1.normalizeRadian(startAngle);\n    endAngle = util_1.normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n    out[0] = ox;\n    out[1] = oy;\n    return d - r;\n  }\n\n  var x1 = r * Math.cos(startAngle) + cx;\n  var y1 = r * Math.sin(startAngle) + cy;\n  var x2 = r * Math.cos(endAngle) + cx;\n  var y2 = r * Math.sin(endAngle) + cy;\n  var d1 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);\n  var d2 = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);\n\n  if (d1 < d2) {\n    out[0] = x1;\n    out[1] = y1;\n    return Math.sqrt(d1);\n  } else {\n    out[0] = x2;\n    out[1] = y2;\n    return Math.sqrt(d2);\n  }\n}\n\nfunction projectPointToLine(x1, y1, x2, y2, x, y, out, limitToEnds) {\n  var dx = x - x1;\n  var dy = y - y1;\n  var dx1 = x2 - x1;\n  var dy1 = y2 - y1;\n  var lineLen = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n  dx1 /= lineLen;\n  dy1 /= lineLen;\n  var projectedLen = dx * dx1 + dy * dy1;\n  var t = projectedLen / lineLen;\n\n  if (limitToEnds) {\n    t = Math.min(Math.max(t, 0), 1);\n  }\n\n  t *= lineLen;\n  var ox = out[0] = x1 + t * dx1;\n  var oy = out[1] = y1 + t * dy1;\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\n\nfunction projectPointToRect(x1, y1, width, height, x, y, out) {\n  if (width < 0) {\n    x1 = x1 + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y1 = y1 + height;\n    height = -height;\n  }\n\n  var x2 = x1 + width;\n  var y2 = y1 + height;\n  var ox = out[0] = Math.min(Math.max(x, x1), x2);\n  var oy = out[1] = Math.min(Math.max(y, y1), y2);\n  return Math.sqrt((ox - x) * (ox - x) + (oy - y) * (oy - y));\n}\n\nvar tmpPt = [];\n\nfunction nearestPointOnRect(pt, rect, out) {\n  var dist = projectPointToRect(rect.x, rect.y, rect.width, rect.height, pt.x, pt.y, tmpPt);\n  out.set(tmpPt[0], tmpPt[1]);\n  return dist;\n}\n\nfunction nearestPointOnPath(pt, path, out) {\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n  var x1;\n  var y1;\n  var minDist = Infinity;\n  var data = path.data;\n  var x = pt.x;\n  var y = pt.y;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++];\n\n    if (i === 1) {\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    var d = minDist;\n\n    switch (cmd) {\n      case CMD.M:\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        d = projectPointToLine(xi, yi, data[i], data[i + 1], x, y, tmpPt, true);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        d = curve_1.cubicProjectPoint(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        d = curve_1.quadraticProjectPoint(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y, tmpPt);\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        i += 1;\n        var anticlockwise = !!(1 - data[i++]);\n        x1 = Math.cos(theta) * rx + cx;\n        y1 = Math.sin(theta) * ry + cy;\n\n        if (i <= 1) {\n          x0 = x1;\n          y0 = y1;\n        }\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        d = projectPointToArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y, tmpPt);\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        d = projectPointToRect(x0, y0, width, height, x, y, tmpPt);\n        break;\n\n      case CMD.Z:\n        d = projectPointToLine(xi, yi, x0, y0, x, y, tmpPt, true);\n        xi = x0;\n        yi = y0;\n        break;\n    }\n\n    if (d < minDist) {\n      minDist = d;\n      out.set(tmpPt[0], tmpPt[1]);\n    }\n  }\n\n  return minDist;\n}\n\nvar pt0 = new graphic_1.Point();\nvar pt1 = new graphic_1.Point();\nvar pt2 = new graphic_1.Point();\nvar dir = new graphic_1.Point();\nvar dir2 = new graphic_1.Point();\n\nfunction updateLabelLinePoints(target, labelLineModel) {\n  if (!target) {\n    return;\n  }\n\n  var labelLine = target.getTextGuideLine();\n  var label = target.getTextContent();\n\n  if (!(label && labelLine)) {\n    return;\n  }\n\n  var labelGuideConfig = target.textGuideLineConfig || {};\n  var points = [[0, 0], [0, 0], [0, 0]];\n  var searchSpace = labelGuideConfig.candidates || DEFAULT_SEARCH_SPACE;\n  var labelRect = label.getBoundingRect().clone();\n  labelRect.applyTransform(label.getComputedTransform());\n  var minDist = Infinity;\n  var anchorPoint = labelGuideConfig.anchor;\n  var targetTransform = target.getComputedTransform();\n  var targetInversedTransform = targetTransform && matrix_1.invert([], targetTransform);\n  var len = labelLineModel.get('length2') || 0;\n\n  if (anchorPoint) {\n    pt2.copy(anchorPoint);\n  }\n\n  for (var i = 0; i < searchSpace.length; i++) {\n    var candidate = searchSpace[i];\n    getCandidateAnchor(candidate, 0, labelRect, pt0, dir);\n    graphic_1.Point.scaleAndAdd(pt1, pt0, dir, len);\n    pt1.transform(targetInversedTransform);\n    var boundingRect = target.getBoundingRect();\n    var dist = anchorPoint ? anchorPoint.distance(pt1) : target instanceof graphic_1.Path ? nearestPointOnPath(pt1, target.path, pt2) : nearestPointOnRect(pt1, boundingRect, pt2);\n\n    if (dist < minDist) {\n      minDist = dist;\n      pt1.transform(targetTransform);\n      pt2.transform(targetTransform);\n      pt2.toArray(points[0]);\n      pt1.toArray(points[1]);\n      pt0.toArray(points[2]);\n    }\n  }\n\n  limitTurnAngle(points, labelLineModel.get('minTurnAngle'));\n  labelLine.setShape({\n    points: points\n  });\n}\n\nexports.updateLabelLinePoints = updateLabelLinePoints;\nvar tmpArr = [];\nvar tmpProjPoint = new graphic_1.Point();\n\nfunction limitTurnAngle(linePoints, minTurnAngle) {\n  if (!(minTurnAngle <= 180 && minTurnAngle > 0)) {\n    return;\n  }\n\n  minTurnAngle = minTurnAngle / 180 * Math.PI;\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  graphic_1.Point.sub(dir, pt0, pt1);\n  graphic_1.Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(dir2);\n  var minTurnAngleCos = Math.cos(minTurnAngle);\n\n  if (minTurnAngleCos < angleCos) {\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr);\n    tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI - minTurnAngle));\n    var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n\n    if (isNaN(t)) {\n      return;\n    }\n\n    if (t < 0) {\n      graphic_1.Point.copy(tmpProjPoint, pt1);\n    } else if (t > 1) {\n      graphic_1.Point.copy(tmpProjPoint, pt2);\n    }\n\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\n\nexports.limitTurnAngle = limitTurnAngle;\n\nfunction limitSurfaceAngle(linePoints, surfaceNormal, maxSurfaceAngle) {\n  if (!(maxSurfaceAngle <= 180 && maxSurfaceAngle > 0)) {\n    return;\n  }\n\n  maxSurfaceAngle = maxSurfaceAngle / 180 * Math.PI;\n  pt0.fromArray(linePoints[0]);\n  pt1.fromArray(linePoints[1]);\n  pt2.fromArray(linePoints[2]);\n  graphic_1.Point.sub(dir, pt1, pt0);\n  graphic_1.Point.sub(dir2, pt2, pt1);\n  var len1 = dir.len();\n  var len2 = dir2.len();\n\n  if (len1 < 1e-3 || len2 < 1e-3) {\n    return;\n  }\n\n  dir.scale(1 / len1);\n  dir2.scale(1 / len2);\n  var angleCos = dir.dot(surfaceNormal);\n  var maxSurfaceAngleCos = Math.cos(maxSurfaceAngle);\n\n  if (angleCos < maxSurfaceAngleCos) {\n    var d = projectPointToLine(pt1.x, pt1.y, pt2.x, pt2.y, pt0.x, pt0.y, tmpArr, false);\n    tmpProjPoint.fromArray(tmpArr);\n    var HALF_PI = Math.PI / 2;\n    var angle2 = Math.acos(dir2.dot(surfaceNormal));\n    var newAngle = HALF_PI + angle2 - maxSurfaceAngle;\n\n    if (newAngle >= HALF_PI) {\n      graphic_1.Point.copy(tmpProjPoint, pt2);\n    } else {\n      tmpProjPoint.scaleAndAdd(dir2, d / Math.tan(Math.PI / 2 - newAngle));\n      var t = pt2.x !== pt1.x ? (tmpProjPoint.x - pt1.x) / (pt2.x - pt1.x) : (tmpProjPoint.y - pt1.y) / (pt2.y - pt1.y);\n\n      if (isNaN(t)) {\n        return;\n      }\n\n      if (t < 0) {\n        graphic_1.Point.copy(tmpProjPoint, pt1);\n      } else if (t > 1) {\n        graphic_1.Point.copy(tmpProjPoint, pt2);\n      }\n    }\n\n    tmpProjPoint.toArray(linePoints[1]);\n  }\n}\n\nexports.limitSurfaceAngle = limitSurfaceAngle;\n\nfunction setLabelLineState(labelLine, ignore, stateName, stateModel) {\n  var isNormal = stateName === 'normal';\n  var stateObj = isNormal ? labelLine : labelLine.ensureState(stateName);\n  stateObj.ignore = ignore;\n  var smooth = stateModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.3;\n  }\n\n  stateObj.shape = stateObj.shape || {};\n\n  if (smooth > 0) {\n    stateObj.shape.smooth = smooth;\n  }\n\n  var styleObj = stateModel.getModel('lineStyle').getLineStyle();\n  isNormal ? labelLine.useStyle(styleObj) : stateObj.style = styleObj;\n}\n\nfunction buildLabelLinePath(path, shape) {\n  var smooth = shape.smooth;\n  var points = shape.points;\n\n  if (!points) {\n    return;\n  }\n\n  path.moveTo(points[0][0], points[0][1]);\n\n  if (smooth > 0 && points.length >= 3) {\n    var len1 = vector.dist(points[0], points[1]);\n    var len2 = vector.dist(points[1], points[2]);\n\n    if (!len1 || !len2) {\n      path.lineTo(points[1][0], points[1][1]);\n      path.lineTo(points[2][0], points[2][1]);\n      return;\n    }\n\n    var moveLen = Math.min(len1, len2) * smooth;\n    var midPoint0 = vector.lerp([], points[1], points[0], moveLen / len1);\n    var midPoint2 = vector.lerp([], points[1], points[2], moveLen / len2);\n    var midPoint1 = vector.lerp([], midPoint0, midPoint2, 0.5);\n    path.bezierCurveTo(midPoint0[0], midPoint0[1], midPoint0[0], midPoint0[1], midPoint1[0], midPoint1[1]);\n    path.bezierCurveTo(midPoint2[0], midPoint2[1], midPoint2[0], midPoint2[1], points[2][0], points[2][1]);\n  } else {\n    for (var i = 1; i < points.length; i++) {\n      path.lineTo(points[i][0], points[i][1]);\n    }\n  }\n}\n\nfunction setLabelLineStyle(targetEl, statesModels, defaultStyle) {\n  var labelLine = targetEl.getTextGuideLine();\n  var label = targetEl.getTextContent();\n\n  if (!label) {\n    if (labelLine) {\n      targetEl.removeTextGuideLine();\n    }\n\n    return;\n  }\n\n  var normalModel = statesModels.normal;\n  var showNormal = normalModel.get('show');\n  var labelIgnoreNormal = label.ignore;\n\n  for (var i = 0; i < states_1.DISPLAY_STATES.length; i++) {\n    var stateName = states_1.DISPLAY_STATES[i];\n    var stateModel = statesModels[stateName];\n    var isNormal = stateName === 'normal';\n\n    if (stateModel) {\n      var stateShow = stateModel.get('show');\n      var isLabelIgnored = isNormal ? labelIgnoreNormal : util_2.retrieve2(label.states[stateName] && label.states[stateName].ignore, labelIgnoreNormal);\n\n      if (isLabelIgnored || !util_2.retrieve2(stateShow, showNormal)) {\n        var stateObj = isNormal ? labelLine : labelLine && labelLine.states.normal;\n\n        if (stateObj) {\n          stateObj.ignore = true;\n        }\n\n        continue;\n      }\n\n      if (!labelLine) {\n        labelLine = new graphic_1.Polyline();\n        targetEl.setTextGuideLine(labelLine);\n\n        if (!isNormal && (labelIgnoreNormal || !showNormal)) {\n          setLabelLineState(labelLine, true, 'normal', statesModels.normal);\n        }\n\n        if (targetEl.stateProxy) {\n          labelLine.stateProxy = targetEl.stateProxy;\n        }\n      }\n\n      setLabelLineState(labelLine, false, stateName, stateModel);\n    }\n  }\n\n  if (labelLine) {\n    util_2.defaults(labelLine.style, defaultStyle);\n    labelLine.style.fill = null;\n    var showAbove = normalModel.get('showAbove');\n    var labelLineConfig = targetEl.textGuideLineConfig = targetEl.textGuideLineConfig || {};\n    labelLineConfig.showAbove = showAbove || false;\n    labelLine.buildPath = buildLabelLinePath;\n  }\n}\n\nexports.setLabelLineStyle = setLabelLineStyle;\n\nfunction getLabelLineStatesModels(itemModel, labelLineName) {\n  labelLineName = labelLineName || 'labelLine';\n  var statesModels = {\n    normal: itemModel.getModel(labelLineName)\n  };\n\n  for (var i = 0; i < states_1.SPECIAL_STATES.length; i++) {\n    var stateName = states_1.SPECIAL_STATES[i];\n    statesModels[stateName] = itemModel.getModel([stateName, labelLineName]);\n  }\n\n  return statesModels;\n}\n\nexports.getLabelLineStatesModels = getLabelLineStatesModels;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}