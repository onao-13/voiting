{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport interpolateValue from '../interpolate/value';\nimport interpolateNumber from '../interpolate/number';\nimport { bisectRight } from '../util/bisect';\nimport { ascending } from '../util/compare';\nvar constant = function (x) {\n  return function () {\n    return x;\n  };\n};\nvar identity = function (x) {\n  return x;\n};\nexport function clamper(domain) {\n  var _a;\n  var a = domain[0];\n  var b = domain[domain.length - 1];\n  if (a > b) {\n    _a = __read([b, a], 2), a = _a[0], b = _a[1];\n  }\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n}\n// Instead of clamping the values outside of domain to the range,\n// return NaNs to indicate invalid input.\nexport function filter(domain) {\n  var _a;\n  var a = domain[0];\n  var b = domain[domain.length - 1];\n  if (a > b) {\n    _a = __read([b, a], 2), a = _a[0], b = _a[1];\n  }\n  return function (x) {\n    return x >= a && x <= b ? x : NaN;\n  };\n}\nvar ContinuousScale = /** @class */function () {\n  function ContinuousScale() {\n    /**\n     * The output value of the scale for `undefined` or `NaN` input values.\n     */\n    this.unknown = undefined;\n    this.clamper = clamper;\n    this._clamp = identity;\n    this._domain = [0, 1];\n    this._range = [0, 1];\n    this.transform = identity; // transforms domain value\n    this.untransform = identity; // untransforms domain value\n    this._interpolate = interpolateValue;\n    this.rescale();\n  }\n  Object.defineProperty(ContinuousScale.prototype, \"clamp\", {\n    get: function () {\n      return this._clamp !== identity;\n    },\n    set: function (value) {\n      this._clamp = value ? this.clamper(this.domain) : identity;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ContinuousScale.prototype.setDomain = function (values) {\n    this._domain = values.map(function (v) {\n      return +v;\n    });\n    if (this._clamp !== identity) {\n      this._clamp = this.clamper(this.domain);\n    }\n    this.rescale();\n  };\n  ContinuousScale.prototype.getDomain = function () {\n    return this._domain.slice();\n  };\n  Object.defineProperty(ContinuousScale.prototype, \"domain\", {\n    get: function () {\n      return this.getDomain();\n    },\n    set: function (values) {\n      this.setDomain(values);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ContinuousScale.prototype, \"range\", {\n    get: function () {\n      return this._range.slice();\n    },\n    set: function (values) {\n      this._range = values.slice();\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ContinuousScale.prototype, \"interpolate\", {\n    get: function () {\n      return this._interpolate;\n    },\n    set: function (value) {\n      this._interpolate = value;\n      this.rescale();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ContinuousScale.prototype.rescale = function () {\n    if (Math.min(this.domain.length, this.range.length) > 2) {\n      this.piecewise = this.polymap;\n    } else {\n      this.piecewise = this.bimap;\n    }\n    this.output = undefined;\n    this.input = undefined;\n  };\n  /**\n   * Returns a function that converts `x` in `[a, b]` to `t` in `[0, 1]`. Non-clamping.\n   * @param a\n   * @param b\n   */\n  ContinuousScale.prototype.normalize = function (a, b) {\n    a = +a;\n    b -= a;\n    return b ? function (x) {\n      return (x - a) / b;\n    } : constant(isNaN(b) ? NaN : 0.5);\n  };\n  ContinuousScale.prototype.bimap = function (domain, range, interpolate) {\n    var x0 = domain[0];\n    var x1 = domain[1];\n    var y0 = range[0];\n    var y1 = range[1];\n    var xt;\n    var ty;\n    if (x1 < x0) {\n      xt = this.normalize(x1, x0);\n      ty = interpolate(y1, y0);\n    } else {\n      xt = this.normalize(x0, x1);\n      ty = interpolate(y0, y1);\n    }\n    return function (x) {\n      return ty(xt(x));\n    }; // domain value x --> t in [0, 1] --> range value y\n  };\n\n  ContinuousScale.prototype.polymap = function (domain, range, interpolate) {\n    var _this = this;\n    // number of segments in the polylinear scale\n    var n = Math.min(domain.length, range.length) - 1;\n    if (domain[n] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    // deinterpolators from domain segment value to t\n    var dt = Array.from({\n      length: n\n    }, function (_, i) {\n      return _this.normalize(domain[i], domain[i + 1]);\n    });\n    // reinterpolators from t to range segment value\n    var tr = Array.from({\n      length: n\n    }, function (_, i) {\n      return interpolate(range[i], range[i + 1]);\n    });\n    return function (x) {\n      var i = bisectRight(domain, x, ascending, 1, n) - 1; // Find the domain segment that `x` belongs to.\n      // This also tells us which deinterpolator/reinterpolator pair to use.\n      return tr[i](dt[i](x));\n    };\n  };\n  ContinuousScale.prototype.convert = function (x, clamper) {\n    x = +x;\n    if (isNaN(x)) {\n      return this.unknown;\n    }\n    if (!this.output) {\n      this.output = this.piecewise(this.domain.map(this.transform), this.range, this.interpolate);\n    }\n    var clamp = clamper ? clamper(this.domain) : this._clamp;\n    return this.output(this.transform(clamp(x)));\n  };\n  ContinuousScale.prototype.invert = function (y) {\n    if (!this.input) {\n      this.input = this.piecewise(this.range, this.domain.map(this.transform), interpolateNumber);\n    }\n    return this._clamp(this.untransform(this.input(y)));\n  };\n  return ContinuousScale;\n}();\nexport { ContinuousScale };","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","interpolateValue","interpolateNumber","bisectRight","ascending","constant","x","identity","clamper","domain","_a","a","b","length","Math","max","min","filter","NaN","ContinuousScale","unknown","undefined","_clamp","_domain","_range","transform","untransform","_interpolate","rescale","Object","defineProperty","prototype","get","set","enumerable","configurable","setDomain","values","map","v","getDomain","slice","range","piecewise","polymap","bimap","output","input","normalize","isNaN","interpolate","x0","x1","y0","y1","xt","ty","_this","reverse","dt","Array","from","_","tr","convert","clamp","invert","y"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/scale/continuousScale.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport interpolateValue from '../interpolate/value';\nimport interpolateNumber from '../interpolate/number';\nimport { bisectRight } from '../util/bisect';\nimport { ascending } from '../util/compare';\nvar constant = function (x) { return function () { return x; }; };\nvar identity = function (x) { return x; };\nexport function clamper(domain) {\n    var _a;\n    var a = domain[0];\n    var b = domain[domain.length - 1];\n    if (a > b) {\n        _a = __read([b, a], 2), a = _a[0], b = _a[1];\n    }\n    return function (x) { return Math.max(a, Math.min(b, x)); };\n}\n// Instead of clamping the values outside of domain to the range,\n// return NaNs to indicate invalid input.\nexport function filter(domain) {\n    var _a;\n    var a = domain[0];\n    var b = domain[domain.length - 1];\n    if (a > b) {\n        _a = __read([b, a], 2), a = _a[0], b = _a[1];\n    }\n    return function (x) { return (x >= a && x <= b ? x : NaN); };\n}\nvar ContinuousScale = /** @class */ (function () {\n    function ContinuousScale() {\n        /**\n         * The output value of the scale for `undefined` or `NaN` input values.\n         */\n        this.unknown = undefined;\n        this.clamper = clamper;\n        this._clamp = identity;\n        this._domain = [0, 1];\n        this._range = [0, 1];\n        this.transform = identity; // transforms domain value\n        this.untransform = identity; // untransforms domain value\n        this._interpolate = interpolateValue;\n        this.rescale();\n    }\n    Object.defineProperty(ContinuousScale.prototype, \"clamp\", {\n        get: function () {\n            return this._clamp !== identity;\n        },\n        set: function (value) {\n            this._clamp = value ? this.clamper(this.domain) : identity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContinuousScale.prototype.setDomain = function (values) {\n        this._domain = values.map(function (v) { return +v; });\n        if (this._clamp !== identity) {\n            this._clamp = this.clamper(this.domain);\n        }\n        this.rescale();\n    };\n    ContinuousScale.prototype.getDomain = function () {\n        return this._domain.slice();\n    };\n    Object.defineProperty(ContinuousScale.prototype, \"domain\", {\n        get: function () {\n            return this.getDomain();\n        },\n        set: function (values) {\n            this.setDomain(values);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousScale.prototype, \"range\", {\n        get: function () {\n            return this._range.slice();\n        },\n        set: function (values) {\n            this._range = values.slice();\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContinuousScale.prototype, \"interpolate\", {\n        get: function () {\n            return this._interpolate;\n        },\n        set: function (value) {\n            this._interpolate = value;\n            this.rescale();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContinuousScale.prototype.rescale = function () {\n        if (Math.min(this.domain.length, this.range.length) > 2) {\n            this.piecewise = this.polymap;\n        }\n        else {\n            this.piecewise = this.bimap;\n        }\n        this.output = undefined;\n        this.input = undefined;\n    };\n    /**\n     * Returns a function that converts `x` in `[a, b]` to `t` in `[0, 1]`. Non-clamping.\n     * @param a\n     * @param b\n     */\n    ContinuousScale.prototype.normalize = function (a, b) {\n        a = +a;\n        b -= a;\n        return b ? function (x) { return (x - a) / b; } : constant(isNaN(b) ? NaN : 0.5);\n    };\n    ContinuousScale.prototype.bimap = function (domain, range, interpolate) {\n        var x0 = domain[0];\n        var x1 = domain[1];\n        var y0 = range[0];\n        var y1 = range[1];\n        var xt;\n        var ty;\n        if (x1 < x0) {\n            xt = this.normalize(x1, x0);\n            ty = interpolate(y1, y0);\n        }\n        else {\n            xt = this.normalize(x0, x1);\n            ty = interpolate(y0, y1);\n        }\n        return function (x) { return ty(xt(x)); }; // domain value x --> t in [0, 1] --> range value y\n    };\n    ContinuousScale.prototype.polymap = function (domain, range, interpolate) {\n        var _this = this;\n        // number of segments in the polylinear scale\n        var n = Math.min(domain.length, range.length) - 1;\n        if (domain[n] < domain[0]) {\n            domain = domain.slice().reverse();\n            range = range.slice().reverse();\n        }\n        // deinterpolators from domain segment value to t\n        var dt = Array.from({ length: n }, function (_, i) { return _this.normalize(domain[i], domain[i + 1]); });\n        // reinterpolators from t to range segment value\n        var tr = Array.from({ length: n }, function (_, i) { return interpolate(range[i], range[i + 1]); });\n        return function (x) {\n            var i = bisectRight(domain, x, ascending, 1, n) - 1; // Find the domain segment that `x` belongs to.\n            // This also tells us which deinterpolator/reinterpolator pair to use.\n            return tr[i](dt[i](x));\n        };\n    };\n    ContinuousScale.prototype.convert = function (x, clamper) {\n        x = +x;\n        if (isNaN(x)) {\n            return this.unknown;\n        }\n        if (!this.output) {\n            this.output = this.piecewise(this.domain.map(this.transform), this.range, this.interpolate);\n        }\n        var clamp = clamper ? clamper(this.domain) : this._clamp;\n        return this.output(this.transform(clamp(x)));\n    };\n    ContinuousScale.prototype.invert = function (y) {\n        if (!this.input) {\n            this.input = this.piecewise(this.range, this.domain.map(this.transform), interpolateNumber);\n        }\n        return this._clamp(this.untransform(this.input(y)));\n    };\n    return ContinuousScale;\n}());\nexport { ContinuousScale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}