{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Shape } from './shape';\nimport { Path2D } from '../path2D';\nimport { RedrawType, SceneChangeDetection } from '../node';\nexport function ScenePathChangeDetection(opts) {\n  var _a = opts || {},\n    _b = _a.redraw,\n    redraw = _b === void 0 ? RedrawType.MAJOR : _b,\n    changeCb = _a.changeCb,\n    convertor = _a.convertor;\n  return SceneChangeDetection({\n    redraw: redraw,\n    type: 'path',\n    convertor: convertor,\n    changeCb: changeCb\n  });\n}\nvar Path = /** @class */function (_super) {\n  __extends(Path, _super);\n  function Path(renderOverride) {\n    var _this = _super.call(this) || this;\n    _this.renderOverride = renderOverride;\n    /**\n     * Declare a path to retain for later rendering and hit testing\n     * using custom Path2D class. Think of it as a TypeScript version\n     * of the native Path2D (with some differences) that works in all browsers.\n     */\n    _this.path = new Path2D();\n    /**\n     * The path only has to be updated when certain attributes change.\n     * For example, if transform attributes (such as `translationX`)\n     * are changed, we don't have to update the path. The `dirtyPath` flag\n     * is how we keep track if the path has to be updated or not.\n     */\n    _this._dirtyPath = true;\n    return _this;\n  }\n  Object.defineProperty(Path.prototype, \"dirtyPath\", {\n    get: function () {\n      return this._dirtyPath;\n    },\n    set: function (value) {\n      if (this._dirtyPath !== value) {\n        this._dirtyPath = value;\n        if (value) {\n          this.markDirty(this, RedrawType.MAJOR);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Path.prototype.checkPathDirty = function () {\n    var _a, _b;\n    if (this._dirtyPath) {\n      return;\n    }\n    this.dirtyPath = this.path.isDirty() || (_b = (_a = this.fillShadow) === null || _a === void 0 ? void 0 : _a.isDirty(), _b !== null && _b !== void 0 ? _b : false);\n  };\n  Path.prototype.isPointInPath = function (x, y) {\n    var point = this.transformPoint(x, y);\n    return this.path.closedPath && this.path.isPointInPath(point.x, point.y);\n  };\n  Path.prototype.isDirtyPath = function () {\n    // Override point for more expensive dirty checks.\n  };\n  Path.prototype.updatePath = function () {\n    // Override point for subclasses.\n  };\n  Path.prototype.render = function (renderCtx) {\n    var _a, _b;\n    var ctx = renderCtx.ctx,\n      forceRender = renderCtx.forceRender,\n      stats = renderCtx.stats;\n    if (this.dirty === RedrawType.NONE && !forceRender) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    if (this.dirtyPath || this.isDirtyPath()) {\n      this.updatePath();\n      this.dirtyPath = false;\n    }\n    if (this.clipPath) {\n      ctx.save();\n      if (this.clipMode === 'normal') {\n        // Bound the shape rendered to the clipping path.\n        this.clipPath.draw(ctx);\n        ctx.clip();\n      }\n      if (this.renderOverride) {\n        this.renderOverride(ctx);\n      } else {\n        this.path.draw(ctx);\n        this.fillStroke(ctx);\n      }\n      if (this.clipMode === 'punch-out') {\n        // Bound the shape rendered to outside the clipping path.\n        this.clipPath.draw(ctx);\n        ctx.clip();\n        // Fallback values, but practically these should never be used.\n        var _c = (_a = this.computeBBox(), _a !== null && _a !== void 0 ? _a : {}),\n          _d = _c.x,\n          x = _d === void 0 ? -10000 : _d,\n          _e = _c.y,\n          y = _e === void 0 ? -10000 : _e,\n          _f = _c.width,\n          width = _f === void 0 ? 20000 : _f,\n          _g = _c.height,\n          height = _g === void 0 ? 20000 : _g;\n        ctx.clearRect(x, y, width, height);\n      }\n      ctx.restore();\n    } else if (this.renderOverride) {\n      this.renderOverride(ctx);\n    } else {\n      this.path.draw(ctx);\n      this.fillStroke(ctx);\n    }\n    (_b = this.fillShadow) === null || _b === void 0 ? void 0 : _b.markClean();\n    _super.prototype.render.call(this, renderCtx);\n  };\n  Path.className = 'Path';\n  __decorate([ScenePathChangeDetection()], Path.prototype, \"clipPath\", void 0);\n  __decorate([ScenePathChangeDetection()], Path.prototype, \"clipMode\", void 0);\n  return Path;\n}(Shape);\nexport { Path };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Shape","Path2D","RedrawType","SceneChangeDetection","ScenePathChangeDetection","opts","_a","_b","redraw","MAJOR","changeCb","convertor","type","Path","_super","renderOverride","_this","call","path","_dirtyPath","get","set","value","markDirty","enumerable","configurable","checkPathDirty","dirtyPath","isDirty","fillShadow","isPointInPath","x","y","point","transformPoint","closedPath","isDirtyPath","updatePath","render","renderCtx","ctx","forceRender","stats","dirty","NONE","nodesSkipped","nodeCount","count","computeTransformMatrix","matrix","toContext","clipPath","save","clipMode","draw","clip","fillStroke","_c","computeBBox","_d","_e","_f","width","_g","height","clearRect","restore","markClean","className"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/scene/shape/path.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Shape } from './shape';\nimport { Path2D } from '../path2D';\nimport { RedrawType, SceneChangeDetection } from '../node';\nexport function ScenePathChangeDetection(opts) {\n    var _a = opts || {}, _b = _a.redraw, redraw = _b === void 0 ? RedrawType.MAJOR : _b, changeCb = _a.changeCb, convertor = _a.convertor;\n    return SceneChangeDetection({ redraw: redraw, type: 'path', convertor: convertor, changeCb: changeCb });\n}\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path(renderOverride) {\n        var _this = _super.call(this) || this;\n        _this.renderOverride = renderOverride;\n        /**\n         * Declare a path to retain for later rendering and hit testing\n         * using custom Path2D class. Think of it as a TypeScript version\n         * of the native Path2D (with some differences) that works in all browsers.\n         */\n        _this.path = new Path2D();\n        /**\n         * The path only has to be updated when certain attributes change.\n         * For example, if transform attributes (such as `translationX`)\n         * are changed, we don't have to update the path. The `dirtyPath` flag\n         * is how we keep track if the path has to be updated or not.\n         */\n        _this._dirtyPath = true;\n        return _this;\n    }\n    Object.defineProperty(Path.prototype, \"dirtyPath\", {\n        get: function () {\n            return this._dirtyPath;\n        },\n        set: function (value) {\n            if (this._dirtyPath !== value) {\n                this._dirtyPath = value;\n                if (value) {\n                    this.markDirty(this, RedrawType.MAJOR);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.checkPathDirty = function () {\n        var _a, _b;\n        if (this._dirtyPath) {\n            return;\n        }\n        this.dirtyPath = this.path.isDirty() || (_b = (_a = this.fillShadow) === null || _a === void 0 ? void 0 : _a.isDirty(), (_b !== null && _b !== void 0 ? _b : false));\n    };\n    Path.prototype.isPointInPath = function (x, y) {\n        var point = this.transformPoint(x, y);\n        return this.path.closedPath && this.path.isPointInPath(point.x, point.y);\n    };\n    Path.prototype.isDirtyPath = function () {\n        // Override point for more expensive dirty checks.\n    };\n    Path.prototype.updatePath = function () {\n        // Override point for subclasses.\n    };\n    Path.prototype.render = function (renderCtx) {\n        var _a, _b;\n        var ctx = renderCtx.ctx, forceRender = renderCtx.forceRender, stats = renderCtx.stats;\n        if (this.dirty === RedrawType.NONE && !forceRender) {\n            if (stats)\n                stats.nodesSkipped += this.nodeCount.count;\n            return;\n        }\n        this.computeTransformMatrix();\n        this.matrix.toContext(ctx);\n        if (this.dirtyPath || this.isDirtyPath()) {\n            this.updatePath();\n            this.dirtyPath = false;\n        }\n        if (this.clipPath) {\n            ctx.save();\n            if (this.clipMode === 'normal') {\n                // Bound the shape rendered to the clipping path.\n                this.clipPath.draw(ctx);\n                ctx.clip();\n            }\n            if (this.renderOverride) {\n                this.renderOverride(ctx);\n            }\n            else {\n                this.path.draw(ctx);\n                this.fillStroke(ctx);\n            }\n            if (this.clipMode === 'punch-out') {\n                // Bound the shape rendered to outside the clipping path.\n                this.clipPath.draw(ctx);\n                ctx.clip();\n                // Fallback values, but practically these should never be used.\n                var _c = (_a = this.computeBBox(), (_a !== null && _a !== void 0 ? _a : {})), _d = _c.x, x = _d === void 0 ? -10000 : _d, _e = _c.y, y = _e === void 0 ? -10000 : _e, _f = _c.width, width = _f === void 0 ? 20000 : _f, _g = _c.height, height = _g === void 0 ? 20000 : _g;\n                ctx.clearRect(x, y, width, height);\n            }\n            ctx.restore();\n        }\n        else if (this.renderOverride) {\n            this.renderOverride(ctx);\n        }\n        else {\n            this.path.draw(ctx);\n            this.fillStroke(ctx);\n        }\n        (_b = this.fillShadow) === null || _b === void 0 ? void 0 : _b.markClean();\n        _super.prototype.render.call(this, renderCtx);\n    };\n    Path.className = 'Path';\n    __decorate([\n        ScenePathChangeDetection()\n    ], Path.prototype, \"clipPath\", void 0);\n    __decorate([\n        ScenePathChangeDetection()\n    ], Path.prototype, \"clipMode\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}