{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar util_1 = require(\"zrender/lib/core/util\");\nvar Source_1 = require(\"../Source\");\nvar types_1 = require(\"../../util/types\");\nvar sourceHelper_1 = require(\"./sourceHelper\");\nvar transform_1 = require(\"./transform\");\nvar SourceManager = function () {\n  function SourceManager(sourceHost) {\n    this._sourceList = [];\n    this._upstreamSignList = [];\n    this._versionSignBase = 0;\n    this._sourceHost = sourceHost;\n  }\n  SourceManager.prototype.dirty = function () {\n    this._setLocalSource([], []);\n  };\n  SourceManager.prototype._setLocalSource = function (sourceList, upstreamSignList) {\n    this._sourceList = sourceList;\n    this._upstreamSignList = upstreamSignList;\n    this._versionSignBase++;\n    if (this._versionSignBase > 9e10) {\n      this._versionSignBase = 0;\n    }\n  };\n  SourceManager.prototype._getVersionSign = function () {\n    return this._sourceHost.uid + '_' + this._versionSignBase;\n  };\n  SourceManager.prototype.prepareSource = function () {\n    if (this._isDirty()) {\n      this._createSource();\n    }\n  };\n  SourceManager.prototype._createSource = function () {\n    this._setLocalSource([], []);\n    var sourceHost = this._sourceHost;\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n    var hasUpstream = !!upSourceMgrList.length;\n    var resultSourceList;\n    var upstreamSignList;\n    if (isSeries(sourceHost)) {\n      var seriesModel = sourceHost;\n      var data = void 0;\n      var sourceFormat = void 0;\n      var upSource = void 0;\n      if (hasUpstream) {\n        var upSourceMgr = upSourceMgrList[0];\n        upSourceMgr.prepareSource();\n        upSource = upSourceMgr.getSource();\n        data = upSource.data;\n        sourceFormat = upSource.sourceFormat;\n        upstreamSignList = [upSourceMgr._getVersionSign()];\n      } else {\n        data = seriesModel.get('data', true);\n        sourceFormat = util_1.isTypedArray(data) ? types_1.SOURCE_FORMAT_TYPED_ARRAY : types_1.SOURCE_FORMAT_ORIGINAL;\n        upstreamSignList = [];\n      }\n      var thisMetaRawOption = sourceHelper_1.inheritSourceMetaRawOption(upSource, this._getSourceMetaRawOption());\n      resultSourceList = [Source_1.createSource(data, thisMetaRawOption, sourceFormat, seriesModel.get('encode', true))];\n    } else {\n      var datasetModel = sourceHost;\n      if (hasUpstream) {\n        var result = this._applyTransform(upSourceMgrList);\n        resultSourceList = result.sourceList;\n        upstreamSignList = result.upstreamSignList;\n      } else {\n        var sourceData = datasetModel.get('source', true);\n        resultSourceList = [Source_1.createSource(sourceData, this._getSourceMetaRawOption(), null, null)];\n        upstreamSignList = [];\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(resultSourceList && upstreamSignList);\n    }\n    this._setLocalSource(resultSourceList, upstreamSignList);\n  };\n  SourceManager.prototype._applyTransform = function (upMgrList) {\n    var datasetModel = this._sourceHost;\n    var transformOption = datasetModel.get('transform', true);\n    var fromTransformResult = datasetModel.get('fromTransformResult', true);\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(fromTransformResult != null || transformOption != null);\n    }\n    if (fromTransformResult != null) {\n      var errMsg = '';\n      if (upMgrList.length !== 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'When using `fromTransformResult`, there should be only one upstream dataset';\n        }\n        doThrow(errMsg);\n      }\n    }\n    var sourceList;\n    var upSourceList = [];\n    var upstreamSignList = [];\n    util_1.each(upMgrList, function (upMgr) {\n      upMgr.prepareSource();\n      var upSource = upMgr.getSource(fromTransformResult || 0);\n      var errMsg = '';\n      if (fromTransformResult != null && !upSource) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'Can not retrieve result by `fromTransformResult`: ' + fromTransformResult;\n        }\n        doThrow(errMsg);\n      }\n      upSourceList.push(upSource);\n      upstreamSignList.push(upMgr._getVersionSign());\n    });\n    if (transformOption) {\n      sourceList = transform_1.applyDataTransform(transformOption, upSourceList, {\n        datasetIndex: datasetModel.componentIndex\n      });\n    } else if (fromTransformResult != null) {\n      sourceList = [Source_1.cloneSourceShallow(upSourceList[0])];\n    }\n    return {\n      sourceList: sourceList,\n      upstreamSignList: upstreamSignList\n    };\n  };\n  SourceManager.prototype._isDirty = function () {\n    var sourceList = this._sourceList;\n    if (!sourceList.length) {\n      return true;\n    }\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n    for (var i = 0; i < upSourceMgrList.length; i++) {\n      var upSrcMgr = upSourceMgrList[i];\n      if (upSrcMgr._isDirty() || this._upstreamSignList[i] !== upSrcMgr._getVersionSign()) {\n        return true;\n      }\n    }\n  };\n  SourceManager.prototype.getSource = function (sourceIndex) {\n    return this._sourceList[sourceIndex || 0];\n  };\n  SourceManager.prototype._getUpstreamSourceManagers = function () {\n    var sourceHost = this._sourceHost;\n    if (isSeries(sourceHost)) {\n      var datasetModel = sourceHelper_1.querySeriesUpstreamDatasetModel(sourceHost);\n      return !datasetModel ? [] : [datasetModel.getSourceManager()];\n    } else {\n      return util_1.map(sourceHelper_1.queryDatasetUpstreamDatasetModels(sourceHost), function (datasetModel) {\n        return datasetModel.getSourceManager();\n      });\n    }\n  };\n  SourceManager.prototype._getSourceMetaRawOption = function () {\n    var sourceHost = this._sourceHost;\n    var seriesLayoutBy;\n    var sourceHeader;\n    var dimensions;\n    if (isSeries(sourceHost)) {\n      seriesLayoutBy = sourceHost.get('seriesLayoutBy', true);\n      sourceHeader = sourceHost.get('sourceHeader', true);\n      dimensions = sourceHost.get('dimensions', true);\n    } else if (!this._getUpstreamSourceManagers().length) {\n      var model = sourceHost;\n      seriesLayoutBy = model.get('seriesLayoutBy', true);\n      sourceHeader = model.get('sourceHeader', true);\n      dimensions = model.get('dimensions', true);\n    }\n    return {\n      seriesLayoutBy: seriesLayoutBy,\n      sourceHeader: sourceHeader,\n      dimensions: dimensions\n    };\n  };\n  return SourceManager;\n}();\nexports.SourceManager = SourceManager;\nfunction disableTransformOptionMerge(datasetModel) {\n  var transformOption = datasetModel.option.transform;\n  transformOption && util_1.setAsPrimitive(datasetModel.option.transform);\n}\nexports.disableTransformOptionMerge = disableTransformOptionMerge;\nfunction isSeries(sourceHost) {\n  return sourceHost.mainType === 'series';\n}\nfunction doThrow(errMsg) {\n  throw new Error(errMsg);\n}","map":{"version":3,"names":["exports","__esModule","util_1","require","Source_1","types_1","sourceHelper_1","transform_1","SourceManager","sourceHost","_sourceList","_upstreamSignList","_versionSignBase","_sourceHost","prototype","dirty","_setLocalSource","sourceList","upstreamSignList","_getVersionSign","uid","prepareSource","_isDirty","_createSource","upSourceMgrList","_getUpstreamSourceManagers","hasUpstream","length","resultSourceList","isSeries","seriesModel","data","sourceFormat","upSource","upSourceMgr","getSource","get","isTypedArray","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ORIGINAL","thisMetaRawOption","inheritSourceMetaRawOption","_getSourceMetaRawOption","createSource","datasetModel","result","_applyTransform","sourceData","process","env","NODE_ENV","assert","upMgrList","transformOption","fromTransformResult","errMsg","doThrow","upSourceList","each","upMgr","push","applyDataTransform","datasetIndex","componentIndex","cloneSourceShallow","i","upSrcMgr","sourceIndex","querySeriesUpstreamDatasetModel","getSourceManager","map","queryDatasetUpstreamDatasetModels","seriesLayoutBy","sourceHeader","dimensions","model","disableTransformOptionMerge","option","transform","setAsPrimitive","mainType","Error"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/data/helper/sourceManager.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar Source_1 = require(\"../Source\");\n\nvar types_1 = require(\"../../util/types\");\n\nvar sourceHelper_1 = require(\"./sourceHelper\");\n\nvar transform_1 = require(\"./transform\");\n\nvar SourceManager = function () {\n  function SourceManager(sourceHost) {\n    this._sourceList = [];\n    this._upstreamSignList = [];\n    this._versionSignBase = 0;\n    this._sourceHost = sourceHost;\n  }\n\n  SourceManager.prototype.dirty = function () {\n    this._setLocalSource([], []);\n  };\n\n  SourceManager.prototype._setLocalSource = function (sourceList, upstreamSignList) {\n    this._sourceList = sourceList;\n    this._upstreamSignList = upstreamSignList;\n    this._versionSignBase++;\n\n    if (this._versionSignBase > 9e10) {\n      this._versionSignBase = 0;\n    }\n  };\n\n  SourceManager.prototype._getVersionSign = function () {\n    return this._sourceHost.uid + '_' + this._versionSignBase;\n  };\n\n  SourceManager.prototype.prepareSource = function () {\n    if (this._isDirty()) {\n      this._createSource();\n    }\n  };\n\n  SourceManager.prototype._createSource = function () {\n    this._setLocalSource([], []);\n\n    var sourceHost = this._sourceHost;\n\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n\n    var hasUpstream = !!upSourceMgrList.length;\n    var resultSourceList;\n    var upstreamSignList;\n\n    if (isSeries(sourceHost)) {\n      var seriesModel = sourceHost;\n      var data = void 0;\n      var sourceFormat = void 0;\n      var upSource = void 0;\n\n      if (hasUpstream) {\n        var upSourceMgr = upSourceMgrList[0];\n        upSourceMgr.prepareSource();\n        upSource = upSourceMgr.getSource();\n        data = upSource.data;\n        sourceFormat = upSource.sourceFormat;\n        upstreamSignList = [upSourceMgr._getVersionSign()];\n      } else {\n        data = seriesModel.get('data', true);\n        sourceFormat = util_1.isTypedArray(data) ? types_1.SOURCE_FORMAT_TYPED_ARRAY : types_1.SOURCE_FORMAT_ORIGINAL;\n        upstreamSignList = [];\n      }\n\n      var thisMetaRawOption = sourceHelper_1.inheritSourceMetaRawOption(upSource, this._getSourceMetaRawOption());\n      resultSourceList = [Source_1.createSource(data, thisMetaRawOption, sourceFormat, seriesModel.get('encode', true))];\n    } else {\n      var datasetModel = sourceHost;\n\n      if (hasUpstream) {\n        var result = this._applyTransform(upSourceMgrList);\n\n        resultSourceList = result.sourceList;\n        upstreamSignList = result.upstreamSignList;\n      } else {\n        var sourceData = datasetModel.get('source', true);\n        resultSourceList = [Source_1.createSource(sourceData, this._getSourceMetaRawOption(), null, null)];\n        upstreamSignList = [];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(resultSourceList && upstreamSignList);\n    }\n\n    this._setLocalSource(resultSourceList, upstreamSignList);\n  };\n\n  SourceManager.prototype._applyTransform = function (upMgrList) {\n    var datasetModel = this._sourceHost;\n    var transformOption = datasetModel.get('transform', true);\n    var fromTransformResult = datasetModel.get('fromTransformResult', true);\n\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(fromTransformResult != null || transformOption != null);\n    }\n\n    if (fromTransformResult != null) {\n      var errMsg = '';\n\n      if (upMgrList.length !== 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'When using `fromTransformResult`, there should be only one upstream dataset';\n        }\n\n        doThrow(errMsg);\n      }\n    }\n\n    var sourceList;\n    var upSourceList = [];\n    var upstreamSignList = [];\n    util_1.each(upMgrList, function (upMgr) {\n      upMgr.prepareSource();\n      var upSource = upMgr.getSource(fromTransformResult || 0);\n      var errMsg = '';\n\n      if (fromTransformResult != null && !upSource) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'Can not retrieve result by `fromTransformResult`: ' + fromTransformResult;\n        }\n\n        doThrow(errMsg);\n      }\n\n      upSourceList.push(upSource);\n      upstreamSignList.push(upMgr._getVersionSign());\n    });\n\n    if (transformOption) {\n      sourceList = transform_1.applyDataTransform(transformOption, upSourceList, {\n        datasetIndex: datasetModel.componentIndex\n      });\n    } else if (fromTransformResult != null) {\n      sourceList = [Source_1.cloneSourceShallow(upSourceList[0])];\n    }\n\n    return {\n      sourceList: sourceList,\n      upstreamSignList: upstreamSignList\n    };\n  };\n\n  SourceManager.prototype._isDirty = function () {\n    var sourceList = this._sourceList;\n\n    if (!sourceList.length) {\n      return true;\n    }\n\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n\n    for (var i = 0; i < upSourceMgrList.length; i++) {\n      var upSrcMgr = upSourceMgrList[i];\n\n      if (upSrcMgr._isDirty() || this._upstreamSignList[i] !== upSrcMgr._getVersionSign()) {\n        return true;\n      }\n    }\n  };\n\n  SourceManager.prototype.getSource = function (sourceIndex) {\n    return this._sourceList[sourceIndex || 0];\n  };\n\n  SourceManager.prototype._getUpstreamSourceManagers = function () {\n    var sourceHost = this._sourceHost;\n\n    if (isSeries(sourceHost)) {\n      var datasetModel = sourceHelper_1.querySeriesUpstreamDatasetModel(sourceHost);\n      return !datasetModel ? [] : [datasetModel.getSourceManager()];\n    } else {\n      return util_1.map(sourceHelper_1.queryDatasetUpstreamDatasetModels(sourceHost), function (datasetModel) {\n        return datasetModel.getSourceManager();\n      });\n    }\n  };\n\n  SourceManager.prototype._getSourceMetaRawOption = function () {\n    var sourceHost = this._sourceHost;\n    var seriesLayoutBy;\n    var sourceHeader;\n    var dimensions;\n\n    if (isSeries(sourceHost)) {\n      seriesLayoutBy = sourceHost.get('seriesLayoutBy', true);\n      sourceHeader = sourceHost.get('sourceHeader', true);\n      dimensions = sourceHost.get('dimensions', true);\n    } else if (!this._getUpstreamSourceManagers().length) {\n      var model = sourceHost;\n      seriesLayoutBy = model.get('seriesLayoutBy', true);\n      sourceHeader = model.get('sourceHeader', true);\n      dimensions = model.get('dimensions', true);\n    }\n\n    return {\n      seriesLayoutBy: seriesLayoutBy,\n      sourceHeader: sourceHeader,\n      dimensions: dimensions\n    };\n  };\n\n  return SourceManager;\n}();\n\nexports.SourceManager = SourceManager;\n\nfunction disableTransformOptionMerge(datasetModel) {\n  var transformOption = datasetModel.option.transform;\n  transformOption && util_1.setAsPrimitive(datasetModel.option.transform);\n}\n\nexports.disableTransformOptionMerge = disableTransformOptionMerge;\n\nfunction isSeries(sourceHost) {\n  return sourceHost.mainType === 'series';\n}\n\nfunction doThrow(errMsg) {\n  throw new Error(errMsg);\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,YAAY;;AAAC;AAEbA,OAAO,CAACC,UAAU,GAAG,IAAI;AAEzB,IAAIC,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE7C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAIE,OAAO,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAIG,cAAc,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAE9C,IAAII,WAAW,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAExC,IAAIK,aAAa,GAAG,YAAY;EAC9B,SAASA,aAAa,CAACC,UAAU,EAAE;IACjC,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,WAAW,GAAGJ,UAAU;EAC/B;EAEAD,aAAa,CAACM,SAAS,CAACC,KAAK,GAAG,YAAY;IAC1C,IAAI,CAACC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC;EAC9B,CAAC;EAEDR,aAAa,CAACM,SAAS,CAACE,eAAe,GAAG,UAAUC,UAAU,EAAEC,gBAAgB,EAAE;IAChF,IAAI,CAACR,WAAW,GAAGO,UAAU;IAC7B,IAAI,CAACN,iBAAiB,GAAGO,gBAAgB;IACzC,IAAI,CAACN,gBAAgB,EAAE;IAEvB,IAAI,IAAI,CAACA,gBAAgB,GAAG,IAAI,EAAE;MAChC,IAAI,CAACA,gBAAgB,GAAG,CAAC;IAC3B;EACF,CAAC;EAEDJ,aAAa,CAACM,SAAS,CAACK,eAAe,GAAG,YAAY;IACpD,OAAO,IAAI,CAACN,WAAW,CAACO,GAAG,GAAG,GAAG,GAAG,IAAI,CAACR,gBAAgB;EAC3D,CAAC;EAEDJ,aAAa,CAACM,SAAS,CAACO,aAAa,GAAG,YAAY;IAClD,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAE;MACnB,IAAI,CAACC,aAAa,EAAE;IACtB;EACF,CAAC;EAEDf,aAAa,CAACM,SAAS,CAACS,aAAa,GAAG,YAAY;IAClD,IAAI,CAACP,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC;IAE5B,IAAIP,UAAU,GAAG,IAAI,CAACI,WAAW;IAEjC,IAAIW,eAAe,GAAG,IAAI,CAACC,0BAA0B,EAAE;IAEvD,IAAIC,WAAW,GAAG,CAAC,CAACF,eAAe,CAACG,MAAM;IAC1C,IAAIC,gBAAgB;IACpB,IAAIV,gBAAgB;IAEpB,IAAIW,QAAQ,CAACpB,UAAU,CAAC,EAAE;MACxB,IAAIqB,WAAW,GAAGrB,UAAU;MAC5B,IAAIsB,IAAI,GAAG,KAAK,CAAC;MACjB,IAAIC,YAAY,GAAG,KAAK,CAAC;MACzB,IAAIC,QAAQ,GAAG,KAAK,CAAC;MAErB,IAAIP,WAAW,EAAE;QACf,IAAIQ,WAAW,GAAGV,eAAe,CAAC,CAAC,CAAC;QACpCU,WAAW,CAACb,aAAa,EAAE;QAC3BY,QAAQ,GAAGC,WAAW,CAACC,SAAS,EAAE;QAClCJ,IAAI,GAAGE,QAAQ,CAACF,IAAI;QACpBC,YAAY,GAAGC,QAAQ,CAACD,YAAY;QACpCd,gBAAgB,GAAG,CAACgB,WAAW,CAACf,eAAe,EAAE,CAAC;MACpD,CAAC,MAAM;QACLY,IAAI,GAAGD,WAAW,CAACM,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;QACpCJ,YAAY,GAAG9B,MAAM,CAACmC,YAAY,CAACN,IAAI,CAAC,GAAG1B,OAAO,CAACiC,yBAAyB,GAAGjC,OAAO,CAACkC,sBAAsB;QAC7GrB,gBAAgB,GAAG,EAAE;MACvB;MAEA,IAAIsB,iBAAiB,GAAGlC,cAAc,CAACmC,0BAA0B,CAACR,QAAQ,EAAE,IAAI,CAACS,uBAAuB,EAAE,CAAC;MAC3Gd,gBAAgB,GAAG,CAACxB,QAAQ,CAACuC,YAAY,CAACZ,IAAI,EAAES,iBAAiB,EAAER,YAAY,EAAEF,WAAW,CAACM,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IACpH,CAAC,MAAM;MACL,IAAIQ,YAAY,GAAGnC,UAAU;MAE7B,IAAIiB,WAAW,EAAE;QACf,IAAImB,MAAM,GAAG,IAAI,CAACC,eAAe,CAACtB,eAAe,CAAC;QAElDI,gBAAgB,GAAGiB,MAAM,CAAC5B,UAAU;QACpCC,gBAAgB,GAAG2B,MAAM,CAAC3B,gBAAgB;MAC5C,CAAC,MAAM;QACL,IAAI6B,UAAU,GAAGH,YAAY,CAACR,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;QACjDR,gBAAgB,GAAG,CAACxB,QAAQ,CAACuC,YAAY,CAACI,UAAU,EAAE,IAAI,CAACL,uBAAuB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAClGxB,gBAAgB,GAAG,EAAE;MACvB;IACF;IAEA,IAAI8B,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzChD,MAAM,CAACiD,MAAM,CAACvB,gBAAgB,IAAIV,gBAAgB,CAAC;IACrD;IAEA,IAAI,CAACF,eAAe,CAACY,gBAAgB,EAAEV,gBAAgB,CAAC;EAC1D,CAAC;EAEDV,aAAa,CAACM,SAAS,CAACgC,eAAe,GAAG,UAAUM,SAAS,EAAE;IAC7D,IAAIR,YAAY,GAAG,IAAI,CAAC/B,WAAW;IACnC,IAAIwC,eAAe,GAAGT,YAAY,CAACR,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;IACzD,IAAIkB,mBAAmB,GAAGV,YAAY,CAACR,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC;IAEvE,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzChD,MAAM,CAACiD,MAAM,CAACG,mBAAmB,IAAI,IAAI,IAAID,eAAe,IAAI,IAAI,CAAC;IACvE;IAEA,IAAIC,mBAAmB,IAAI,IAAI,EAAE;MAC/B,IAAIC,MAAM,GAAG,EAAE;MAEf,IAAIH,SAAS,CAACzB,MAAM,KAAK,CAAC,EAAE;QAC1B,IAAIqB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzCK,MAAM,GAAG,6EAA6E;QACxF;QAEAC,OAAO,CAACD,MAAM,CAAC;MACjB;IACF;IAEA,IAAItC,UAAU;IACd,IAAIwC,YAAY,GAAG,EAAE;IACrB,IAAIvC,gBAAgB,GAAG,EAAE;IACzBhB,MAAM,CAACwD,IAAI,CAACN,SAAS,EAAE,UAAUO,KAAK,EAAE;MACtCA,KAAK,CAACtC,aAAa,EAAE;MACrB,IAAIY,QAAQ,GAAG0B,KAAK,CAACxB,SAAS,CAACmB,mBAAmB,IAAI,CAAC,CAAC;MACxD,IAAIC,MAAM,GAAG,EAAE;MAEf,IAAID,mBAAmB,IAAI,IAAI,IAAI,CAACrB,QAAQ,EAAE;QAC5C,IAAIe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzCK,MAAM,GAAG,oDAAoD,GAAGD,mBAAmB;QACrF;QAEAE,OAAO,CAACD,MAAM,CAAC;MACjB;MAEAE,YAAY,CAACG,IAAI,CAAC3B,QAAQ,CAAC;MAC3Bf,gBAAgB,CAAC0C,IAAI,CAACD,KAAK,CAACxC,eAAe,EAAE,CAAC;IAChD,CAAC,CAAC;IAEF,IAAIkC,eAAe,EAAE;MACnBpC,UAAU,GAAGV,WAAW,CAACsD,kBAAkB,CAACR,eAAe,EAAEI,YAAY,EAAE;QACzEK,YAAY,EAAElB,YAAY,CAACmB;MAC7B,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIT,mBAAmB,IAAI,IAAI,EAAE;MACtCrC,UAAU,GAAG,CAACb,QAAQ,CAAC4D,kBAAkB,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D;IAEA,OAAO;MACLxC,UAAU,EAAEA,UAAU;MACtBC,gBAAgB,EAAEA;IACpB,CAAC;EACH,CAAC;EAEDV,aAAa,CAACM,SAAS,CAACQ,QAAQ,GAAG,YAAY;IAC7C,IAAIL,UAAU,GAAG,IAAI,CAACP,WAAW;IAEjC,IAAI,CAACO,UAAU,CAACU,MAAM,EAAE;MACtB,OAAO,IAAI;IACb;IAEA,IAAIH,eAAe,GAAG,IAAI,CAACC,0BAA0B,EAAE;IAEvD,KAAK,IAAIwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzC,eAAe,CAACG,MAAM,EAAEsC,CAAC,EAAE,EAAE;MAC/C,IAAIC,QAAQ,GAAG1C,eAAe,CAACyC,CAAC,CAAC;MAEjC,IAAIC,QAAQ,CAAC5C,QAAQ,EAAE,IAAI,IAAI,CAACX,iBAAiB,CAACsD,CAAC,CAAC,KAAKC,QAAQ,CAAC/C,eAAe,EAAE,EAAE;QACnF,OAAO,IAAI;MACb;IACF;EACF,CAAC;EAEDX,aAAa,CAACM,SAAS,CAACqB,SAAS,GAAG,UAAUgC,WAAW,EAAE;IACzD,OAAO,IAAI,CAACzD,WAAW,CAACyD,WAAW,IAAI,CAAC,CAAC;EAC3C,CAAC;EAED3D,aAAa,CAACM,SAAS,CAACW,0BAA0B,GAAG,YAAY;IAC/D,IAAIhB,UAAU,GAAG,IAAI,CAACI,WAAW;IAEjC,IAAIgB,QAAQ,CAACpB,UAAU,CAAC,EAAE;MACxB,IAAImC,YAAY,GAAGtC,cAAc,CAAC8D,+BAA+B,CAAC3D,UAAU,CAAC;MAC7E,OAAO,CAACmC,YAAY,GAAG,EAAE,GAAG,CAACA,YAAY,CAACyB,gBAAgB,EAAE,CAAC;IAC/D,CAAC,MAAM;MACL,OAAOnE,MAAM,CAACoE,GAAG,CAAChE,cAAc,CAACiE,iCAAiC,CAAC9D,UAAU,CAAC,EAAE,UAAUmC,YAAY,EAAE;QACtG,OAAOA,YAAY,CAACyB,gBAAgB,EAAE;MACxC,CAAC,CAAC;IACJ;EACF,CAAC;EAED7D,aAAa,CAACM,SAAS,CAAC4B,uBAAuB,GAAG,YAAY;IAC5D,IAAIjC,UAAU,GAAG,IAAI,CAACI,WAAW;IACjC,IAAI2D,cAAc;IAClB,IAAIC,YAAY;IAChB,IAAIC,UAAU;IAEd,IAAI7C,QAAQ,CAACpB,UAAU,CAAC,EAAE;MACxB+D,cAAc,GAAG/D,UAAU,CAAC2B,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC;MACvDqC,YAAY,GAAGhE,UAAU,CAAC2B,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC;MACnDsC,UAAU,GAAGjE,UAAU,CAAC2B,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC;IACjD,CAAC,MAAM,IAAI,CAAC,IAAI,CAACX,0BAA0B,EAAE,CAACE,MAAM,EAAE;MACpD,IAAIgD,KAAK,GAAGlE,UAAU;MACtB+D,cAAc,GAAGG,KAAK,CAACvC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC;MAClDqC,YAAY,GAAGE,KAAK,CAACvC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC;MAC9CsC,UAAU,GAAGC,KAAK,CAACvC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC;IAC5C;IAEA,OAAO;MACLoC,cAAc,EAAEA,cAAc;MAC9BC,YAAY,EAAEA,YAAY;MAC1BC,UAAU,EAAEA;IACd,CAAC;EACH,CAAC;EAED,OAAOlE,aAAa;AACtB,CAAC,EAAE;AAEHR,OAAO,CAACQ,aAAa,GAAGA,aAAa;AAErC,SAASoE,2BAA2B,CAAChC,YAAY,EAAE;EACjD,IAAIS,eAAe,GAAGT,YAAY,CAACiC,MAAM,CAACC,SAAS;EACnDzB,eAAe,IAAInD,MAAM,CAAC6E,cAAc,CAACnC,YAAY,CAACiC,MAAM,CAACC,SAAS,CAAC;AACzE;AAEA9E,OAAO,CAAC4E,2BAA2B,GAAGA,2BAA2B;AAEjE,SAAS/C,QAAQ,CAACpB,UAAU,EAAE;EAC5B,OAAOA,UAAU,CAACuE,QAAQ,KAAK,QAAQ;AACzC;AAEA,SAASxB,OAAO,CAACD,MAAM,EAAE;EACvB,MAAM,IAAI0B,KAAK,CAAC1B,MAAM,CAAC;AACzB"},"metadata":{},"sourceType":"script","externalDependencies":[]}