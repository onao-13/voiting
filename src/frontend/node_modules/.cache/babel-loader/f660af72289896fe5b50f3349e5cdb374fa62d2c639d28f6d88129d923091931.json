{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { Node } from './node';\nvar EnterNode = /** @class */function () {\n  function EnterNode(parent, datum) {\n    this.next = null;\n    this.scene = parent.scene;\n    this.parent = parent;\n    this.datum = datum;\n  }\n  EnterNode.prototype.appendChild = function (node) {\n    // This doesn't work without the `strict: true` in the `tsconfig.json`,\n    // so we must have two `if` checks below, instead of this single one.\n    // if (this.next && !Node.isNode(this.next)) {\n    //     throw new Error(`${this.next} is not a Node.`);\n    // }\n    if (this.next === null) {\n      return this.parent.insertBefore(node, null);\n    }\n    if (!Node.isNode(this.next)) {\n      throw new Error(this.next + \" is not a Node.\");\n    }\n    return this.parent.insertBefore(node, this.next);\n  };\n  EnterNode.prototype.insertBefore = function (node, nextNode) {\n    return this.parent.insertBefore(node, nextNode);\n  };\n  return EnterNode;\n}();\nexport { EnterNode };\n/**\n * G - type of the selected node(s).\n * GDatum - type of the datum of the selected node(s).\n * P - type of the parent node(s).\n * PDatum - type of the datum of the parent node(s).\n */\nvar Selection = /** @class */function () {\n  function Selection(groups, parents) {\n    this.groups = groups;\n    this.parents = parents;\n  }\n  Selection.select = function (node) {\n    return new Selection([[typeof node === 'function' ? node() : node]], [undefined]);\n  };\n  Selection.selectAll = function (nodes) {\n    return new Selection([nodes == null ? [] : nodes], [undefined]);\n  };\n  /**\n   * Creates new nodes, appends them to the nodes of this selection and returns them\n   * as a new selection. The created nodes inherit the datums and the parents of the nodes\n   * they replace.\n   * @param Class The constructor function to use to create the new nodes.\n   */\n  Selection.prototype.append = function (Class) {\n    return this.select(function (node) {\n      return node.appendChild(new Class());\n    });\n  };\n  /**\n   * Runs the given selector that returns a single node for every node in each group.\n   * The original nodes are then replaced by the nodes returned by the selector\n   * and returned as a new selection.\n   * The selected nodes inherit the datums and the parents of the original nodes.\n   */\n  Selection.prototype.select = function (selector) {\n    var groups = this.groups;\n    var numGroups = groups.length;\n    var subgroups = [];\n    for (var j = 0; j < numGroups; j++) {\n      var group = groups[j];\n      var groupSize = group.length;\n      var subgroup = subgroups[j] = new Array(groupSize);\n      for (var i = 0; i < groupSize; i++) {\n        var node = group[i];\n        if (node) {\n          var subnode = selector(node, node.datum, i, group);\n          if (subnode) {\n            subnode.datum = node.datum;\n          }\n          subgroup[i] = subnode;\n        }\n        // else this can be a group of the `enter` selection,\n        // for example, with no nodes at the i-th position,\n        // only nodes at the end of the group\n      }\n    }\n\n    return new Selection(subgroups, this.parents);\n  };\n  /**\n   * Same as {@link select}, but uses the given {@param Class} (constructor) as a selector.\n   * @param Class The constructor function to use to find matching nodes.\n   */\n  Selection.prototype.selectByClass = function (Class) {\n    return this.select(function (node) {\n      if (Node.isNode(node)) {\n        var children = node.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n          var child = children[i];\n          if (child instanceof Class) {\n            return child;\n          }\n        }\n      }\n    });\n  };\n  Selection.prototype.selectByTag = function (tag) {\n    return this.select(function (node) {\n      if (Node.isNode(node)) {\n        var children = node.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n          var child = children[i];\n          if (child.tag === tag) {\n            return child;\n          }\n        }\n      }\n    });\n  };\n  Selection.prototype.selectAllByClass = function (Class) {\n    return this.selectAll(function (node) {\n      var nodes = [];\n      if (Node.isNode(node)) {\n        var children = node.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n          var child = children[i];\n          if (child instanceof Class) {\n            nodes.push(child);\n          }\n        }\n      }\n      return nodes;\n    });\n  };\n  Selection.prototype.selectAllByTag = function (tag) {\n    return this.selectAll(function (node) {\n      var nodes = [];\n      if (Node.isNode(node)) {\n        var children = node.children;\n        var n = children.length;\n        for (var i = 0; i < n; i++) {\n          var child = children[i];\n          if (child.tag === tag) {\n            nodes.push(child);\n          }\n        }\n      }\n      return nodes;\n    });\n  };\n  Selection.prototype.selectNone = function () {\n    return [];\n  };\n  /**\n   * Runs the given selector that returns a group of nodes for every node in each group.\n   * The original nodes are then replaced by the groups of nodes returned by the selector\n   * and returned as a new selection. The original nodes become the parent nodes for each\n   * group in the new selection. The selected nodes do not inherit the datums of the original nodes.\n   * If called without any parameters, creates a new selection with an empty group for each\n   * node in this selection.\n   */\n  Selection.prototype.selectAll = function (selectorAll) {\n    if (!selectorAll) {\n      selectorAll = this.selectNone;\n    }\n    // Each subgroup is populated with the selector (run on each group node) results.\n    var subgroups = [];\n    // In the new selection that we return, subgroups become groups,\n    // and group nodes become parents.\n    var parents = [];\n    var groups = this.groups;\n    var groupCount = groups.length;\n    for (var j = 0; j < groupCount; j++) {\n      var group = groups[j];\n      var groupLength = group.length;\n      for (var i = 0; i < groupLength; i++) {\n        var node = group[i];\n        if (node) {\n          subgroups.push(selectorAll(node, node.datum, i, group));\n          parents.push(node);\n        }\n      }\n    }\n    return new Selection(subgroups, parents);\n  };\n  /**\n   * Runs the given callback for every node in this selection and returns this selection.\n   * @param cb\n   */\n  Selection.prototype.each = function (cb) {\n    var e_1, _a, e_2, _b;\n    try {\n      for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var group = _d.value;\n        var i = 0;\n        try {\n          for (var group_1 = (e_2 = void 0, __values(group)), group_1_1 = group_1.next(); !group_1_1.done; group_1_1 = group_1.next()) {\n            var node = group_1_1.value;\n            if (node) {\n              cb(node, node.datum, i, group);\n            }\n            i++;\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (group_1_1 && !group_1_1.done && (_b = group_1.return)) _b.call(group_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return this;\n  };\n  Selection.prototype.remove = function () {\n    return this.each(function (node) {\n      if (Node.isNode(node)) {\n        var parent_1 = node.parent;\n        if (parent_1) {\n          parent_1.removeChild(node);\n        }\n      }\n    });\n  };\n  Selection.prototype.merge = function (other) {\n    var groups0 = this.groups;\n    var groups1 = other.groups;\n    var m0 = groups0.length;\n    var m1 = groups1.length;\n    var m = Math.min(m0, m1);\n    var merges = new Array(m0);\n    var j = 0;\n    for (; j < m; j++) {\n      var group0 = groups0[j];\n      var group1 = groups1[j];\n      var n = group0.length;\n      var merge = merges[j] = new Array(n);\n      for (var i = 0; i < n; i++) {\n        var node = group0[i] || group1[i];\n        merge[i] = node || undefined;\n      }\n    }\n    for (; j < m0; j++) {\n      merges[j] = groups0[j];\n    }\n    return new Selection(merges, this.parents);\n  };\n  /**\n   * Return the first non-null element in this selection.\n   * If the selection is empty, returns null.\n   */\n  Selection.prototype.node = function () {\n    var groups = this.groups;\n    var numGroups = groups.length;\n    for (var j = 0; j < numGroups; j++) {\n      var group = groups[j];\n      var groupSize = group.length;\n      for (var i = 0; i < groupSize; i++) {\n        var node = group[i];\n        if (node) {\n          return node;\n        }\n      }\n    }\n    return null;\n  };\n  Selection.prototype.attr = function (name, value) {\n    this.each(function (node) {\n      node[name] = value;\n    });\n    return this;\n  };\n  Selection.prototype.attrFn = function (name, value) {\n    this.each(function (node, datum, index, group) {\n      node[name] = value(node, datum, index, group);\n    });\n    return this;\n  };\n  /**\n   * Invokes the given function once, passing in this selection.\n   * Returns this selection. Facilitates method chaining.\n   * @param cb\n   */\n  Selection.prototype.call = function (cb) {\n    cb(this);\n    return this;\n  };\n  Object.defineProperty(Selection.prototype, \"size\", {\n    /**\n     * Returns the total number of nodes in this selection.\n     */\n    get: function () {\n      var e_3, _a, e_4, _b;\n      var size = 0;\n      try {\n        for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var group = _d.value;\n          try {\n            for (var group_2 = (e_4 = void 0, __values(group)), group_2_1 = group_2.next(); !group_2_1.done; group_2_1 = group_2.next()) {\n              var node = group_2_1.value;\n              if (node) {\n                size++;\n              }\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (group_2_1 && !group_2_1.done && (_b = group_2.return)) _b.call(group_2);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n      return size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"data\", {\n    /**\n     * Returns the array of data for the selected elements.\n     */\n    get: function () {\n      var e_5, _a, e_6, _b;\n      var data = new Array(this.size);\n      var i = 0;\n      try {\n        for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var group = _d.value;\n          try {\n            for (var group_3 = (e_6 = void 0, __values(group)), group_3_1 = group_3.next(); !group_3_1.done; group_3_1 = group_3.next()) {\n              var node = group_3_1.value;\n              if (node) {\n                data[i++] = node.datum;\n              }\n            }\n          } catch (e_6_1) {\n            e_6 = {\n              error: e_6_1\n            };\n          } finally {\n            try {\n              if (group_3_1 && !group_3_1.done && (_b = group_3.return)) _b.call(group_3);\n            } finally {\n              if (e_6) throw e_6.error;\n            }\n          }\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n      return data;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"enter\", {\n    get: function () {\n      return new Selection(this.enterGroups ? this.enterGroups : [[]], this.parents);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selection.prototype, \"exit\", {\n    get: function () {\n      return new Selection(this.exitGroups ? this.exitGroups : [[]], this.parents);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Binds the given value to each selected node and returns this selection\n   * with its {@link GDatum} type changed to the type of the given value.\n   * This method doesn't compute a join and doesn't affect indexes or the enter and exit selections.\n   * This method can also be used to clear bound data.\n   * @param value\n   */\n  Selection.prototype.setDatum = function (value) {\n    return this.each(function (node) {\n      node.datum = value;\n    });\n  };\n  Object.defineProperty(Selection.prototype, \"datum\", {\n    /**\n     * Returns the bound datum for the first non-null element in the selection.\n     * This is generally useful only if you know the selection contains exactly one element.\n     */\n    get: function () {\n      var node = this.node();\n      return node ? node.datum : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Binds the specified array of values with the selected nodes, returning a new selection\n   * that represents the _update_ selection: the nodes successfully bound to the values.\n   * Also defines the {@link enter} and {@link exit} selections on the returned selection,\n   * which can be used to add or remove the nodes to correspond to the new data.\n   * The `values` is an array of values of a particular type, or a function that returns\n   * an array of values for each group.\n   * When values are assigned to the nodes, they are stored in the {@link Node.datum} property.\n   * @param values\n   * @param key\n   */\n  Selection.prototype.setData = function (values, key) {\n    if (typeof values !== 'function') {\n      var data_1 = values;\n      values = function () {\n        return data_1;\n      };\n    }\n    var groups = this.groups;\n    var parents = this.parents;\n    var numGroups = groups.length;\n    var updateGroups = new Array(numGroups);\n    var enterGroups = new Array(numGroups);\n    var exitGroups = new Array(numGroups);\n    for (var j = 0; j < numGroups; j++) {\n      var group = groups[j];\n      var parent_2 = parents[j];\n      if (!parent_2) {\n        throw new Error(\"Group #\" + j + \" has no parent: \" + group);\n      }\n      var groupSize = group.length;\n      var data = values(parent_2, parent_2.datum, j, parents);\n      var dataSize = data.length;\n      var enterGroup = enterGroups[j] = new Array(dataSize);\n      var updateGroup = updateGroups[j] = new Array(dataSize);\n      var exitGroup = exitGroups[j] = new Array(groupSize);\n      if (key) {\n        this.bindKey(parent_2, group, enterGroup, updateGroup, exitGroup, data, key);\n      } else {\n        this.bindIndex(parent_2, group, enterGroup, updateGroup, exitGroup, data);\n      }\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0; i0 < dataSize; i0++) {\n        var previous = enterGroup[i0];\n        if (previous) {\n          if (i0 >= i1) {\n            i1 = i0 + 1;\n          }\n          var next = updateGroup[i1];\n          while (!next && i1 < dataSize) {\n            i1++;\n            next = updateGroup[i1];\n          }\n          previous.next = next || null;\n        }\n      }\n    }\n    var result = new Selection(updateGroups, parents);\n    result.enterGroups = enterGroups;\n    result.exitGroups = exitGroups;\n    return result;\n  };\n  Selection.prototype.bindIndex = function (parent, group, enter, update, exit, data) {\n    var groupSize = group.length;\n    var dataSize = data.length;\n    var i = 0;\n    for (; i < dataSize; i++) {\n      var node = group[i];\n      if (node) {\n        node.datum = data[i];\n        update[i] = node;\n      } else {\n        // more datums than group nodes\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n    // more group nodes than datums\n    for (; i < groupSize; i++) {\n      var node = group[i];\n      if (node) {\n        exit[i] = node;\n      }\n    }\n  };\n  Selection.prototype.bindKey = function (parent, group, enter, update, exit, data, key) {\n    var groupSize = group.length;\n    var dataSize = data.length;\n    var keyValues = new Array(groupSize);\n    var nodeByKeyValue = {};\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (var i = 0; i < groupSize; i++) {\n      var node = group[i];\n      if (node) {\n        var keyValue = keyValues[i] = Selection.keyPrefix + key(node, node.datum, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n    // Compute the key for each datum.\n    // If there is a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (var i = 0; i < dataSize; i++) {\n      var keyValue = Selection.keyPrefix + key(parent, data[i], i, data);\n      var node = nodeByKeyValue[keyValue];\n      if (node) {\n        update[i] = node;\n        node.datum = data[i];\n        nodeByKeyValue[keyValue] = undefined;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n    // Add any remaining nodes that were not bound to data to exit.\n    for (var i = 0; i < groupSize; i++) {\n      var node = group[i];\n      if (node && nodeByKeyValue[keyValues[i]] === node) {\n        exit[i] = node;\n      }\n    }\n  };\n  Selection.keyPrefix = '$'; // Protect against keys like '__proto__'.\n  return Selection;\n}();\nexport { Selection };","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Node","EnterNode","parent","datum","scene","prototype","appendChild","node","insertBefore","isNode","Error","nextNode","Selection","groups","parents","select","undefined","selectAll","nodes","append","Class","selector","numGroups","subgroups","j","group","groupSize","subgroup","Array","subnode","selectByClass","children","n","child","selectByTag","tag","selectAllByClass","push","selectAllByTag","selectNone","selectorAll","groupCount","groupLength","each","cb","e_1","_a","e_2","_b","_c","_d","group_1","group_1_1","e_2_1","error","return","e_1_1","remove","parent_1","removeChild","merge","other","groups0","groups1","m0","m1","Math","min","merges","group0","group1","attr","name","attrFn","index","Object","defineProperty","get","e_3","e_4","size","group_2","group_2_1","e_4_1","e_3_1","enumerable","configurable","e_5","e_6","data","group_3","group_3_1","e_6_1","e_5_1","enterGroups","exitGroups","setDatum","setData","values","key","data_1","updateGroups","parent_2","dataSize","enterGroup","updateGroup","exitGroup","bindKey","bindIndex","i0","i1","previous","result","enter","update","exit","keyValues","nodeByKeyValue","keyValue","keyPrefix"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/scene/selection.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { Node } from './node';\nvar EnterNode = /** @class */ (function () {\n    function EnterNode(parent, datum) {\n        this.next = null;\n        this.scene = parent.scene;\n        this.parent = parent;\n        this.datum = datum;\n    }\n    EnterNode.prototype.appendChild = function (node) {\n        // This doesn't work without the `strict: true` in the `tsconfig.json`,\n        // so we must have two `if` checks below, instead of this single one.\n        // if (this.next && !Node.isNode(this.next)) {\n        //     throw new Error(`${this.next} is not a Node.`);\n        // }\n        if (this.next === null) {\n            return this.parent.insertBefore(node, null);\n        }\n        if (!Node.isNode(this.next)) {\n            throw new Error(this.next + \" is not a Node.\");\n        }\n        return this.parent.insertBefore(node, this.next);\n    };\n    EnterNode.prototype.insertBefore = function (node, nextNode) {\n        return this.parent.insertBefore(node, nextNode);\n    };\n    return EnterNode;\n}());\nexport { EnterNode };\n/**\n * G - type of the selected node(s).\n * GDatum - type of the datum of the selected node(s).\n * P - type of the parent node(s).\n * PDatum - type of the datum of the parent node(s).\n */\nvar Selection = /** @class */ (function () {\n    function Selection(groups, parents) {\n        this.groups = groups;\n        this.parents = parents;\n    }\n    Selection.select = function (node) {\n        return new Selection([[typeof node === 'function' ? node() : node]], [undefined]);\n    };\n    Selection.selectAll = function (nodes) {\n        return new Selection([nodes == null ? [] : nodes], [undefined]);\n    };\n    /**\n     * Creates new nodes, appends them to the nodes of this selection and returns them\n     * as a new selection. The created nodes inherit the datums and the parents of the nodes\n     * they replace.\n     * @param Class The constructor function to use to create the new nodes.\n     */\n    Selection.prototype.append = function (Class) {\n        return this.select(function (node) {\n            return node.appendChild(new Class());\n        });\n    };\n    /**\n     * Runs the given selector that returns a single node for every node in each group.\n     * The original nodes are then replaced by the nodes returned by the selector\n     * and returned as a new selection.\n     * The selected nodes inherit the datums and the parents of the original nodes.\n     */\n    Selection.prototype.select = function (selector) {\n        var groups = this.groups;\n        var numGroups = groups.length;\n        var subgroups = [];\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var groupSize = group.length;\n            var subgroup = (subgroups[j] = new Array(groupSize));\n            for (var i = 0; i < groupSize; i++) {\n                var node = group[i];\n                if (node) {\n                    var subnode = selector(node, node.datum, i, group);\n                    if (subnode) {\n                        subnode.datum = node.datum;\n                    }\n                    subgroup[i] = subnode;\n                }\n                // else this can be a group of the `enter` selection,\n                // for example, with no nodes at the i-th position,\n                // only nodes at the end of the group\n            }\n        }\n        return new Selection(subgroups, this.parents);\n    };\n    /**\n     * Same as {@link select}, but uses the given {@param Class} (constructor) as a selector.\n     * @param Class The constructor function to use to find matching nodes.\n     */\n    Selection.prototype.selectByClass = function (Class) {\n        return this.select(function (node) {\n            if (Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child instanceof Class) {\n                        return child;\n                    }\n                }\n            }\n        });\n    };\n    Selection.prototype.selectByTag = function (tag) {\n        return this.select(function (node) {\n            if (Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child.tag === tag) {\n                        return child;\n                    }\n                }\n            }\n        });\n    };\n    Selection.prototype.selectAllByClass = function (Class) {\n        return this.selectAll(function (node) {\n            var nodes = [];\n            if (Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child instanceof Class) {\n                        nodes.push(child);\n                    }\n                }\n            }\n            return nodes;\n        });\n    };\n    Selection.prototype.selectAllByTag = function (tag) {\n        return this.selectAll(function (node) {\n            var nodes = [];\n            if (Node.isNode(node)) {\n                var children = node.children;\n                var n = children.length;\n                for (var i = 0; i < n; i++) {\n                    var child = children[i];\n                    if (child.tag === tag) {\n                        nodes.push(child);\n                    }\n                }\n            }\n            return nodes;\n        });\n    };\n    Selection.prototype.selectNone = function () {\n        return [];\n    };\n    /**\n     * Runs the given selector that returns a group of nodes for every node in each group.\n     * The original nodes are then replaced by the groups of nodes returned by the selector\n     * and returned as a new selection. The original nodes become the parent nodes for each\n     * group in the new selection. The selected nodes do not inherit the datums of the original nodes.\n     * If called without any parameters, creates a new selection with an empty group for each\n     * node in this selection.\n     */\n    Selection.prototype.selectAll = function (selectorAll) {\n        if (!selectorAll) {\n            selectorAll = this.selectNone;\n        }\n        // Each subgroup is populated with the selector (run on each group node) results.\n        var subgroups = [];\n        // In the new selection that we return, subgroups become groups,\n        // and group nodes become parents.\n        var parents = [];\n        var groups = this.groups;\n        var groupCount = groups.length;\n        for (var j = 0; j < groupCount; j++) {\n            var group = groups[j];\n            var groupLength = group.length;\n            for (var i = 0; i < groupLength; i++) {\n                var node = group[i];\n                if (node) {\n                    subgroups.push(selectorAll(node, node.datum, i, group));\n                    parents.push(node);\n                }\n            }\n        }\n        return new Selection(subgroups, parents);\n    };\n    /**\n     * Runs the given callback for every node in this selection and returns this selection.\n     * @param cb\n     */\n    Selection.prototype.each = function (cb) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var group = _d.value;\n                var i = 0;\n                try {\n                    for (var group_1 = (e_2 = void 0, __values(group)), group_1_1 = group_1.next(); !group_1_1.done; group_1_1 = group_1.next()) {\n                        var node = group_1_1.value;\n                        if (node) {\n                            cb(node, node.datum, i, group);\n                        }\n                        i++;\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (group_1_1 && !group_1_1.done && (_b = group_1.return)) _b.call(group_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Selection.prototype.remove = function () {\n        return this.each(function (node) {\n            if (Node.isNode(node)) {\n                var parent_1 = node.parent;\n                if (parent_1) {\n                    parent_1.removeChild(node);\n                }\n            }\n        });\n    };\n    Selection.prototype.merge = function (other) {\n        var groups0 = this.groups;\n        var groups1 = other.groups;\n        var m0 = groups0.length;\n        var m1 = groups1.length;\n        var m = Math.min(m0, m1);\n        var merges = new Array(m0);\n        var j = 0;\n        for (; j < m; j++) {\n            var group0 = groups0[j];\n            var group1 = groups1[j];\n            var n = group0.length;\n            var merge = (merges[j] = new Array(n));\n            for (var i = 0; i < n; i++) {\n                var node = group0[i] || group1[i];\n                merge[i] = node || undefined;\n            }\n        }\n        for (; j < m0; j++) {\n            merges[j] = groups0[j];\n        }\n        return new Selection(merges, this.parents);\n    };\n    /**\n     * Return the first non-null element in this selection.\n     * If the selection is empty, returns null.\n     */\n    Selection.prototype.node = function () {\n        var groups = this.groups;\n        var numGroups = groups.length;\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var groupSize = group.length;\n            for (var i = 0; i < groupSize; i++) {\n                var node = group[i];\n                if (node) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    };\n    Selection.prototype.attr = function (name, value) {\n        this.each(function (node) {\n            node[name] = value;\n        });\n        return this;\n    };\n    Selection.prototype.attrFn = function (name, value) {\n        this.each(function (node, datum, index, group) {\n            node[name] = value(node, datum, index, group);\n        });\n        return this;\n    };\n    /**\n     * Invokes the given function once, passing in this selection.\n     * Returns this selection. Facilitates method chaining.\n     * @param cb\n     */\n    Selection.prototype.call = function (cb) {\n        cb(this);\n        return this;\n    };\n    Object.defineProperty(Selection.prototype, \"size\", {\n        /**\n         * Returns the total number of nodes in this selection.\n         */\n        get: function () {\n            var e_3, _a, e_4, _b;\n            var size = 0;\n            try {\n                for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var group = _d.value;\n                    try {\n                        for (var group_2 = (e_4 = void 0, __values(group)), group_2_1 = group_2.next(); !group_2_1.done; group_2_1 = group_2.next()) {\n                            var node = group_2_1.value;\n                            if (node) {\n                                size++;\n                            }\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (group_2_1 && !group_2_1.done && (_b = group_2.return)) _b.call(group_2);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"data\", {\n        /**\n         * Returns the array of data for the selected elements.\n         */\n        get: function () {\n            var e_5, _a, e_6, _b;\n            var data = new Array(this.size);\n            var i = 0;\n            try {\n                for (var _c = __values(this.groups), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var group = _d.value;\n                    try {\n                        for (var group_3 = (e_6 = void 0, __values(group)), group_3_1 = group_3.next(); !group_3_1.done; group_3_1 = group_3.next()) {\n                            var node = group_3_1.value;\n                            if (node) {\n                                data[i++] = node.datum;\n                            }\n                        }\n                    }\n                    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                    finally {\n                        try {\n                            if (group_3_1 && !group_3_1.done && (_b = group_3.return)) _b.call(group_3);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                    }\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            return data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"enter\", {\n        get: function () {\n            return new Selection(this.enterGroups ? this.enterGroups : [[]], this.parents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selection.prototype, \"exit\", {\n        get: function () {\n            return new Selection(this.exitGroups ? this.exitGroups : [[]], this.parents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Binds the given value to each selected node and returns this selection\n     * with its {@link GDatum} type changed to the type of the given value.\n     * This method doesn't compute a join and doesn't affect indexes or the enter and exit selections.\n     * This method can also be used to clear bound data.\n     * @param value\n     */\n    Selection.prototype.setDatum = function (value) {\n        return this.each(function (node) {\n            node.datum = value;\n        });\n    };\n    Object.defineProperty(Selection.prototype, \"datum\", {\n        /**\n         * Returns the bound datum for the first non-null element in the selection.\n         * This is generally useful only if you know the selection contains exactly one element.\n         */\n        get: function () {\n            var node = this.node();\n            return node ? node.datum : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Binds the specified array of values with the selected nodes, returning a new selection\n     * that represents the _update_ selection: the nodes successfully bound to the values.\n     * Also defines the {@link enter} and {@link exit} selections on the returned selection,\n     * which can be used to add or remove the nodes to correspond to the new data.\n     * The `values` is an array of values of a particular type, or a function that returns\n     * an array of values for each group.\n     * When values are assigned to the nodes, they are stored in the {@link Node.datum} property.\n     * @param values\n     * @param key\n     */\n    Selection.prototype.setData = function (values, key) {\n        if (typeof values !== 'function') {\n            var data_1 = values;\n            values = function () { return data_1; };\n        }\n        var groups = this.groups;\n        var parents = this.parents;\n        var numGroups = groups.length;\n        var updateGroups = new Array(numGroups);\n        var enterGroups = new Array(numGroups);\n        var exitGroups = new Array(numGroups);\n        for (var j = 0; j < numGroups; j++) {\n            var group = groups[j];\n            var parent_2 = parents[j];\n            if (!parent_2) {\n                throw new Error(\"Group #\" + j + \" has no parent: \" + group);\n            }\n            var groupSize = group.length;\n            var data = values(parent_2, parent_2.datum, j, parents);\n            var dataSize = data.length;\n            var enterGroup = (enterGroups[j] = new Array(dataSize));\n            var updateGroup = (updateGroups[j] = new Array(dataSize));\n            var exitGroup = (exitGroups[j] = new Array(groupSize));\n            if (key) {\n                this.bindKey(parent_2, group, enterGroup, updateGroup, exitGroup, data, key);\n            }\n            else {\n                this.bindIndex(parent_2, group, enterGroup, updateGroup, exitGroup, data);\n            }\n            // Now connect the enter nodes to their following update node, such that\n            // appendChild can insert the materialized enter node before this node,\n            // rather than at the end of the parent node.\n            for (var i0 = 0, i1 = 0; i0 < dataSize; i0++) {\n                var previous = enterGroup[i0];\n                if (previous) {\n                    if (i0 >= i1) {\n                        i1 = i0 + 1;\n                    }\n                    var next = updateGroup[i1];\n                    while (!next && i1 < dataSize) {\n                        i1++;\n                        next = updateGroup[i1];\n                    }\n                    previous.next = next || null;\n                }\n            }\n        }\n        var result = new Selection(updateGroups, parents);\n        result.enterGroups = enterGroups;\n        result.exitGroups = exitGroups;\n        return result;\n    };\n    Selection.prototype.bindIndex = function (parent, group, enter, update, exit, data) {\n        var groupSize = group.length;\n        var dataSize = data.length;\n        var i = 0;\n        for (; i < dataSize; i++) {\n            var node = group[i];\n            if (node) {\n                node.datum = data[i];\n                update[i] = node;\n            }\n            else {\n                // more datums than group nodes\n                enter[i] = new EnterNode(parent, data[i]);\n            }\n        }\n        // more group nodes than datums\n        for (; i < groupSize; i++) {\n            var node = group[i];\n            if (node) {\n                exit[i] = node;\n            }\n        }\n    };\n    Selection.prototype.bindKey = function (parent, group, enter, update, exit, data, key) {\n        var groupSize = group.length;\n        var dataSize = data.length;\n        var keyValues = new Array(groupSize);\n        var nodeByKeyValue = {};\n        // Compute the key for each node.\n        // If multiple nodes have the same key, the duplicates are added to exit.\n        for (var i = 0; i < groupSize; i++) {\n            var node = group[i];\n            if (node) {\n                var keyValue = (keyValues[i] = Selection.keyPrefix + key(node, node.datum, i, group));\n                if (keyValue in nodeByKeyValue) {\n                    exit[i] = node;\n                }\n                else {\n                    nodeByKeyValue[keyValue] = node;\n                }\n            }\n        }\n        // Compute the key for each datum.\n        // If there is a node associated with this key, join and add it to update.\n        // If there is not (or the key is a duplicate), add it to enter.\n        for (var i = 0; i < dataSize; i++) {\n            var keyValue = Selection.keyPrefix + key(parent, data[i], i, data);\n            var node = nodeByKeyValue[keyValue];\n            if (node) {\n                update[i] = node;\n                node.datum = data[i];\n                nodeByKeyValue[keyValue] = undefined;\n            }\n            else {\n                enter[i] = new EnterNode(parent, data[i]);\n            }\n        }\n        // Add any remaining nodes that were not bound to data to exit.\n        for (var i = 0; i < groupSize; i++) {\n            var node = group[i];\n            if (node && nodeByKeyValue[keyValues[i]] === node) {\n                exit[i] = node;\n            }\n        }\n    };\n    Selection.keyPrefix = '$'; // Protect against keys like '__proto__'.\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}