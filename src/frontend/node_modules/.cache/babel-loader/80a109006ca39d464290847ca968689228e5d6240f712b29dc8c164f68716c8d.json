{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\nvar LegendVisualProvider = function () {\n  function LegendVisualProvider(getDataWithEncodedVisual, getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData();\n    return rawData.mapArray(rawData.getName);\n  };\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n    return rawData.indexOfName(name) >= 0;\n  };\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n  return LegendVisualProvider;\n}();\nexports[\"default\"] = LegendVisualProvider;","map":{"version":3,"names":["exports","__esModule","LegendVisualProvider","getDataWithEncodedVisual","getRawData","_getDataWithEncodedVisual","_getRawData","prototype","getAllNames","rawData","mapArray","getName","containName","name","indexOfName","dataWithEncodedVisual","getItemVisual","dataIndex","key"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/visual/LegendVisualProvider.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar LegendVisualProvider = function () {\n  function LegendVisualProvider(getDataWithEncodedVisual, getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData();\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n\n  return LegendVisualProvider;\n}();\n\nexports[\"default\"] = LegendVisualProvider;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AAEzB,IAAIC,oBAAoB,GAAG,YAAY;EACrC,SAASA,oBAAoB,CAACC,wBAAwB,EAAEC,UAAU,EAAE;IAClE,IAAI,CAACC,yBAAyB,GAAGF,wBAAwB;IACzD,IAAI,CAACG,WAAW,GAAGF,UAAU;EAC/B;EAEAF,oBAAoB,CAACK,SAAS,CAACC,WAAW,GAAG,YAAY;IACvD,IAAIC,OAAO,GAAG,IAAI,CAACH,WAAW,EAAE;IAEhC,OAAOG,OAAO,CAACC,QAAQ,CAACD,OAAO,CAACE,OAAO,CAAC;EAC1C,CAAC;EAEDT,oBAAoB,CAACK,SAAS,CAACK,WAAW,GAAG,UAAUC,IAAI,EAAE;IAC3D,IAAIJ,OAAO,GAAG,IAAI,CAACH,WAAW,EAAE;IAEhC,OAAOG,OAAO,CAACK,WAAW,CAACD,IAAI,CAAC,IAAI,CAAC;EACvC,CAAC;EAEDX,oBAAoB,CAACK,SAAS,CAACO,WAAW,GAAG,UAAUD,IAAI,EAAE;IAC3D,IAAIE,qBAAqB,GAAG,IAAI,CAACV,yBAAyB,EAAE;IAE5D,OAAOU,qBAAqB,CAACD,WAAW,CAACD,IAAI,CAAC;EAChD,CAAC;EAEDX,oBAAoB,CAACK,SAAS,CAACS,aAAa,GAAG,UAAUC,SAAS,EAAEC,GAAG,EAAE;IACvE,IAAIH,qBAAqB,GAAG,IAAI,CAACV,yBAAyB,EAAE;IAE5D,OAAOU,qBAAqB,CAACC,aAAa,CAACC,SAAS,EAAEC,GAAG,CAAC;EAC5D,CAAC;EAED,OAAOhB,oBAAoB;AAC7B,CAAC,EAAE;AAEHF,OAAO,CAAC,SAAS,CAAC,GAAGE,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}