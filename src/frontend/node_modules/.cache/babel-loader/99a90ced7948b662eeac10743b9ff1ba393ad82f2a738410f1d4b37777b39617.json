{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/**\n * Performs a JSON-diff between a source and target JSON structure.\n *\n * On a per property basis, takes the target property value where:\n * - types are different.\n * - type is primitive.\n * - type is array and length or content have changed.\n *\n * Recurses for object types.\n *\n * @param source starting point for diff\n * @param target target for diff vs. source\n *\n * @returns `null` if no differences, or an object with the subset of properties that have changed.\n */\nexport function jsonDiff(source, target) {\n  var e_1, _a;\n  var sourceType = classify(source);\n  var targetType = classify(target);\n  if (targetType === 'array') {\n    if (sourceType !== 'array' || source.length !== target.length) {\n      return __spread(target);\n    }\n    if (target.some(function (targetElement, i) {\n      var _a;\n      return jsonDiff((_a = source) === null || _a === void 0 ? void 0 : _a[i], targetElement) != null;\n    })) {\n      return __spread(target);\n    }\n    return null;\n  }\n  if (targetType === 'primitive') {\n    if (sourceType !== 'primitive') {\n      return __assign({}, target);\n    }\n    if (source !== target) {\n      return target;\n    }\n    return null;\n  }\n  var lhs = source || {};\n  var rhs = target || {};\n  var allProps = new Set(__spread(Object.keys(lhs), Object.keys(rhs)));\n  var propsChangedCount = 0;\n  var result = {};\n  var _loop_1 = function (prop) {\n    // Cheap-and-easy equality check.\n    if (lhs[prop] === rhs[prop]) {\n      return \"continue\";\n    }\n    var take = function (v) {\n      result[prop] = v;\n      propsChangedCount++;\n    };\n    var lhsType = classify(lhs[prop]);\n    var rhsType = classify(rhs[prop]);\n    if (lhsType !== rhsType) {\n      // Types changed, just take RHS.\n      take(rhs[prop]);\n      return \"continue\";\n    }\n    if (rhsType === 'primitive' || rhsType === null) {\n      take(rhs[prop]);\n      return \"continue\";\n    }\n    if (rhsType === 'array' && lhs[prop].length !== rhs[prop].length) {\n      // Arrays are different sizes, so just take target array.\n      take(rhs[prop]);\n      return \"continue\";\n    }\n    if (rhsType === 'class-instance') {\n      // Don't try to do anything tricky with array diffs!\n      take(rhs[prop]);\n      return \"continue\";\n    }\n    if (rhsType === 'function' && lhs[prop] !== rhs[prop]) {\n      take(rhs[prop]);\n      return \"continue\";\n    }\n    var diff = jsonDiff(lhs[prop], rhs[prop]);\n    if (diff !== null) {\n      take(diff);\n    }\n  };\n  try {\n    for (var allProps_1 = __values(allProps), allProps_1_1 = allProps_1.next(); !allProps_1_1.done; allProps_1_1 = allProps_1.next()) {\n      var prop = allProps_1_1.value;\n      _loop_1(prop);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (allProps_1_1 && !allProps_1_1.done && (_a = allProps_1.return)) _a.call(allProps_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return propsChangedCount === 0 ? null : result;\n}\n/**\n * Special value used by `jsonMerge` to signal that a property should be removed from the merged\n * output.\n */\nexport var DELETE = Symbol('<delete-property>');\nvar NOT_SPECIFIED = Symbol('<unspecified-property>');\n/**\n * Merge together the provide JSON object structures, with the precedence of application running\n * from higher indexes to lower indexes.\n *\n * Deep-clones all objects to avoid mutation of the inputs changing the output object. For arrays,\n * just performs a deep-clone of the entire array, no merging of elements attempted.\n *\n * @param json all json objects to merge\n * @param opts merge options\n * @param opts.avoidDeepClone contains a list of properties where deep clones should be avoided\n *\n * @returns the combination of all of the json inputs\n */\nexport function jsonMerge(json, opts) {\n  var e_2, _a;\n  var _b;\n  var avoidDeepClone = ((_b = opts) === null || _b === void 0 ? void 0 : _b.avoidDeepClone) || [];\n  var jsonTypes = json.map(function (v) {\n    return classify(v);\n  });\n  if (jsonTypes.some(function (v) {\n    return v === 'array';\n  })) {\n    // Clone final array.\n    var finalValue = json[json.length - 1];\n    if (finalValue instanceof Array) {\n      return finalValue.map(function (v) {\n        var type = classify(v);\n        return type === 'array' ? jsonMerge([[], v], opts) : type === 'object' ? jsonMerge([{}, v], opts) : v;\n      });\n    }\n    return finalValue;\n  }\n  var result = {};\n  var props = new Set(json.map(function (v) {\n    return v != null ? Object.keys(v) : [];\n  }).reduce(function (r, n) {\n    return r.concat(n);\n  }, []));\n  var _loop_2 = function (nextProp) {\n    var values = json.map(function (j) {\n      return j != null && nextProp in j ? j[nextProp] : NOT_SPECIFIED;\n    }).filter(function (v) {\n      return v !== NOT_SPECIFIED;\n    });\n    if (values.length === 0) {\n      return \"continue\";\n    }\n    var lastValue = values[values.length - 1];\n    if (lastValue === DELETE) {\n      return \"continue\";\n    }\n    var types = values.map(function (v) {\n      return classify(v);\n    });\n    var type = types[0];\n    if (types.some(function (t) {\n      return t !== type && t !== null;\n    })) {\n      // Short-circuit if mismatching types.\n      result[nextProp] = lastValue;\n      return \"continue\";\n    }\n    if ((type === 'array' || type === 'object') && !avoidDeepClone.includes(nextProp)) {\n      result[nextProp] = jsonMerge(values, opts);\n    } else if (type === 'array') {\n      // Arrays need to be shallow copied to avoid external mutation and allow jsonDiff to\n      // detect changes.\n      result[nextProp] = __spread(lastValue);\n    } else {\n      // Just directly assign/overwrite.\n      result[nextProp] = lastValue;\n    }\n  };\n  try {\n    for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n      var nextProp = props_1_1.value;\n      _loop_2(nextProp);\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n  return result;\n}\n/**\n * Recursively apply a JSON object into a class-hierarchy, optionally instantiating certain classes\n * by property name.\n *\n * @param target to apply source JSON properties into\n * @param source to be applied\n * @param params.path path for logging/error purposes, to aid with pinpointing problems\n * @param params.matcherPath path for pattern matching, to lookup allowedTypes override.\n * @param params.skip property names to skip from the source\n * @param params.constructors dictionary of property name to class constructors for properties that\n *                            require object construction\n * @param params.allowedTypes overrides by path for allowed property types\n */\nexport function jsonApply(target, source, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  var _a, _b, _c, _d;\n  var _e = params.path,\n    path = _e === void 0 ? undefined : _e,\n    _f = params.matcherPath,\n    matcherPath = _f === void 0 ? path ? path.replace(/(\\[[0-9+]+\\])/i, '[]') : undefined : _f,\n    _g = params.skip,\n    skip = _g === void 0 ? [] : _g,\n    _h = params.constructors,\n    constructors = _h === void 0 ? {} : _h,\n    _j = params.allowedTypes,\n    allowedTypes = _j === void 0 ? {} : _j;\n  if (target == null) {\n    throw new Error(\"AG Charts - target is uninitialised: \" + (path || '<root>'));\n  }\n  if (source == null) {\n    return target;\n  }\n  var targetType = classify(target);\n  var _loop_3 = function (property) {\n    var propertyMatcherPath = \"\" + (matcherPath ? matcherPath + '.' : '') + property;\n    if (skip.indexOf(propertyMatcherPath) >= 0) {\n      return \"continue\";\n    }\n    var newValue = source[property];\n    var propertyPath = \"\" + (path ? path + '.' : '') + property;\n    var targetAny = target;\n    var targetClass = targetAny.constructor;\n    var currentValue = targetAny[property];\n    var ctr = (_a = constructors[property], _a !== null && _a !== void 0 ? _a : constructors[propertyMatcherPath]);\n    try {\n      var currentValueType = classify(currentValue);\n      var newValueType = classify(newValue);\n      if (targetType === 'class-instance' && !(property in target || targetAny.hasOwnProperty(property))) {\n        console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in \" + ((_b = targetClass) === null || _b === void 0 ? void 0 : _b.name) + \" - property is unknown\");\n        return \"continue\";\n      }\n      var allowableTypes = allowedTypes[propertyMatcherPath] || [currentValueType];\n      if (currentValueType === 'class-instance' && newValueType === 'object') {\n        // Allowed, this is the common case! - do not error.\n      } else if (currentValueType != null && newValueType != null && !allowableTypes.includes(newValueType)) {\n        console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in \" + ((_c = targetClass) === null || _c === void 0 ? void 0 : _c.name) + \" - can't apply type of [\" + newValueType + \"], allowed types are: [\" + allowableTypes + \"]\");\n        return \"continue\";\n      }\n      if (newValueType === 'array') {\n        ctr = ctr !== null && ctr !== void 0 ? ctr : constructors[propertyMatcherPath + \"[]\"];\n        if (ctr != null) {\n          var newValueArray = newValue;\n          targetAny[property] = newValueArray.map(function (v) {\n            return jsonApply(new ctr(), v, __assign(__assign({}, params), {\n              path: propertyPath,\n              matcherPath: propertyMatcherPath + '[]'\n            }));\n          });\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else if (newValueType === 'class-instance') {\n        targetAny[property] = newValue;\n      } else if (newValueType === 'object') {\n        if (currentValue != null) {\n          jsonApply(currentValue, newValue, __assign(__assign({}, params), {\n            path: propertyPath,\n            matcherPath: propertyMatcherPath\n          }));\n        } else if (ctr != null) {\n          targetAny[property] = jsonApply(new ctr(), newValue, __assign(__assign({}, params), {\n            path: propertyPath,\n            matcherPath: propertyMatcherPath\n          }));\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else {\n        targetAny[property] = newValue;\n      }\n    } catch (error) {\n      console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in [\" + ((_d = targetClass) === null || _d === void 0 ? void 0 : _d.name) + \"]; nested error is: \" + error.message);\n      return \"continue\";\n    }\n  };\n  for (var property in source) {\n    _loop_3(property);\n  }\n  return target;\n}\n/**\n * Walk the given JSON object graphs, invoking the visit() callback for every object encountered.\n * Arrays are descended into without a callback, however their elements will have the visit()\n * callback invoked if they are objects.\n *\n * @param json to traverse\n * @param visit callback for each non-primitive and non-array object found\n * @param opts.skip property names to skip when walking\n * @param jsons to traverse in parallel\n */\nexport function jsonWalk(json, visit, opts) {\n  var jsons = [];\n  for (var _i = 3; _i < arguments.length; _i++) {\n    jsons[_i - 3] = arguments[_i];\n  }\n  var _a;\n  var jsonType = classify(json);\n  var skip = opts.skip || [];\n  if (jsonType === 'array') {\n    json.forEach(function (element, index) {\n      var _a;\n      jsonWalk.apply(void 0, __spread([element, visit, opts], (_a = jsons) === null || _a === void 0 ? void 0 : _a.map(function (o) {\n        var _a;\n        return (_a = o) === null || _a === void 0 ? void 0 : _a[index];\n      })));\n    });\n    return;\n  } else if (jsonType !== 'object') {\n    return;\n  }\n  visit.apply(void 0, __spread([jsonType, json], jsons));\n  var _loop_4 = function (property) {\n    if (skip.indexOf(property) >= 0) {\n      return \"continue\";\n    }\n    var value = json[property];\n    var otherValues = (_a = jsons) === null || _a === void 0 ? void 0 : _a.map(function (o) {\n      var _a;\n      return (_a = o) === null || _a === void 0 ? void 0 : _a[property];\n    });\n    var valueType = classify(value);\n    if (valueType === 'object' || valueType === 'array') {\n      jsonWalk.apply(void 0, __spread([value, visit, opts], otherValues));\n    }\n  };\n  for (var property in json) {\n    _loop_4(property);\n  }\n}\n/**\n * Classify the type of a value to assist with handling for merge purposes.\n */\nexport function classify(value) {\n  if (value == null) {\n    return null;\n  } else if (value instanceof HTMLElement) {\n    return 'primitive';\n  } else if (value instanceof Array) {\n    return 'array';\n  } else if (value instanceof Date) {\n    return 'primitive';\n  } else if (typeof value === 'object' && value.constructor === Object) {\n    return 'object';\n  } else if (typeof value === 'function') {\n    return 'function';\n  } else if (typeof value === 'object' && value.constructor != null) {\n    return 'class-instance';\n  }\n  return 'primitive';\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spread","concat","__values","TypeError","jsonDiff","source","target","e_1","_a","sourceType","classify","targetType","some","targetElement","lhs","rhs","allProps","Set","keys","propsChangedCount","result","_loop_1","prop","take","v","lhsType","rhsType","diff","allProps_1","allProps_1_1","e_1_1","return","DELETE","NOT_SPECIFIED","jsonMerge","json","opts","e_2","_b","avoidDeepClone","jsonTypes","map","finalValue","Array","type","props","reduce","_loop_2","nextProp","values","j","filter","lastValue","types","includes","props_1","props_1_1","e_2_1","jsonApply","params","_c","_d","_e","path","undefined","_f","matcherPath","replace","_g","skip","_h","constructors","_j","allowedTypes","Error","_loop_3","property","propertyMatcherPath","indexOf","newValue","propertyPath","targetAny","targetClass","constructor","currentValue","ctr","currentValueType","newValueType","console","warn","name","allowableTypes","newValueArray","message","jsonWalk","visit","jsons","_i","jsonType","forEach","element","index","_loop_4","otherValues","valueType","HTMLElement","Date"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/ag-charts-community/dist/esm/es5/util/json.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/**\n * Performs a JSON-diff between a source and target JSON structure.\n *\n * On a per property basis, takes the target property value where:\n * - types are different.\n * - type is primitive.\n * - type is array and length or content have changed.\n *\n * Recurses for object types.\n *\n * @param source starting point for diff\n * @param target target for diff vs. source\n *\n * @returns `null` if no differences, or an object with the subset of properties that have changed.\n */\nexport function jsonDiff(source, target) {\n    var e_1, _a;\n    var sourceType = classify(source);\n    var targetType = classify(target);\n    if (targetType === 'array') {\n        if (sourceType !== 'array' || source.length !== target.length) {\n            return __spread(target);\n        }\n        if (target.some(function (targetElement, i) { var _a; return jsonDiff((_a = source) === null || _a === void 0 ? void 0 : _a[i], targetElement) != null; })) {\n            return __spread(target);\n        }\n        return null;\n    }\n    if (targetType === 'primitive') {\n        if (sourceType !== 'primitive') {\n            return __assign({}, target);\n        }\n        if (source !== target) {\n            return target;\n        }\n        return null;\n    }\n    var lhs = source || {};\n    var rhs = target || {};\n    var allProps = new Set(__spread(Object.keys(lhs), Object.keys(rhs)));\n    var propsChangedCount = 0;\n    var result = {};\n    var _loop_1 = function (prop) {\n        // Cheap-and-easy equality check.\n        if (lhs[prop] === rhs[prop]) {\n            return \"continue\";\n        }\n        var take = function (v) {\n            result[prop] = v;\n            propsChangedCount++;\n        };\n        var lhsType = classify(lhs[prop]);\n        var rhsType = classify(rhs[prop]);\n        if (lhsType !== rhsType) {\n            // Types changed, just take RHS.\n            take(rhs[prop]);\n            return \"continue\";\n        }\n        if (rhsType === 'primitive' || rhsType === null) {\n            take(rhs[prop]);\n            return \"continue\";\n        }\n        if (rhsType === 'array' && lhs[prop].length !== rhs[prop].length) {\n            // Arrays are different sizes, so just take target array.\n            take(rhs[prop]);\n            return \"continue\";\n        }\n        if (rhsType === 'class-instance') {\n            // Don't try to do anything tricky with array diffs!\n            take(rhs[prop]);\n            return \"continue\";\n        }\n        if (rhsType === 'function' && lhs[prop] !== rhs[prop]) {\n            take(rhs[prop]);\n            return \"continue\";\n        }\n        var diff = jsonDiff(lhs[prop], rhs[prop]);\n        if (diff !== null) {\n            take(diff);\n        }\n    };\n    try {\n        for (var allProps_1 = __values(allProps), allProps_1_1 = allProps_1.next(); !allProps_1_1.done; allProps_1_1 = allProps_1.next()) {\n            var prop = allProps_1_1.value;\n            _loop_1(prop);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (allProps_1_1 && !allProps_1_1.done && (_a = allProps_1.return)) _a.call(allProps_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return propsChangedCount === 0 ? null : result;\n}\n/**\n * Special value used by `jsonMerge` to signal that a property should be removed from the merged\n * output.\n */\nexport var DELETE = Symbol('<delete-property>');\nvar NOT_SPECIFIED = Symbol('<unspecified-property>');\n/**\n * Merge together the provide JSON object structures, with the precedence of application running\n * from higher indexes to lower indexes.\n *\n * Deep-clones all objects to avoid mutation of the inputs changing the output object. For arrays,\n * just performs a deep-clone of the entire array, no merging of elements attempted.\n *\n * @param json all json objects to merge\n * @param opts merge options\n * @param opts.avoidDeepClone contains a list of properties where deep clones should be avoided\n *\n * @returns the combination of all of the json inputs\n */\nexport function jsonMerge(json, opts) {\n    var e_2, _a;\n    var _b;\n    var avoidDeepClone = ((_b = opts) === null || _b === void 0 ? void 0 : _b.avoidDeepClone) || [];\n    var jsonTypes = json.map(function (v) { return classify(v); });\n    if (jsonTypes.some(function (v) { return v === 'array'; })) {\n        // Clone final array.\n        var finalValue = json[json.length - 1];\n        if (finalValue instanceof Array) {\n            return finalValue.map(function (v) {\n                var type = classify(v);\n                return type === 'array' ? jsonMerge([[], v], opts) : type === 'object' ? jsonMerge([{}, v], opts) : v;\n            });\n        }\n        return finalValue;\n    }\n    var result = {};\n    var props = new Set(json.map(function (v) { return (v != null ? Object.keys(v) : []); }).reduce(function (r, n) { return r.concat(n); }, []));\n    var _loop_2 = function (nextProp) {\n        var values = json\n            .map(function (j) { return (j != null && nextProp in j ? j[nextProp] : NOT_SPECIFIED); })\n            .filter(function (v) { return v !== NOT_SPECIFIED; });\n        if (values.length === 0) {\n            return \"continue\";\n        }\n        var lastValue = values[values.length - 1];\n        if (lastValue === DELETE) {\n            return \"continue\";\n        }\n        var types = values.map(function (v) { return classify(v); });\n        var type = types[0];\n        if (types.some(function (t) { return t !== type && t !== null; })) {\n            // Short-circuit if mismatching types.\n            result[nextProp] = lastValue;\n            return \"continue\";\n        }\n        if ((type === 'array' || type === 'object') && !avoidDeepClone.includes(nextProp)) {\n            result[nextProp] = jsonMerge(values, opts);\n        }\n        else if (type === 'array') {\n            // Arrays need to be shallow copied to avoid external mutation and allow jsonDiff to\n            // detect changes.\n            result[nextProp] = __spread(lastValue);\n        }\n        else {\n            // Just directly assign/overwrite.\n            result[nextProp] = lastValue;\n        }\n    };\n    try {\n        for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n            var nextProp = props_1_1.value;\n            _loop_2(nextProp);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return result;\n}\n/**\n * Recursively apply a JSON object into a class-hierarchy, optionally instantiating certain classes\n * by property name.\n *\n * @param target to apply source JSON properties into\n * @param source to be applied\n * @param params.path path for logging/error purposes, to aid with pinpointing problems\n * @param params.matcherPath path for pattern matching, to lookup allowedTypes override.\n * @param params.skip property names to skip from the source\n * @param params.constructors dictionary of property name to class constructors for properties that\n *                            require object construction\n * @param params.allowedTypes overrides by path for allowed property types\n */\nexport function jsonApply(target, source, params) {\n    if (params === void 0) { params = {}; }\n    var _a, _b, _c, _d;\n    var _e = params.path, path = _e === void 0 ? undefined : _e, _f = params.matcherPath, matcherPath = _f === void 0 ? path ? path.replace(/(\\[[0-9+]+\\])/i, '[]') : undefined : _f, _g = params.skip, skip = _g === void 0 ? [] : _g, _h = params.constructors, constructors = _h === void 0 ? {} : _h, _j = params.allowedTypes, allowedTypes = _j === void 0 ? {} : _j;\n    if (target == null) {\n        throw new Error(\"AG Charts - target is uninitialised: \" + (path || '<root>'));\n    }\n    if (source == null) {\n        return target;\n    }\n    var targetType = classify(target);\n    var _loop_3 = function (property) {\n        var propertyMatcherPath = \"\" + (matcherPath ? matcherPath + '.' : '') + property;\n        if (skip.indexOf(propertyMatcherPath) >= 0) {\n            return \"continue\";\n        }\n        var newValue = source[property];\n        var propertyPath = \"\" + (path ? path + '.' : '') + property;\n        var targetAny = target;\n        var targetClass = targetAny.constructor;\n        var currentValue = targetAny[property];\n        var ctr = (_a = constructors[property], (_a !== null && _a !== void 0 ? _a : constructors[propertyMatcherPath]));\n        try {\n            var currentValueType = classify(currentValue);\n            var newValueType = classify(newValue);\n            if (targetType === 'class-instance' && !(property in target || targetAny.hasOwnProperty(property))) {\n                console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in \" + ((_b = targetClass) === null || _b === void 0 ? void 0 : _b.name) + \" - property is unknown\");\n                return \"continue\";\n            }\n            var allowableTypes = allowedTypes[propertyMatcherPath] || [currentValueType];\n            if (currentValueType === 'class-instance' && newValueType === 'object') {\n                // Allowed, this is the common case! - do not error.\n            }\n            else if (currentValueType != null && newValueType != null && !allowableTypes.includes(newValueType)) {\n                console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in \" + ((_c = targetClass) === null || _c === void 0 ? void 0 : _c.name) + \" - can't apply type of [\" + newValueType + \"], allowed types are: [\" + allowableTypes + \"]\");\n                return \"continue\";\n            }\n            if (newValueType === 'array') {\n                ctr = (ctr !== null && ctr !== void 0 ? ctr : constructors[propertyMatcherPath + \"[]\"]);\n                if (ctr != null) {\n                    var newValueArray = newValue;\n                    targetAny[property] = newValueArray.map(function (v) {\n                        return jsonApply(new ctr(), v, __assign(__assign({}, params), { path: propertyPath, matcherPath: propertyMatcherPath + '[]' }));\n                    });\n                }\n                else {\n                    targetAny[property] = newValue;\n                }\n            }\n            else if (newValueType === 'class-instance') {\n                targetAny[property] = newValue;\n            }\n            else if (newValueType === 'object') {\n                if (currentValue != null) {\n                    jsonApply(currentValue, newValue, __assign(__assign({}, params), { path: propertyPath, matcherPath: propertyMatcherPath }));\n                }\n                else if (ctr != null) {\n                    targetAny[property] = jsonApply(new ctr(), newValue, __assign(__assign({}, params), { path: propertyPath, matcherPath: propertyMatcherPath }));\n                }\n                else {\n                    targetAny[property] = newValue;\n                }\n            }\n            else {\n                targetAny[property] = newValue;\n            }\n        }\n        catch (error) {\n            console.warn(\"AG Charts - unable to set [\" + propertyPath + \"] in [\" + ((_d = targetClass) === null || _d === void 0 ? void 0 : _d.name) + \"]; nested error is: \" + error.message);\n            return \"continue\";\n        }\n    };\n    for (var property in source) {\n        _loop_3(property);\n    }\n    return target;\n}\n/**\n * Walk the given JSON object graphs, invoking the visit() callback for every object encountered.\n * Arrays are descended into without a callback, however their elements will have the visit()\n * callback invoked if they are objects.\n *\n * @param json to traverse\n * @param visit callback for each non-primitive and non-array object found\n * @param opts.skip property names to skip when walking\n * @param jsons to traverse in parallel\n */\nexport function jsonWalk(json, visit, opts) {\n    var jsons = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n        jsons[_i - 3] = arguments[_i];\n    }\n    var _a;\n    var jsonType = classify(json);\n    var skip = opts.skip || [];\n    if (jsonType === 'array') {\n        json.forEach(function (element, index) {\n            var _a;\n            jsonWalk.apply(void 0, __spread([element, visit, opts], (_a = jsons) === null || _a === void 0 ? void 0 : _a.map(function (o) { var _a; return (_a = o) === null || _a === void 0 ? void 0 : _a[index]; })));\n        });\n        return;\n    }\n    else if (jsonType !== 'object') {\n        return;\n    }\n    visit.apply(void 0, __spread([jsonType, json], jsons));\n    var _loop_4 = function (property) {\n        if (skip.indexOf(property) >= 0) {\n            return \"continue\";\n        }\n        var value = json[property];\n        var otherValues = (_a = jsons) === null || _a === void 0 ? void 0 : _a.map(function (o) { var _a; return (_a = o) === null || _a === void 0 ? void 0 : _a[property]; });\n        var valueType = classify(value);\n        if (valueType === 'object' || valueType === 'array') {\n            jsonWalk.apply(void 0, __spread([value, visit, opts], otherValues));\n        }\n    };\n    for (var property in json) {\n        _loop_4(property);\n    }\n}\n/**\n * Classify the type of a value to assist with handling for merge purposes.\n */\nexport function classify(value) {\n    if (value == null) {\n        return null;\n    }\n    else if (value instanceof HTMLElement) {\n        return 'primitive';\n    }\n    else if (value instanceof Array) {\n        return 'array';\n    }\n    else if (value instanceof Date) {\n        return 'primitive';\n    }\n    else if (typeof value === 'object' && value.constructor === Object) {\n        return 'object';\n    }\n    else if (typeof value === 'function') {\n        return 'function';\n    }\n    else if (typeof value === 'object' && value.constructor != null) {\n        return 'class-instance';\n    }\n    return 'primitive';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}