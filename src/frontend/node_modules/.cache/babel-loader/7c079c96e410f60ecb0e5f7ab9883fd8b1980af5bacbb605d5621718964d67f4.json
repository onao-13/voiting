{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_main_header = _resolveComponent(\"main-header\");\n  const _component_pie_chart = _resolveComponent(\"pie-chart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_main_header, null, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.event.name), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", null, [_createVNode(_component_pie_chart, {\n    id: \"printCons\"\n  }), _createElementVNode(\"button\", {\n    id: \"no-print\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.print && $options.print(...args)),\n    class: \"btn\"\n  }, \"Скачать в pdf\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACEA,aAAyCC;sBAA5B,MAAc,mCAAZC,UAAK,CAACC,IAAI;;;MAC1BC,oBAGM,cAFLJ,aAA2BK;IAAhBC,EAAE,EAAC;EAAW,IACzBF,oBAAuE;IAA/DE,EAAE,EAAC,UAAU;IAAEC,OAAK,yCAAEC,yCAAK;IAAEC,KAAK,EAAC;KAAM,eAAa","names":["_createVNode","_component_main_header","_ctx","name","_createElementVNode","_component_pie_chart","id","onClick","$options","class"],"sourceRoot":"","sources":["C:\\Users\\guzny\\OneDrive\\Рабочий стол\\frontend\\src\\components\\EventsPageItem.vue"],"sourcesContent":["<template>\r\n  <main-header>{{event.name}}</main-header>\r\n <div>\r\n  <pie-chart id=\"printCons\"/>\r\n  <button id=\"no-print\" @click=\"print\" class=\"btn\">Скачать в pdf</button>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport PieChart from './PieChart.vue';\r\n\r\nimport VueHtml2pdf from 'vue-html2pdf'\r\n\r\nexport default {\r\n  components: { PieChart},\r\n\r\n data:() => ({\r\n  event: {\r\n\r\n  }\r\n }),\r\n\r\n methods: {\r\n  generateReport () {\r\n    this.$refs.html2Pdf.generatePdf()\r\n  },\r\n\r\n  getEvent() {\r\n   this.event = this.EVENTS[this.$route.params['id']-1]\r\n  },\r\n\r\n  print() {\r\n     //get table html\r\n    const pdfTable = document.getElementById('printCons');\r\n    //html to pdf format\r\n    var html = htmlToPdfmake(pdfTable.innerHTML);\r\n\r\n    const documentDefinition = { content: html };\r\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n    pdfMake.createPdf(documentDefinition).open();\r\n  }\r\n },\r\n\r\n computed: {\r\n   ...mapGetters([\r\n     'EVENTS',\r\n   ]),\r\n },\r\n\r\n mounted() {\r\n  this.getEvent()\r\n },\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.btn {\r\n  background: none;\r\n  border: 1px solid #000;\r\n  cursor: pointer;\r\n  padding: 8px 12px;\r\n  color: #000;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}