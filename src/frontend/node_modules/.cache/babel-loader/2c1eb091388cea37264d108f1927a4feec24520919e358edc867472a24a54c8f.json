{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar model_1 = require(\"../util/model\");\nvar util_1 = require(\"zrender/lib/core/util\");\nvar log_1 = require(\"../util/log\");\nvar QUERY_REG = /^(min|max)?(.+)$/;\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      util_1.each(model_1.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && util_1.isTypedArray(series.data) && util_1.setAsPrimitive(series.data);\n      });\n      util_1.each(model_1.normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && util_1.isTypedArray(dataset.source) && util_1.setAsPrimitive(dataset.source);\n      });\n    }\n    rawOption = util_1.clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return util_1.clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n      if (timelineModel) {\n        option = util_1.clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n    return option;\n  };\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n    var ecHeight = this._api.getHeight();\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = util_1.map(indices, function (index) {\n        return util_1.clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n    this._currentMediaIndices = indices;\n    return result;\n  };\n  return OptionManager;\n}();\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n    baseOption = rawOption;\n  }\n  if (hasMedia) {\n    if (util_1.isArray(mediaOnRoot)) {\n      util_1.each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && util_1.isObject(singleMedia.query) && util_1.isObject(singleMedia.query.option)) {\n            log_1.error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n  doPreprocess(baseOption);\n  util_1.each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  util_1.each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n  function doPreprocess(option) {\n    util_1.each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  util_1.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\nexports[\"default\"] = OptionManager;","map":{"version":3,"names":["exports","__esModule","model_1","require","util_1","log_1","QUERY_REG","OptionManager","api","_timelineOptions","_mediaList","_currentMediaIndices","_api","prototype","setOption","rawOption","optionPreprocessorFuncs","opt","each","normalizeToArray","series","data","isTypedArray","setAsPrimitive","dataset","source","clone","optionBackup","_optionBackup","newParsedOption","parseRawOption","_newBaseOption","baseOption","timelineOptions","length","mediaList","mediaDefault","mountOption","isRecreate","_mediaDefault","getTimelineOption","ecModel","option","timelineModel","getComponent","getCurrentIndex","getMediaOption","ecWidth","getWidth","ecHeight","getHeight","indices","result","i","len","applyMediaQuery","query","push","indicesEquals","map","index","isNew","declaredBaseOption","timelineOnRoot","timeline","timelineOptionsOnRoot","options","mediaOnRoot","media","hasMedia","hasTimeline","isArray","singleMedia","process","env","NODE_ENV","isObject","error","doPreprocess","preProcess","realMap","width","height","aspectratio","applicatable","value","attr","matched","match","operator","realAttr","toLowerCase","compare","real","expect","indices1","indices2","join"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/model/OptionManager.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../util/log\");\n\nvar QUERY_REG = /^(min|max)?(.+)$/;\n\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      util_1.each(model_1.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && util_1.isTypedArray(series.data) && util_1.setAsPrimitive(series.data);\n      });\n      util_1.each(model_1.normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && util_1.isTypedArray(dataset.source) && util_1.setAsPrimitive(dataset.source);\n      });\n    }\n\n    rawOption = util_1.clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return util_1.clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = util_1.clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n\n    return option;\n  };\n\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = util_1.map(indices, function (index) {\n        return util_1.clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n\n    this._currentMediaIndices = indices;\n    return result;\n  };\n\n  return OptionManager;\n}();\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n\n    baseOption = rawOption;\n  }\n\n  if (hasMedia) {\n    if (util_1.isArray(mediaOnRoot)) {\n      util_1.each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && util_1.isObject(singleMedia.query) && util_1.isObject(singleMedia.query.option)) {\n            log_1.error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n\n  doPreprocess(baseOption);\n  util_1.each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  util_1.each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n\n  function doPreprocess(option) {\n    util_1.each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  util_1.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\n\nexports[\"default\"] = OptionManager;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}