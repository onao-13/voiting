{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"zrender/lib/core/util\");\nvar modelUtil = require(\"../util/model\");\nvar Model_1 = require(\"./Model\");\nvar Component_1 = require(\"./Component\");\nvar globalDefault_1 = require(\"./globalDefault\");\nvar sourceHelper_1 = require(\"../data/helper/sourceHelper\");\nvar internalComponentCreator_1 = require(\"./internalComponentCreator\");\nvar palette_1 = require(\"./mixin/palette\");\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\nvar GlobalModel = function (_super) {\n  tslib_1.__extends(GlobalModel, _super);\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model_1[\"default\"](theme);\n    this._locale = new Model_1[\"default\"](locale);\n    this._optionManager = optionManager;\n  };\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    util_1.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n    var innerOpt = normalizeSetOptionInput(opts);\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n    this._resetOption(null, innerOpt);\n  };\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n        this._mergeOption(baseOption, opt);\n      }\n      optionChanged = true;\n    }\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      if (timelineOption) {\n        optionChanged = true;\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n      if (mediaOptions.length) {\n        util_1.each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n    return optionChanged;\n  };\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = util_1.createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    sourceHelper_1.resetSourceDefaulter(this);\n    util_1.each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n      if (!Component_1[\"default\"].hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? util_1.clone(componentOption) : util_1.merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (Component_1[\"default\"].hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n    Component_1[\"default\"].topologicalTravel(newCmptTypes, Component_1[\"default\"].getAllClassMainTypes(), visitComponent, this);\n    function visitComponent(mainType) {\n      var newCmptOptionList = internalComponentCreator_1.concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, Component_1[\"default\"]);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      util_1.each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = Component_1[\"default\"].getClass(mainType, resultItem.keyInfo.subType, true);\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = util_1.extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            util_1.extend(componentModel, extraOpt);\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n  GlobalModel.prototype.getOption = function () {\n    var option = util_1.clone(this.option);\n    util_1.each(option, function (optInMainType, mainType) {\n      if (Component_1[\"default\"].hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n    if (list) {\n      var cmpt = list[idx || 0];\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n    if (!mainType) {\n      return [];\n    }\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n    var cmpts = this._componentsMap.get(mainType);\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n    var result;\n    if (index != null) {\n      result = [];\n      util_1.each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = util_1.filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n    return filterBySubType(result, condition);\n  };\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : util_1.filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n    function doFilter(res) {\n      return condition.filter ? util_1.filter(res, condition.filter) : res;\n    }\n  };\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n    if (util_1.isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = util_1.isString(mainType) ? componentsMap.get(mainType) : util_1.isObject(mainType) ? this.findComponents(mainType) : null;\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n  GlobalModel.prototype.getSeries = function () {\n    return util_1.filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    util_1.each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return util_1.each(this.getSeriesByType(subType), cb, context);\n  };\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    util_1.each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = util_1.createHashMap(newSeriesIndices);\n  };\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (Component_1[\"default\"].hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    Component_1[\"default\"].topologicalTravel(componentTypes, Component_1[\"default\"].getAllClassMainTypes(), function (componentType) {\n      util_1.each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function (ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      util_1.each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = util_1.createHashMap(seriesIndices);\n    };\n    assertSeriesInitialized = function (ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n    initBase = function (ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = 1;\n      ecModel._componentsMap = util_1.createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = util_1.createHashMap();\n      var airaOption = baseOption.aria;\n      if (util_1.isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n      mergeTheme(baseOption, ecModel._theme.option);\n      util_1.merge(baseOption, globalDefault_1[\"default\"], false);\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n  return GlobalModel;\n}(Model_1[\"default\"]);\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  util_1.each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n    if (!Component_1[\"default\"].hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? util_1.clone(themeItem) : util_1.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (util_1.isArray(idOrName)) {\n    var keyMap_1 = util_1.createHashMap();\n    util_1.each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? util_1.filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = util_1.createHashMap();\n  opts && util_1.each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(Component_1[\"default\"].hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\nutil_1.mixin(GlobalModel, palette_1.PaletteMixin);\nexports[\"default\"] = GlobalModel;","map":{"version":3,"names":["exports","__esModule","tslib_1","require","util_1","modelUtil","Model_1","Component_1","globalDefault_1","sourceHelper_1","internalComponentCreator_1","palette_1","reCreateSeriesIndices","assertSeriesInitialized","initBase","OPTION_INNER_KEY","GlobalModel","_super","__extends","apply","arguments","prototype","init","option","parentModel","ecModel","theme","locale","optionManager","_theme","_locale","_optionManager","setOption","opts","optionPreprocessorFuncs","assert","innerOpt","normalizeSetOptionInput","_resetOption","resetOption","type","opt","optionChanged","baseOption","mountOption","restoreData","_mergeOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","length","each","mediaOption","mergeOption","newOption","componentsMap","_componentsMap","componentsCount","_componentsCount","newCmptTypes","newCmptTypeMap","createHashMap","replaceMergeMainTypeMap","resetSourceDefaulter","componentOption","mainType","hasClass","clone","merge","push","set","val","mainTypeInReplaceMerge","get","topologicalTravel","getAllClassMainTypes","visitComponent","newCmptOptionList","concatInternalOptions","normalizeToArray","oldCmptList","mergeMode","mappingResult","mappingToExists","setComponentTypeToKeyInfo","optionsByMainType","cmptsByMainType","cmptsCountByMainType","resultItem","index","componentModel","existing","newCmptOption","optionUpdated","ComponentModelClass","getClass","keyInfo","subType","constructor","name","extraOpt","extend","componentIndex","brandNew","__requireNewView","_seriesIndices","getOption","optInMainType","realLen","metNonInner","i","isComponentIdInternal","getTheme","getLocaleModel","getLocale","localePosition","setUpdatePayload","payload","_payload","getUpdatePayload","getComponent","idx","list","cmpt","queryComponents","condition","id","cmpts","result","queryByIdOrName","filter","filterBySubType","findComponents","query","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","res","eachComponent","cb","context","isFunction","ctxForAll_1","cbForAll_1","componentType","call","isString","isObject","getSeriesByName","nameStr","convertOptionIdName","oneSeries","getSeriesByIndex","seriesIndex","getSeriesByType","getSeries","slice","getSeriesCount","eachSeries","rawSeriesIndex","series","eachRawSeries","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","seriesModel","_seriesIndicesMap","getCurrentSeriesIndices","filterSeries","newSeriesIndices","seriesRawIdx","componentTypes","components","component","isNotTargetSeries","internalField","seriesIndices","process","env","NODE_ENV","Error","airaOption","aria","enabled","mergeTheme","seriesId","name_1","seriesName","notMergeColorLayer","color","colorLayer","themeItem","attr","idOrName","isArray","keyMap_1","idOrNameItem","idName","idName_1","hasOwnProperty","replaceMerge","mixin","PaletteMixin"],"sources":["C:/Users/guzny/OneDrive/Рабочий стол/frontend/node_modules/echarts/lib/model/Global.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model_1 = require(\"./Model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar globalDefault_1 = require(\"./globalDefault\");\n\nvar sourceHelper_1 = require(\"../data/helper/sourceHelper\");\n\nvar internalComponentCreator_1 = require(\"./internalComponentCreator\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n\nvar GlobalModel = function (_super) {\n  tslib_1.__extends(GlobalModel, _super);\n\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model_1[\"default\"](theme);\n    this._locale = new Model_1[\"default\"](locale);\n    this._optionManager = optionManager;\n  };\n\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    util_1.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n    var innerOpt = normalizeSetOptionInput(opts);\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n\n    this._resetOption(null, innerOpt);\n  };\n\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n\n        this._mergeOption(baseOption, opt);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n\n      if (timelineOption) {\n        optionChanged = true;\n\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n\n      if (mediaOptions.length) {\n        util_1.each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  };\n\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = util_1.createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    sourceHelper_1.resetSourceDefaulter(this);\n    util_1.each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!Component_1[\"default\"].hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? util_1.clone(componentOption) : util_1.merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (Component_1[\"default\"].hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n\n    Component_1[\"default\"].topologicalTravel(newCmptTypes, Component_1[\"default\"].getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType) {\n      var newCmptOptionList = internalComponentCreator_1.concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, Component_1[\"default\"]);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      util_1.each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = Component_1[\"default\"].getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = util_1.extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            util_1.extend(componentModel, extraOpt);\n\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n\n  GlobalModel.prototype.getOption = function () {\n    var option = util_1.clone(this.option);\n    util_1.each(option, function (optInMainType, mainType) {\n      if (Component_1[\"default\"].hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      var cmpt = list[idx || 0];\n\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cmpts = this._componentsMap.get(mainType);\n\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      result = [];\n      util_1.each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = util_1.filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n\n    return filterBySubType(result, condition);\n  };\n\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : util_1.filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? util_1.filter(res, condition.filter) : res;\n    }\n  };\n\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (util_1.isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = util_1.isString(mainType) ? componentsMap.get(mainType) : util_1.isObject(mainType) ? this.findComponents(mainType) : null;\n\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n\n  GlobalModel.prototype.getSeries = function () {\n    return util_1.filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    util_1.each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return util_1.each(this.getSeriesByType(subType), cb, context);\n  };\n\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    util_1.each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = util_1.createHashMap(newSeriesIndices);\n  };\n\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (Component_1[\"default\"].hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    Component_1[\"default\"].topologicalTravel(componentTypes, Component_1[\"default\"].getAllClassMainTypes(), function (componentType) {\n      util_1.each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function (ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      util_1.each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = util_1.createHashMap(seriesIndices);\n    };\n\n    assertSeriesInitialized = function (ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n\n    initBase = function (ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = 1;\n      ecModel._componentsMap = util_1.createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = util_1.createHashMap();\n      var airaOption = baseOption.aria;\n\n      if (util_1.isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n\n      mergeTheme(baseOption, ecModel._theme.option);\n      util_1.merge(baseOption, globalDefault_1[\"default\"], false);\n\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n\n  return GlobalModel;\n}(Model_1[\"default\"]);\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\n\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  util_1.each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n\n    if (!Component_1[\"default\"].hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? util_1.clone(themeItem) : util_1.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (util_1.isArray(idOrName)) {\n    var keyMap_1 = util_1.createHashMap();\n    util_1.each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\n\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? util_1.filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\n\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = util_1.createHashMap();\n  opts && util_1.each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(Component_1[\"default\"].hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\n\nutil_1.mixin(GlobalModel, palette_1.PaletteMixin);\nexports[\"default\"] = GlobalModel;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}